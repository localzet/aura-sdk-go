// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"
)

// ApiTokensControllerDeleteParams is parameters of ApiTokensController_delete operation.
type ApiTokensControllerDeleteParams struct {
	// UUID of the API token.
	UUID string
}

// HostsControllerDeleteHostParams is parameters of HostsController_deleteHost operation.
type HostsControllerDeleteHostParams struct {
	// UUID of the host.
	UUID string
}

// HostsControllerGetOneHostParams is parameters of HostsController_getOneHost operation.
type HostsControllerGetOneHostParams struct {
	// UUID of the host.
	UUID string
}

// HwidUserDevicesControllerGetUserHwidDevicesParams is parameters of HwidUserDevicesController_getUserHwidDevices operation.
type HwidUserDevicesControllerGetUserHwidDevicesParams struct {
	// UUID of the user.
	UserUuid string
}

// NodesControllerDeleteNodeParams is parameters of NodesController_deleteNode operation.
type NodesControllerDeleteNodeParams struct {
	// Node UUID.
	UUID string
}

// NodesControllerDisableNodeParams is parameters of NodesController_disableNode operation.
type NodesControllerDisableNodeParams struct {
	// Node UUID.
	UUID string
}

// NodesControllerEnableNodeParams is parameters of NodesController_enableNode operation.
type NodesControllerEnableNodeParams struct {
	// Node UUID.
	UUID string
}

// NodesControllerGetOneNodeParams is parameters of NodesController_getOneNode operation.
type NodesControllerGetOneNodeParams struct {
	// Node UUID.
	UUID string
}

// NodesControllerRestartNodeParams is parameters of NodesController_restartNode operation.
type NodesControllerRestartNodeParams struct {
	// Node UUID.
	UUID string
}

// NodesUsageHistoryControllerGetNodesUsageByRangeParams is parameters of NodesUsageHistoryController_getNodesUsageByRange operation.
type NodesUsageHistoryControllerGetNodesUsageByRangeParams struct {
	// Start date.
	Start time.Time
	// End date.
	End time.Time
}

// NodesUserUsageHistoryControllerGetNodeUserUsageParams is parameters of NodesUserUsageHistoryController_getNodeUserUsage operation.
type NodesUserUsageHistoryControllerGetNodeUserUsageParams struct {
	// Start date.
	Start time.Time
	// End date.
	End time.Time
	// UUID of the node.
	UUID string
}

// SubscriptionControllerGetSubscriptionParams is parameters of SubscriptionController_getSubscription operation.
type SubscriptionControllerGetSubscriptionParams struct {
	// Short UUID of the user.
	ShortUuid string
}

// SubscriptionControllerGetSubscriptionByClientTypeParams is parameters of SubscriptionController_getSubscriptionByClientType operation.
type SubscriptionControllerGetSubscriptionByClientTypeParams struct {
	// Client type.
	ClientType SubscriptionControllerGetSubscriptionByClientTypeClientType
	// Short UUID of the user.
	ShortUuid string
}

// SubscriptionControllerGetSubscriptionInfoByShortUuidParams is parameters of SubscriptionController_getSubscriptionInfoByShortUuid operation.
type SubscriptionControllerGetSubscriptionInfoByShortUuidParams struct {
	// Short UUID of the user.
	ShortUuid string
}

// SubscriptionControllerGetSubscriptionWithTypeParams is parameters of SubscriptionController_getSubscriptionWithType operation.
type SubscriptionControllerGetSubscriptionWithTypeParams struct {
	// Subscription type (required if encodedTag is provided). Only SS is supported for now.
	Type string
	// Base64 encoded tag for Outline config. This paramter is optional. It is required only when type=ss.
	EncodedTag string
	// Short UUID of the user.
	ShortUuid string
}

// SubscriptionTemplateControllerGetTemplateParams is parameters of SubscriptionTemplateController_getTemplate operation.
type SubscriptionTemplateControllerGetTemplateParams struct {
	// Template type.
	TemplateType SubscriptionTemplateControllerGetTemplateTemplateType
}

// SubscriptionsControllerGetAllSubscriptionsParams is parameters of SubscriptionsController_getAllSubscriptions operation.
type SubscriptionsControllerGetAllSubscriptionsParams struct {
	// Number of subscriptions to return, no more than 500.
	Size OptFloat64
	// Start index (offset) of the users to return, default is 0.
	Start OptFloat64
}

// SubscriptionsControllerGetSubscriptionByUsernameParams is parameters of SubscriptionsController_getSubscriptionByUsername operation.
type SubscriptionsControllerGetSubscriptionByUsernameParams struct {
	// Username of the user.
	Username string
}

// UsersControllerActivateAllInboundsParams is parameters of UsersController_activateAllInbounds operation.
type UsersControllerActivateAllInboundsParams struct {
	// UUID of the user.
	UUID string
}

// UsersControllerDeleteUserParams is parameters of UsersController_deleteUser operation.
type UsersControllerDeleteUserParams struct {
	// UUID of the user.
	UUID string
}

// UsersControllerDisableUserParams is parameters of UsersController_disableUser operation.
type UsersControllerDisableUserParams struct {
	// UUID of the user.
	UUID string
}

// UsersControllerEnableUserParams is parameters of UsersController_enableUser operation.
type UsersControllerEnableUserParams struct {
	// UUID of the user.
	UUID string
}

// UsersControllerGetAllUsersParams is parameters of UsersController_getAllUsers operation.
type UsersControllerGetAllUsersParams struct {
	// Page size for pagination.
	Size OptFloat64
	// Offset for pagination.
	Start OptFloat64
}

// UsersControllerGetUserByShortUuidParams is parameters of UsersController_getUserByShortUuid operation.
type UsersControllerGetUserByShortUuidParams struct {
	// Short UUID of the user.
	ShortUuid string
}

// UsersControllerGetUserBySubscriptionUuidParams is parameters of UsersController_getUserBySubscriptionUuid operation.
type UsersControllerGetUserBySubscriptionUuidParams struct {
	// UUID of the subscription.
	SubscriptionUuid string
}

// UsersControllerGetUserByTelegramIdParams is parameters of UsersController_getUserByTelegramId operation.
type UsersControllerGetUserByTelegramIdParams struct {
	// Telegram ID of the user.
	TelegramId string
}

// UsersControllerGetUserByUsernameParams is parameters of UsersController_getUserByUsername operation.
type UsersControllerGetUserByUsernameParams struct {
	// Username of the user.
	Username string
}

// UsersControllerGetUserByUuidParams is parameters of UsersController_getUserByUuid operation.
type UsersControllerGetUserByUuidParams struct {
	// UUID of the user.
	UUID string
}

// UsersControllerGetUsersByEmailParams is parameters of UsersController_getUsersByEmail operation.
type UsersControllerGetUsersByEmailParams struct {
	// Email of the user.
	Email string
}

// UsersControllerGetUsersByTagParams is parameters of UsersController_getUsersByTag operation.
type UsersControllerGetUsersByTagParams struct {
	// Tag of the user.
	Tag string
}

// UsersControllerResetUserTrafficParams is parameters of UsersController_resetUserTraffic operation.
type UsersControllerResetUserTrafficParams struct {
	// UUID of the user.
	UUID string
}

// UsersControllerRevokeUserSubscriptionParams is parameters of UsersController_revokeUserSubscription operation.
type UsersControllerRevokeUserSubscriptionParams struct {
	// UUID of the user.
	UUID string
}

// UsersStatsControllerGetUserUsageByRangeParams is parameters of UsersStatsController_getUserUsageByRange operation.
type UsersStatsControllerGetUserUsageByRangeParams struct {
	// Start date.
	Start time.Time
	// End date.
	End time.Time
	// UUID of the user.
	UUID string
}
