// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
)

// Ref: #/components/schemas/ActivateAllInboundsResponseDto
type ActivateAllInboundsResponseDto struct {
	Response ActivateAllInboundsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *ActivateAllInboundsResponseDto) GetResponse() ActivateAllInboundsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *ActivateAllInboundsResponseDto) SetResponse(val ActivateAllInboundsResponseDtoResponse) {
	s.Response = val
}

func (*ActivateAllInboundsResponseDto) usersControllerActivateAllInboundsRes() {}

type ActivateAllInboundsResponseDtoResponse struct {
	UUID                     uuid.UUID                                       `json:"uuid"`
	SubscriptionUuid         uuid.UUID                                       `json:"subscriptionUuid"`
	ShortUuid                string                                          `json:"shortUuid"`
	Username                 string                                          `json:"username"`
	Status                   OptActivateAllInboundsResponseDtoResponseStatus `json:"status"`
	UsedTrafficBytes         float64                                         `json:"usedTrafficBytes"`
	LifetimeUsedTrafficBytes float64                                         `json:"lifetimeUsedTrafficBytes"`
	TrafficLimitBytes        OptInt                                          `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy  `json:"trafficLimitStrategy"`
	SubLastUserAgent     NilString                                                      `json:"subLastUserAgent"`
	SubLastOpenedAt      NilDateTime                                                    `json:"subLastOpenedAt"`
	ExpireAt             time.Time                                                      `json:"expireAt"`
	OnlineAt             NilDateTime                                                    `json:"onlineAt"`
	SubRevokedAt         NilDateTime                                                    `json:"subRevokedAt"`
	LastTrafficResetAt   NilDateTime                                                    `json:"lastTrafficResetAt"`
	TrojanPassword       string                                                         `json:"trojanPassword"`
	VlessUuid            uuid.UUID                                                      `json:"vlessUuid"`
	SsPassword           string                                                         `json:"ssPassword"`
	Description          NilString                                                      `json:"description"`
	Tag                  NilString                                                      `json:"tag"`
	TelegramId           NilInt                                                         `json:"telegramId"`
	Email                NilString                                                      `json:"email"`
	HwidDeviceLimit      NilInt                                                         `json:"hwidDeviceLimit"`
	CreatedAt            time.Time                                                      `json:"createdAt"`
	UpdatedAt            time.Time                                                      `json:"updatedAt"`
	ActiveUserInbounds   []ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem `json:"activeUserInbounds"`
	SubscriptionUrl      string                                                         `json:"subscriptionUrl"`
	LastConnectedNode    NilActivateAllInboundsResponseDtoResponseLastConnectedNode     `json:"lastConnectedNode"`
	Happ                 ActivateAllInboundsResponseDtoResponseHapp                     `json:"happ"`
}

// GetUUID returns the value of UUID.
func (s *ActivateAllInboundsResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetSubscriptionUuid returns the value of SubscriptionUuid.
func (s *ActivateAllInboundsResponseDtoResponse) GetSubscriptionUuid() uuid.UUID {
	return s.SubscriptionUuid
}

// GetShortUuid returns the value of ShortUuid.
func (s *ActivateAllInboundsResponseDtoResponse) GetShortUuid() string {
	return s.ShortUuid
}

// GetUsername returns the value of Username.
func (s *ActivateAllInboundsResponseDtoResponse) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *ActivateAllInboundsResponseDtoResponse) GetStatus() OptActivateAllInboundsResponseDtoResponseStatus {
	return s.Status
}

// GetUsedTrafficBytes returns the value of UsedTrafficBytes.
func (s *ActivateAllInboundsResponseDtoResponse) GetUsedTrafficBytes() float64 {
	return s.UsedTrafficBytes
}

// GetLifetimeUsedTrafficBytes returns the value of LifetimeUsedTrafficBytes.
func (s *ActivateAllInboundsResponseDtoResponse) GetLifetimeUsedTrafficBytes() float64 {
	return s.LifetimeUsedTrafficBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *ActivateAllInboundsResponseDtoResponse) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *ActivateAllInboundsResponseDtoResponse) GetTrafficLimitStrategy() OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetSubLastUserAgent returns the value of SubLastUserAgent.
func (s *ActivateAllInboundsResponseDtoResponse) GetSubLastUserAgent() NilString {
	return s.SubLastUserAgent
}

// GetSubLastOpenedAt returns the value of SubLastOpenedAt.
func (s *ActivateAllInboundsResponseDtoResponse) GetSubLastOpenedAt() NilDateTime {
	return s.SubLastOpenedAt
}

// GetExpireAt returns the value of ExpireAt.
func (s *ActivateAllInboundsResponseDtoResponse) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetOnlineAt returns the value of OnlineAt.
func (s *ActivateAllInboundsResponseDtoResponse) GetOnlineAt() NilDateTime {
	return s.OnlineAt
}

// GetSubRevokedAt returns the value of SubRevokedAt.
func (s *ActivateAllInboundsResponseDtoResponse) GetSubRevokedAt() NilDateTime {
	return s.SubRevokedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *ActivateAllInboundsResponseDtoResponse) GetLastTrafficResetAt() NilDateTime {
	return s.LastTrafficResetAt
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *ActivateAllInboundsResponseDtoResponse) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *ActivateAllInboundsResponseDtoResponse) GetVlessUuid() uuid.UUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *ActivateAllInboundsResponseDtoResponse) GetSsPassword() string {
	return s.SsPassword
}

// GetDescription returns the value of Description.
func (s *ActivateAllInboundsResponseDtoResponse) GetDescription() NilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *ActivateAllInboundsResponseDtoResponse) GetTag() NilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *ActivateAllInboundsResponseDtoResponse) GetTelegramId() NilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *ActivateAllInboundsResponseDtoResponse) GetEmail() NilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *ActivateAllInboundsResponseDtoResponse) GetHwidDeviceLimit() NilInt {
	return s.HwidDeviceLimit
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ActivateAllInboundsResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ActivateAllInboundsResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetActiveUserInbounds returns the value of ActiveUserInbounds.
func (s *ActivateAllInboundsResponseDtoResponse) GetActiveUserInbounds() []ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem {
	return s.ActiveUserInbounds
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *ActivateAllInboundsResponseDtoResponse) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetLastConnectedNode returns the value of LastConnectedNode.
func (s *ActivateAllInboundsResponseDtoResponse) GetLastConnectedNode() NilActivateAllInboundsResponseDtoResponseLastConnectedNode {
	return s.LastConnectedNode
}

// GetHapp returns the value of Happ.
func (s *ActivateAllInboundsResponseDtoResponse) GetHapp() ActivateAllInboundsResponseDtoResponseHapp {
	return s.Happ
}

// SetUUID sets the value of UUID.
func (s *ActivateAllInboundsResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetSubscriptionUuid sets the value of SubscriptionUuid.
func (s *ActivateAllInboundsResponseDtoResponse) SetSubscriptionUuid(val uuid.UUID) {
	s.SubscriptionUuid = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *ActivateAllInboundsResponseDtoResponse) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetUsername sets the value of Username.
func (s *ActivateAllInboundsResponseDtoResponse) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *ActivateAllInboundsResponseDtoResponse) SetStatus(val OptActivateAllInboundsResponseDtoResponseStatus) {
	s.Status = val
}

// SetUsedTrafficBytes sets the value of UsedTrafficBytes.
func (s *ActivateAllInboundsResponseDtoResponse) SetUsedTrafficBytes(val float64) {
	s.UsedTrafficBytes = val
}

// SetLifetimeUsedTrafficBytes sets the value of LifetimeUsedTrafficBytes.
func (s *ActivateAllInboundsResponseDtoResponse) SetLifetimeUsedTrafficBytes(val float64) {
	s.LifetimeUsedTrafficBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *ActivateAllInboundsResponseDtoResponse) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *ActivateAllInboundsResponseDtoResponse) SetTrafficLimitStrategy(val OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetSubLastUserAgent sets the value of SubLastUserAgent.
func (s *ActivateAllInboundsResponseDtoResponse) SetSubLastUserAgent(val NilString) {
	s.SubLastUserAgent = val
}

// SetSubLastOpenedAt sets the value of SubLastOpenedAt.
func (s *ActivateAllInboundsResponseDtoResponse) SetSubLastOpenedAt(val NilDateTime) {
	s.SubLastOpenedAt = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *ActivateAllInboundsResponseDtoResponse) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetOnlineAt sets the value of OnlineAt.
func (s *ActivateAllInboundsResponseDtoResponse) SetOnlineAt(val NilDateTime) {
	s.OnlineAt = val
}

// SetSubRevokedAt sets the value of SubRevokedAt.
func (s *ActivateAllInboundsResponseDtoResponse) SetSubRevokedAt(val NilDateTime) {
	s.SubRevokedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *ActivateAllInboundsResponseDtoResponse) SetLastTrafficResetAt(val NilDateTime) {
	s.LastTrafficResetAt = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *ActivateAllInboundsResponseDtoResponse) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *ActivateAllInboundsResponseDtoResponse) SetVlessUuid(val uuid.UUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *ActivateAllInboundsResponseDtoResponse) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetDescription sets the value of Description.
func (s *ActivateAllInboundsResponseDtoResponse) SetDescription(val NilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *ActivateAllInboundsResponseDtoResponse) SetTag(val NilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *ActivateAllInboundsResponseDtoResponse) SetTelegramId(val NilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *ActivateAllInboundsResponseDtoResponse) SetEmail(val NilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *ActivateAllInboundsResponseDtoResponse) SetHwidDeviceLimit(val NilInt) {
	s.HwidDeviceLimit = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ActivateAllInboundsResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ActivateAllInboundsResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetActiveUserInbounds sets the value of ActiveUserInbounds.
func (s *ActivateAllInboundsResponseDtoResponse) SetActiveUserInbounds(val []ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem) {
	s.ActiveUserInbounds = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *ActivateAllInboundsResponseDtoResponse) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetLastConnectedNode sets the value of LastConnectedNode.
func (s *ActivateAllInboundsResponseDtoResponse) SetLastConnectedNode(val NilActivateAllInboundsResponseDtoResponseLastConnectedNode) {
	s.LastConnectedNode = val
}

// SetHapp sets the value of Happ.
func (s *ActivateAllInboundsResponseDtoResponse) SetHapp(val ActivateAllInboundsResponseDtoResponseHapp) {
	s.Happ = val
}

type ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *ActivateAllInboundsResponseDtoResponseActiveUserInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

type ActivateAllInboundsResponseDtoResponseHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *ActivateAllInboundsResponseDtoResponseHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *ActivateAllInboundsResponseDtoResponseHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type ActivateAllInboundsResponseDtoResponseLastConnectedNode struct {
	ConnectedAt time.Time `json:"connectedAt"`
	NodeName    string    `json:"nodeName"`
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *ActivateAllInboundsResponseDtoResponseLastConnectedNode) GetConnectedAt() time.Time {
	return s.ConnectedAt
}

// GetNodeName returns the value of NodeName.
func (s *ActivateAllInboundsResponseDtoResponseLastConnectedNode) GetNodeName() string {
	return s.NodeName
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *ActivateAllInboundsResponseDtoResponseLastConnectedNode) SetConnectedAt(val time.Time) {
	s.ConnectedAt = val
}

// SetNodeName sets the value of NodeName.
func (s *ActivateAllInboundsResponseDtoResponseLastConnectedNode) SetNodeName(val string) {
	s.NodeName = val
}

type ActivateAllInboundsResponseDtoResponseStatus string

const (
	ActivateAllInboundsResponseDtoResponseStatusACTIVE   ActivateAllInboundsResponseDtoResponseStatus = "ACTIVE"
	ActivateAllInboundsResponseDtoResponseStatusDISABLED ActivateAllInboundsResponseDtoResponseStatus = "DISABLED"
	ActivateAllInboundsResponseDtoResponseStatusLIMITED  ActivateAllInboundsResponseDtoResponseStatus = "LIMITED"
	ActivateAllInboundsResponseDtoResponseStatusEXPIRED  ActivateAllInboundsResponseDtoResponseStatus = "EXPIRED"
)

// AllValues returns all ActivateAllInboundsResponseDtoResponseStatus values.
func (ActivateAllInboundsResponseDtoResponseStatus) AllValues() []ActivateAllInboundsResponseDtoResponseStatus {
	return []ActivateAllInboundsResponseDtoResponseStatus{
		ActivateAllInboundsResponseDtoResponseStatusACTIVE,
		ActivateAllInboundsResponseDtoResponseStatusDISABLED,
		ActivateAllInboundsResponseDtoResponseStatusLIMITED,
		ActivateAllInboundsResponseDtoResponseStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ActivateAllInboundsResponseDtoResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case ActivateAllInboundsResponseDtoResponseStatusACTIVE:
		return []byte(s), nil
	case ActivateAllInboundsResponseDtoResponseStatusDISABLED:
		return []byte(s), nil
	case ActivateAllInboundsResponseDtoResponseStatusLIMITED:
		return []byte(s), nil
	case ActivateAllInboundsResponseDtoResponseStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ActivateAllInboundsResponseDtoResponseStatus) UnmarshalText(data []byte) error {
	switch ActivateAllInboundsResponseDtoResponseStatus(data) {
	case ActivateAllInboundsResponseDtoResponseStatusACTIVE:
		*s = ActivateAllInboundsResponseDtoResponseStatusACTIVE
		return nil
	case ActivateAllInboundsResponseDtoResponseStatusDISABLED:
		*s = ActivateAllInboundsResponseDtoResponseStatusDISABLED
		return nil
	case ActivateAllInboundsResponseDtoResponseStatusLIMITED:
		*s = ActivateAllInboundsResponseDtoResponseStatusLIMITED
		return nil
	case ActivateAllInboundsResponseDtoResponseStatusEXPIRED:
		*s = ActivateAllInboundsResponseDtoResponseStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy string

const (
	ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyNORESET ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy = "NO_RESET"
	ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyDAY     ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy = "DAY"
	ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyWEEK    ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy = "WEEK"
	ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyMONTH   ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy = "MONTH"
)

// AllValues returns all ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy values.
func (ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy) AllValues() []ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy {
	return []ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy{
		ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyNORESET,
		ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyDAY,
		ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyWEEK,
		ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyDAY:
		return []byte(s), nil
	case ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy(data) {
	case ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyNORESET:
		*s = ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyNORESET
		return nil
	case ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyDAY:
		*s = ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyDAY
		return nil
	case ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyWEEK:
		*s = ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyWEEK
		return nil
	case ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyMONTH:
		*s = ActivateAllInboundsResponseDtoResponseTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AddInboundToNodesRequestDto
type AddInboundToNodesRequestDto struct {
	InboundUuid uuid.UUID `json:"inboundUuid"`
}

// GetInboundUuid returns the value of InboundUuid.
func (s *AddInboundToNodesRequestDto) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// SetInboundUuid sets the value of InboundUuid.
func (s *AddInboundToNodesRequestDto) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// Ref: #/components/schemas/AddInboundToNodesResponseDto
type AddInboundToNodesResponseDto struct {
	Response AddInboundToNodesResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *AddInboundToNodesResponseDto) GetResponse() AddInboundToNodesResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *AddInboundToNodesResponseDto) SetResponse(val AddInboundToNodesResponseDtoResponse) {
	s.Response = val
}

type AddInboundToNodesResponseDtoResponse struct {
	IsSuccess bool `json:"isSuccess"`
}

// GetIsSuccess returns the value of IsSuccess.
func (s *AddInboundToNodesResponseDtoResponse) GetIsSuccess() bool {
	return s.IsSuccess
}

// SetIsSuccess sets the value of IsSuccess.
func (s *AddInboundToNodesResponseDtoResponse) SetIsSuccess(val bool) {
	s.IsSuccess = val
}

// Ref: #/components/schemas/AddInboundToUsersRequestDto
type AddInboundToUsersRequestDto struct {
	InboundUuid uuid.UUID `json:"inboundUuid"`
}

// GetInboundUuid returns the value of InboundUuid.
func (s *AddInboundToUsersRequestDto) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// SetInboundUuid sets the value of InboundUuid.
func (s *AddInboundToUsersRequestDto) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// Ref: #/components/schemas/AddInboundToUsersResponseDto
type AddInboundToUsersResponseDto struct {
	Response AddInboundToUsersResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *AddInboundToUsersResponseDto) GetResponse() AddInboundToUsersResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *AddInboundToUsersResponseDto) SetResponse(val AddInboundToUsersResponseDtoResponse) {
	s.Response = val
}

type AddInboundToUsersResponseDtoResponse struct {
	IsSuccess bool `json:"isSuccess"`
}

// GetIsSuccess returns the value of IsSuccess.
func (s *AddInboundToUsersResponseDtoResponse) GetIsSuccess() bool {
	return s.IsSuccess
}

// SetIsSuccess sets the value of IsSuccess.
func (s *AddInboundToUsersResponseDtoResponse) SetIsSuccess(val bool) {
	s.IsSuccess = val
}

type AuthControllerLoginUnauthorized struct {
	StatusCode OptFloat64 `json:"statusCode"`
	Message    OptString  `json:"message"`
	Error      OptString  `json:"error"`
}

// GetStatusCode returns the value of StatusCode.
func (s *AuthControllerLoginUnauthorized) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetMessage returns the value of Message.
func (s *AuthControllerLoginUnauthorized) GetMessage() OptString {
	return s.Message
}

// GetError returns the value of Error.
func (s *AuthControllerLoginUnauthorized) GetError() OptString {
	return s.Error
}

// SetStatusCode sets the value of StatusCode.
func (s *AuthControllerLoginUnauthorized) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetMessage sets the value of Message.
func (s *AuthControllerLoginUnauthorized) SetMessage(val OptString) {
	s.Message = val
}

// SetError sets the value of Error.
func (s *AuthControllerLoginUnauthorized) SetError(val OptString) {
	s.Error = val
}

func (*AuthControllerLoginUnauthorized) authControllerLoginRes() {}

type AuthControllerRegisterForbidden struct {
	StatusCode OptFloat64 `json:"statusCode"`
	Message    OptString  `json:"message"`
	Error      OptString  `json:"error"`
}

// GetStatusCode returns the value of StatusCode.
func (s *AuthControllerRegisterForbidden) GetStatusCode() OptFloat64 {
	return s.StatusCode
}

// GetMessage returns the value of Message.
func (s *AuthControllerRegisterForbidden) GetMessage() OptString {
	return s.Message
}

// GetError returns the value of Error.
func (s *AuthControllerRegisterForbidden) GetError() OptString {
	return s.Error
}

// SetStatusCode sets the value of StatusCode.
func (s *AuthControllerRegisterForbidden) SetStatusCode(val OptFloat64) {
	s.StatusCode = val
}

// SetMessage sets the value of Message.
func (s *AuthControllerRegisterForbidden) SetMessage(val OptString) {
	s.Message = val
}

// SetError sets the value of Error.
func (s *AuthControllerRegisterForbidden) SetError(val OptString) {
	s.Error = val
}

func (*AuthControllerRegisterForbidden) authControllerRegisterRes() {}

type Authorization struct {
	Token string
}

// GetToken returns the value of Token.
func (s *Authorization) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *Authorization) SetToken(val string) {
	s.Token = val
}

// Ref: #/components/schemas/BulkAllResetTrafficUsersResponseDto
type BulkAllResetTrafficUsersResponseDto struct {
	Response BulkAllResetTrafficUsersResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BulkAllResetTrafficUsersResponseDto) GetResponse() BulkAllResetTrafficUsersResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BulkAllResetTrafficUsersResponseDto) SetResponse(val BulkAllResetTrafficUsersResponseDtoResponse) {
	s.Response = val
}

type BulkAllResetTrafficUsersResponseDtoResponse struct {
	EventSent bool `json:"eventSent"`
}

// GetEventSent returns the value of EventSent.
func (s *BulkAllResetTrafficUsersResponseDtoResponse) GetEventSent() bool {
	return s.EventSent
}

// SetEventSent sets the value of EventSent.
func (s *BulkAllResetTrafficUsersResponseDtoResponse) SetEventSent(val bool) {
	s.EventSent = val
}

// Ref: #/components/schemas/BulkAllUpdateUsersRequestDto
type BulkAllUpdateUsersRequestDto struct {
	Status OptBulkAllUpdateUsersRequestDtoStatus `json:"status"`
	// Traffic limit in bytes. 0 - unlimited.
	TrafficLimitBytes OptInt `json:"trafficLimitBytes"`
	// Traffic limit reset strategy.
	TrafficLimitStrategy OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy `json:"trafficLimitStrategy"`
	// Expiration date: 2025-01-17T15:38:45.065Z.
	ExpireAt    OptDateTime  `json:"expireAt"`
	Description OptNilString `json:"description"`
	TelegramId  OptNilInt    `json:"telegramId"`
	Email       OptNilString `json:"email"`
	Tag         OptNilString `json:"tag"`
}

// GetStatus returns the value of Status.
func (s *BulkAllUpdateUsersRequestDto) GetStatus() OptBulkAllUpdateUsersRequestDtoStatus {
	return s.Status
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *BulkAllUpdateUsersRequestDto) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *BulkAllUpdateUsersRequestDto) GetTrafficLimitStrategy() OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetExpireAt returns the value of ExpireAt.
func (s *BulkAllUpdateUsersRequestDto) GetExpireAt() OptDateTime {
	return s.ExpireAt
}

// GetDescription returns the value of Description.
func (s *BulkAllUpdateUsersRequestDto) GetDescription() OptNilString {
	return s.Description
}

// GetTelegramId returns the value of TelegramId.
func (s *BulkAllUpdateUsersRequestDto) GetTelegramId() OptNilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *BulkAllUpdateUsersRequestDto) GetEmail() OptNilString {
	return s.Email
}

// GetTag returns the value of Tag.
func (s *BulkAllUpdateUsersRequestDto) GetTag() OptNilString {
	return s.Tag
}

// SetStatus sets the value of Status.
func (s *BulkAllUpdateUsersRequestDto) SetStatus(val OptBulkAllUpdateUsersRequestDtoStatus) {
	s.Status = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *BulkAllUpdateUsersRequestDto) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *BulkAllUpdateUsersRequestDto) SetTrafficLimitStrategy(val OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *BulkAllUpdateUsersRequestDto) SetExpireAt(val OptDateTime) {
	s.ExpireAt = val
}

// SetDescription sets the value of Description.
func (s *BulkAllUpdateUsersRequestDto) SetDescription(val OptNilString) {
	s.Description = val
}

// SetTelegramId sets the value of TelegramId.
func (s *BulkAllUpdateUsersRequestDto) SetTelegramId(val OptNilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *BulkAllUpdateUsersRequestDto) SetEmail(val OptNilString) {
	s.Email = val
}

// SetTag sets the value of Tag.
func (s *BulkAllUpdateUsersRequestDto) SetTag(val OptNilString) {
	s.Tag = val
}

type BulkAllUpdateUsersRequestDtoStatus string

const (
	BulkAllUpdateUsersRequestDtoStatusACTIVE   BulkAllUpdateUsersRequestDtoStatus = "ACTIVE"
	BulkAllUpdateUsersRequestDtoStatusDISABLED BulkAllUpdateUsersRequestDtoStatus = "DISABLED"
	BulkAllUpdateUsersRequestDtoStatusLIMITED  BulkAllUpdateUsersRequestDtoStatus = "LIMITED"
	BulkAllUpdateUsersRequestDtoStatusEXPIRED  BulkAllUpdateUsersRequestDtoStatus = "EXPIRED"
)

// AllValues returns all BulkAllUpdateUsersRequestDtoStatus values.
func (BulkAllUpdateUsersRequestDtoStatus) AllValues() []BulkAllUpdateUsersRequestDtoStatus {
	return []BulkAllUpdateUsersRequestDtoStatus{
		BulkAllUpdateUsersRequestDtoStatusACTIVE,
		BulkAllUpdateUsersRequestDtoStatusDISABLED,
		BulkAllUpdateUsersRequestDtoStatusLIMITED,
		BulkAllUpdateUsersRequestDtoStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkAllUpdateUsersRequestDtoStatus) MarshalText() ([]byte, error) {
	switch s {
	case BulkAllUpdateUsersRequestDtoStatusACTIVE:
		return []byte(s), nil
	case BulkAllUpdateUsersRequestDtoStatusDISABLED:
		return []byte(s), nil
	case BulkAllUpdateUsersRequestDtoStatusLIMITED:
		return []byte(s), nil
	case BulkAllUpdateUsersRequestDtoStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkAllUpdateUsersRequestDtoStatus) UnmarshalText(data []byte) error {
	switch BulkAllUpdateUsersRequestDtoStatus(data) {
	case BulkAllUpdateUsersRequestDtoStatusACTIVE:
		*s = BulkAllUpdateUsersRequestDtoStatusACTIVE
		return nil
	case BulkAllUpdateUsersRequestDtoStatusDISABLED:
		*s = BulkAllUpdateUsersRequestDtoStatusDISABLED
		return nil
	case BulkAllUpdateUsersRequestDtoStatusLIMITED:
		*s = BulkAllUpdateUsersRequestDtoStatusLIMITED
		return nil
	case BulkAllUpdateUsersRequestDtoStatusEXPIRED:
		*s = BulkAllUpdateUsersRequestDtoStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Traffic limit reset strategy.
type BulkAllUpdateUsersRequestDtoTrafficLimitStrategy string

const (
	BulkAllUpdateUsersRequestDtoTrafficLimitStrategyNORESET BulkAllUpdateUsersRequestDtoTrafficLimitStrategy = "NO_RESET"
	BulkAllUpdateUsersRequestDtoTrafficLimitStrategyDAY     BulkAllUpdateUsersRequestDtoTrafficLimitStrategy = "DAY"
	BulkAllUpdateUsersRequestDtoTrafficLimitStrategyWEEK    BulkAllUpdateUsersRequestDtoTrafficLimitStrategy = "WEEK"
	BulkAllUpdateUsersRequestDtoTrafficLimitStrategyMONTH   BulkAllUpdateUsersRequestDtoTrafficLimitStrategy = "MONTH"
)

// AllValues returns all BulkAllUpdateUsersRequestDtoTrafficLimitStrategy values.
func (BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) AllValues() []BulkAllUpdateUsersRequestDtoTrafficLimitStrategy {
	return []BulkAllUpdateUsersRequestDtoTrafficLimitStrategy{
		BulkAllUpdateUsersRequestDtoTrafficLimitStrategyNORESET,
		BulkAllUpdateUsersRequestDtoTrafficLimitStrategyDAY,
		BulkAllUpdateUsersRequestDtoTrafficLimitStrategyWEEK,
		BulkAllUpdateUsersRequestDtoTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyDAY:
		return []byte(s), nil
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch BulkAllUpdateUsersRequestDtoTrafficLimitStrategy(data) {
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyNORESET:
		*s = BulkAllUpdateUsersRequestDtoTrafficLimitStrategyNORESET
		return nil
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyDAY:
		*s = BulkAllUpdateUsersRequestDtoTrafficLimitStrategyDAY
		return nil
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyWEEK:
		*s = BulkAllUpdateUsersRequestDtoTrafficLimitStrategyWEEK
		return nil
	case BulkAllUpdateUsersRequestDtoTrafficLimitStrategyMONTH:
		*s = BulkAllUpdateUsersRequestDtoTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BulkAllUpdateUsersResponseDto
type BulkAllUpdateUsersResponseDto struct {
	Response BulkAllUpdateUsersResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BulkAllUpdateUsersResponseDto) GetResponse() BulkAllUpdateUsersResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BulkAllUpdateUsersResponseDto) SetResponse(val BulkAllUpdateUsersResponseDtoResponse) {
	s.Response = val
}

type BulkAllUpdateUsersResponseDtoResponse struct {
	EventSent bool `json:"eventSent"`
}

// GetEventSent returns the value of EventSent.
func (s *BulkAllUpdateUsersResponseDtoResponse) GetEventSent() bool {
	return s.EventSent
}

// SetEventSent sets the value of EventSent.
func (s *BulkAllUpdateUsersResponseDtoResponse) SetEventSent(val bool) {
	s.EventSent = val
}

// Ref: #/components/schemas/BulkDeleteHostsRequestDto
type BulkDeleteHostsRequestDto struct {
	Uuids []uuid.UUID `json:"uuids"`
}

// GetUuids returns the value of Uuids.
func (s *BulkDeleteHostsRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// SetUuids sets the value of Uuids.
func (s *BulkDeleteHostsRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// Ref: #/components/schemas/BulkDeleteHostsResponseDto
type BulkDeleteHostsResponseDto struct {
	Response []BulkDeleteHostsResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BulkDeleteHostsResponseDto) GetResponse() []BulkDeleteHostsResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BulkDeleteHostsResponseDto) SetResponse(val []BulkDeleteHostsResponseDtoResponseItem) {
	s.Response = val
}

type BulkDeleteHostsResponseDtoResponseItem struct {
	UUID             uuid.UUID                                              `json:"uuid"`
	InboundUuid      uuid.UUID                                              `json:"inboundUuid"`
	ViewPosition     int                                                    `json:"viewPosition"`
	Remark           string                                                 `json:"remark"`
	Address          string                                                 `json:"address"`
	Port             int                                                    `json:"port"`
	Path             NilString                                              `json:"path"`
	Sni              NilString                                              `json:"sni"`
	Host             NilString                                              `json:"host"`
	Alpn             NilString                                              `json:"alpn"`
	Fingerprint      NilString                                              `json:"fingerprint"`
	AllowInsecure    OptBool                                                `json:"allowInsecure"`
	IsDisabled       OptBool                                                `json:"isDisabled"`
	SecurityLayer    OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer `json:"securityLayer"`
	XHttpExtraParams jx.Raw                                                 `json:"xHttpExtraParams"`
}

// GetUUID returns the value of UUID.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetInboundUuid returns the value of InboundUuid.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// GetViewPosition returns the value of ViewPosition.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetRemark returns the value of Remark.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetPath() NilString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetSni() NilString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetHost() NilString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetAlpn() NilString {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetFingerprint() NilString {
	return s.Fingerprint
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetIsDisabled returns the value of IsDisabled.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetSecurityLayer() OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *BulkDeleteHostsResponseDtoResponseItem) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// SetUUID sets the value of UUID.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetInboundUuid sets the value of InboundUuid.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetRemark sets the value of Remark.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetPath(val NilString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetSni(val NilString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetHost(val NilString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetAlpn(val NilString) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetFingerprint(val NilString) {
	s.Fingerprint = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetSecurityLayer(val OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *BulkDeleteHostsResponseDtoResponseItem) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

type BulkDeleteHostsResponseDtoResponseItemSecurityLayer string

const (
	BulkDeleteHostsResponseDtoResponseItemSecurityLayerDEFAULT BulkDeleteHostsResponseDtoResponseItemSecurityLayer = "DEFAULT"
	BulkDeleteHostsResponseDtoResponseItemSecurityLayerTLS     BulkDeleteHostsResponseDtoResponseItemSecurityLayer = "TLS"
	BulkDeleteHostsResponseDtoResponseItemSecurityLayerNONE    BulkDeleteHostsResponseDtoResponseItemSecurityLayer = "NONE"
)

// AllValues returns all BulkDeleteHostsResponseDtoResponseItemSecurityLayer values.
func (BulkDeleteHostsResponseDtoResponseItemSecurityLayer) AllValues() []BulkDeleteHostsResponseDtoResponseItemSecurityLayer {
	return []BulkDeleteHostsResponseDtoResponseItemSecurityLayer{
		BulkDeleteHostsResponseDtoResponseItemSecurityLayerDEFAULT,
		BulkDeleteHostsResponseDtoResponseItemSecurityLayerTLS,
		BulkDeleteHostsResponseDtoResponseItemSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkDeleteHostsResponseDtoResponseItemSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case BulkDeleteHostsResponseDtoResponseItemSecurityLayerDEFAULT:
		return []byte(s), nil
	case BulkDeleteHostsResponseDtoResponseItemSecurityLayerTLS:
		return []byte(s), nil
	case BulkDeleteHostsResponseDtoResponseItemSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkDeleteHostsResponseDtoResponseItemSecurityLayer) UnmarshalText(data []byte) error {
	switch BulkDeleteHostsResponseDtoResponseItemSecurityLayer(data) {
	case BulkDeleteHostsResponseDtoResponseItemSecurityLayerDEFAULT:
		*s = BulkDeleteHostsResponseDtoResponseItemSecurityLayerDEFAULT
		return nil
	case BulkDeleteHostsResponseDtoResponseItemSecurityLayerTLS:
		*s = BulkDeleteHostsResponseDtoResponseItemSecurityLayerTLS
		return nil
	case BulkDeleteHostsResponseDtoResponseItemSecurityLayerNONE:
		*s = BulkDeleteHostsResponseDtoResponseItemSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BulkDeleteUsersByStatusRequestDto
type BulkDeleteUsersByStatusRequestDto struct {
	Status OptBulkDeleteUsersByStatusRequestDtoStatus `json:"status"`
}

// GetStatus returns the value of Status.
func (s *BulkDeleteUsersByStatusRequestDto) GetStatus() OptBulkDeleteUsersByStatusRequestDtoStatus {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *BulkDeleteUsersByStatusRequestDto) SetStatus(val OptBulkDeleteUsersByStatusRequestDtoStatus) {
	s.Status = val
}

type BulkDeleteUsersByStatusRequestDtoStatus string

const (
	BulkDeleteUsersByStatusRequestDtoStatusACTIVE   BulkDeleteUsersByStatusRequestDtoStatus = "ACTIVE"
	BulkDeleteUsersByStatusRequestDtoStatusDISABLED BulkDeleteUsersByStatusRequestDtoStatus = "DISABLED"
	BulkDeleteUsersByStatusRequestDtoStatusLIMITED  BulkDeleteUsersByStatusRequestDtoStatus = "LIMITED"
	BulkDeleteUsersByStatusRequestDtoStatusEXPIRED  BulkDeleteUsersByStatusRequestDtoStatus = "EXPIRED"
)

// AllValues returns all BulkDeleteUsersByStatusRequestDtoStatus values.
func (BulkDeleteUsersByStatusRequestDtoStatus) AllValues() []BulkDeleteUsersByStatusRequestDtoStatus {
	return []BulkDeleteUsersByStatusRequestDtoStatus{
		BulkDeleteUsersByStatusRequestDtoStatusACTIVE,
		BulkDeleteUsersByStatusRequestDtoStatusDISABLED,
		BulkDeleteUsersByStatusRequestDtoStatusLIMITED,
		BulkDeleteUsersByStatusRequestDtoStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkDeleteUsersByStatusRequestDtoStatus) MarshalText() ([]byte, error) {
	switch s {
	case BulkDeleteUsersByStatusRequestDtoStatusACTIVE:
		return []byte(s), nil
	case BulkDeleteUsersByStatusRequestDtoStatusDISABLED:
		return []byte(s), nil
	case BulkDeleteUsersByStatusRequestDtoStatusLIMITED:
		return []byte(s), nil
	case BulkDeleteUsersByStatusRequestDtoStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkDeleteUsersByStatusRequestDtoStatus) UnmarshalText(data []byte) error {
	switch BulkDeleteUsersByStatusRequestDtoStatus(data) {
	case BulkDeleteUsersByStatusRequestDtoStatusACTIVE:
		*s = BulkDeleteUsersByStatusRequestDtoStatusACTIVE
		return nil
	case BulkDeleteUsersByStatusRequestDtoStatusDISABLED:
		*s = BulkDeleteUsersByStatusRequestDtoStatusDISABLED
		return nil
	case BulkDeleteUsersByStatusRequestDtoStatusLIMITED:
		*s = BulkDeleteUsersByStatusRequestDtoStatusLIMITED
		return nil
	case BulkDeleteUsersByStatusRequestDtoStatusEXPIRED:
		*s = BulkDeleteUsersByStatusRequestDtoStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BulkDeleteUsersByStatusResponseDto
type BulkDeleteUsersByStatusResponseDto struct {
	Response BulkDeleteUsersByStatusResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BulkDeleteUsersByStatusResponseDto) GetResponse() BulkDeleteUsersByStatusResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BulkDeleteUsersByStatusResponseDto) SetResponse(val BulkDeleteUsersByStatusResponseDtoResponse) {
	s.Response = val
}

type BulkDeleteUsersByStatusResponseDtoResponse struct {
	AffectedRows float64 `json:"affectedRows"`
}

// GetAffectedRows returns the value of AffectedRows.
func (s *BulkDeleteUsersByStatusResponseDtoResponse) GetAffectedRows() float64 {
	return s.AffectedRows
}

// SetAffectedRows sets the value of AffectedRows.
func (s *BulkDeleteUsersByStatusResponseDtoResponse) SetAffectedRows(val float64) {
	s.AffectedRows = val
}

// Ref: #/components/schemas/BulkDeleteUsersRequestDto
type BulkDeleteUsersRequestDto struct {
	Uuids []uuid.UUID `json:"uuids"`
}

// GetUuids returns the value of Uuids.
func (s *BulkDeleteUsersRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// SetUuids sets the value of Uuids.
func (s *BulkDeleteUsersRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// Ref: #/components/schemas/BulkDeleteUsersResponseDto
type BulkDeleteUsersResponseDto struct {
	Response BulkDeleteUsersResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BulkDeleteUsersResponseDto) GetResponse() BulkDeleteUsersResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BulkDeleteUsersResponseDto) SetResponse(val BulkDeleteUsersResponseDtoResponse) {
	s.Response = val
}

type BulkDeleteUsersResponseDtoResponse struct {
	AffectedRows float64 `json:"affectedRows"`
}

// GetAffectedRows returns the value of AffectedRows.
func (s *BulkDeleteUsersResponseDtoResponse) GetAffectedRows() float64 {
	return s.AffectedRows
}

// SetAffectedRows sets the value of AffectedRows.
func (s *BulkDeleteUsersResponseDtoResponse) SetAffectedRows(val float64) {
	s.AffectedRows = val
}

// Ref: #/components/schemas/BulkDisableHostsRequestDto
type BulkDisableHostsRequestDto struct {
	Uuids []uuid.UUID `json:"uuids"`
}

// GetUuids returns the value of Uuids.
func (s *BulkDisableHostsRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// SetUuids sets the value of Uuids.
func (s *BulkDisableHostsRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// Ref: #/components/schemas/BulkDisableHostsResponseDto
type BulkDisableHostsResponseDto struct {
	Response []BulkDisableHostsResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BulkDisableHostsResponseDto) GetResponse() []BulkDisableHostsResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BulkDisableHostsResponseDto) SetResponse(val []BulkDisableHostsResponseDtoResponseItem) {
	s.Response = val
}

type BulkDisableHostsResponseDtoResponseItem struct {
	UUID             uuid.UUID                                               `json:"uuid"`
	InboundUuid      uuid.UUID                                               `json:"inboundUuid"`
	ViewPosition     int                                                     `json:"viewPosition"`
	Remark           string                                                  `json:"remark"`
	Address          string                                                  `json:"address"`
	Port             int                                                     `json:"port"`
	Path             NilString                                               `json:"path"`
	Sni              NilString                                               `json:"sni"`
	Host             NilString                                               `json:"host"`
	Alpn             NilString                                               `json:"alpn"`
	Fingerprint      NilString                                               `json:"fingerprint"`
	AllowInsecure    OptBool                                                 `json:"allowInsecure"`
	IsDisabled       OptBool                                                 `json:"isDisabled"`
	SecurityLayer    OptBulkDisableHostsResponseDtoResponseItemSecurityLayer `json:"securityLayer"`
	XHttpExtraParams jx.Raw                                                  `json:"xHttpExtraParams"`
}

// GetUUID returns the value of UUID.
func (s *BulkDisableHostsResponseDtoResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetInboundUuid returns the value of InboundUuid.
func (s *BulkDisableHostsResponseDtoResponseItem) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// GetViewPosition returns the value of ViewPosition.
func (s *BulkDisableHostsResponseDtoResponseItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetRemark returns the value of Remark.
func (s *BulkDisableHostsResponseDtoResponseItem) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *BulkDisableHostsResponseDtoResponseItem) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *BulkDisableHostsResponseDtoResponseItem) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *BulkDisableHostsResponseDtoResponseItem) GetPath() NilString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *BulkDisableHostsResponseDtoResponseItem) GetSni() NilString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *BulkDisableHostsResponseDtoResponseItem) GetHost() NilString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *BulkDisableHostsResponseDtoResponseItem) GetAlpn() NilString {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *BulkDisableHostsResponseDtoResponseItem) GetFingerprint() NilString {
	return s.Fingerprint
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *BulkDisableHostsResponseDtoResponseItem) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetIsDisabled returns the value of IsDisabled.
func (s *BulkDisableHostsResponseDtoResponseItem) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *BulkDisableHostsResponseDtoResponseItem) GetSecurityLayer() OptBulkDisableHostsResponseDtoResponseItemSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *BulkDisableHostsResponseDtoResponseItem) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// SetUUID sets the value of UUID.
func (s *BulkDisableHostsResponseDtoResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetInboundUuid sets the value of InboundUuid.
func (s *BulkDisableHostsResponseDtoResponseItem) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *BulkDisableHostsResponseDtoResponseItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetRemark sets the value of Remark.
func (s *BulkDisableHostsResponseDtoResponseItem) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *BulkDisableHostsResponseDtoResponseItem) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *BulkDisableHostsResponseDtoResponseItem) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *BulkDisableHostsResponseDtoResponseItem) SetPath(val NilString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *BulkDisableHostsResponseDtoResponseItem) SetSni(val NilString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *BulkDisableHostsResponseDtoResponseItem) SetHost(val NilString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *BulkDisableHostsResponseDtoResponseItem) SetAlpn(val NilString) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *BulkDisableHostsResponseDtoResponseItem) SetFingerprint(val NilString) {
	s.Fingerprint = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *BulkDisableHostsResponseDtoResponseItem) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *BulkDisableHostsResponseDtoResponseItem) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *BulkDisableHostsResponseDtoResponseItem) SetSecurityLayer(val OptBulkDisableHostsResponseDtoResponseItemSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *BulkDisableHostsResponseDtoResponseItem) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

type BulkDisableHostsResponseDtoResponseItemSecurityLayer string

const (
	BulkDisableHostsResponseDtoResponseItemSecurityLayerDEFAULT BulkDisableHostsResponseDtoResponseItemSecurityLayer = "DEFAULT"
	BulkDisableHostsResponseDtoResponseItemSecurityLayerTLS     BulkDisableHostsResponseDtoResponseItemSecurityLayer = "TLS"
	BulkDisableHostsResponseDtoResponseItemSecurityLayerNONE    BulkDisableHostsResponseDtoResponseItemSecurityLayer = "NONE"
)

// AllValues returns all BulkDisableHostsResponseDtoResponseItemSecurityLayer values.
func (BulkDisableHostsResponseDtoResponseItemSecurityLayer) AllValues() []BulkDisableHostsResponseDtoResponseItemSecurityLayer {
	return []BulkDisableHostsResponseDtoResponseItemSecurityLayer{
		BulkDisableHostsResponseDtoResponseItemSecurityLayerDEFAULT,
		BulkDisableHostsResponseDtoResponseItemSecurityLayerTLS,
		BulkDisableHostsResponseDtoResponseItemSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkDisableHostsResponseDtoResponseItemSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case BulkDisableHostsResponseDtoResponseItemSecurityLayerDEFAULT:
		return []byte(s), nil
	case BulkDisableHostsResponseDtoResponseItemSecurityLayerTLS:
		return []byte(s), nil
	case BulkDisableHostsResponseDtoResponseItemSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkDisableHostsResponseDtoResponseItemSecurityLayer) UnmarshalText(data []byte) error {
	switch BulkDisableHostsResponseDtoResponseItemSecurityLayer(data) {
	case BulkDisableHostsResponseDtoResponseItemSecurityLayerDEFAULT:
		*s = BulkDisableHostsResponseDtoResponseItemSecurityLayerDEFAULT
		return nil
	case BulkDisableHostsResponseDtoResponseItemSecurityLayerTLS:
		*s = BulkDisableHostsResponseDtoResponseItemSecurityLayerTLS
		return nil
	case BulkDisableHostsResponseDtoResponseItemSecurityLayerNONE:
		*s = BulkDisableHostsResponseDtoResponseItemSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BulkEnableHostsRequestDto
type BulkEnableHostsRequestDto struct {
	Uuids []uuid.UUID `json:"uuids"`
}

// GetUuids returns the value of Uuids.
func (s *BulkEnableHostsRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// SetUuids sets the value of Uuids.
func (s *BulkEnableHostsRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// Ref: #/components/schemas/BulkEnableHostsResponseDto
type BulkEnableHostsResponseDto struct {
	Response []BulkEnableHostsResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BulkEnableHostsResponseDto) GetResponse() []BulkEnableHostsResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BulkEnableHostsResponseDto) SetResponse(val []BulkEnableHostsResponseDtoResponseItem) {
	s.Response = val
}

type BulkEnableHostsResponseDtoResponseItem struct {
	UUID             uuid.UUID                                              `json:"uuid"`
	InboundUuid      uuid.UUID                                              `json:"inboundUuid"`
	ViewPosition     int                                                    `json:"viewPosition"`
	Remark           string                                                 `json:"remark"`
	Address          string                                                 `json:"address"`
	Port             int                                                    `json:"port"`
	Path             NilString                                              `json:"path"`
	Sni              NilString                                              `json:"sni"`
	Host             NilString                                              `json:"host"`
	Alpn             NilString                                              `json:"alpn"`
	Fingerprint      NilString                                              `json:"fingerprint"`
	AllowInsecure    OptBool                                                `json:"allowInsecure"`
	IsDisabled       OptBool                                                `json:"isDisabled"`
	SecurityLayer    OptBulkEnableHostsResponseDtoResponseItemSecurityLayer `json:"securityLayer"`
	XHttpExtraParams jx.Raw                                                 `json:"xHttpExtraParams"`
}

// GetUUID returns the value of UUID.
func (s *BulkEnableHostsResponseDtoResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetInboundUuid returns the value of InboundUuid.
func (s *BulkEnableHostsResponseDtoResponseItem) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// GetViewPosition returns the value of ViewPosition.
func (s *BulkEnableHostsResponseDtoResponseItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetRemark returns the value of Remark.
func (s *BulkEnableHostsResponseDtoResponseItem) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *BulkEnableHostsResponseDtoResponseItem) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *BulkEnableHostsResponseDtoResponseItem) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *BulkEnableHostsResponseDtoResponseItem) GetPath() NilString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *BulkEnableHostsResponseDtoResponseItem) GetSni() NilString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *BulkEnableHostsResponseDtoResponseItem) GetHost() NilString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *BulkEnableHostsResponseDtoResponseItem) GetAlpn() NilString {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *BulkEnableHostsResponseDtoResponseItem) GetFingerprint() NilString {
	return s.Fingerprint
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *BulkEnableHostsResponseDtoResponseItem) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetIsDisabled returns the value of IsDisabled.
func (s *BulkEnableHostsResponseDtoResponseItem) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *BulkEnableHostsResponseDtoResponseItem) GetSecurityLayer() OptBulkEnableHostsResponseDtoResponseItemSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *BulkEnableHostsResponseDtoResponseItem) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// SetUUID sets the value of UUID.
func (s *BulkEnableHostsResponseDtoResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetInboundUuid sets the value of InboundUuid.
func (s *BulkEnableHostsResponseDtoResponseItem) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *BulkEnableHostsResponseDtoResponseItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetRemark sets the value of Remark.
func (s *BulkEnableHostsResponseDtoResponseItem) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *BulkEnableHostsResponseDtoResponseItem) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *BulkEnableHostsResponseDtoResponseItem) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *BulkEnableHostsResponseDtoResponseItem) SetPath(val NilString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *BulkEnableHostsResponseDtoResponseItem) SetSni(val NilString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *BulkEnableHostsResponseDtoResponseItem) SetHost(val NilString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *BulkEnableHostsResponseDtoResponseItem) SetAlpn(val NilString) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *BulkEnableHostsResponseDtoResponseItem) SetFingerprint(val NilString) {
	s.Fingerprint = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *BulkEnableHostsResponseDtoResponseItem) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *BulkEnableHostsResponseDtoResponseItem) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *BulkEnableHostsResponseDtoResponseItem) SetSecurityLayer(val OptBulkEnableHostsResponseDtoResponseItemSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *BulkEnableHostsResponseDtoResponseItem) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

type BulkEnableHostsResponseDtoResponseItemSecurityLayer string

const (
	BulkEnableHostsResponseDtoResponseItemSecurityLayerDEFAULT BulkEnableHostsResponseDtoResponseItemSecurityLayer = "DEFAULT"
	BulkEnableHostsResponseDtoResponseItemSecurityLayerTLS     BulkEnableHostsResponseDtoResponseItemSecurityLayer = "TLS"
	BulkEnableHostsResponseDtoResponseItemSecurityLayerNONE    BulkEnableHostsResponseDtoResponseItemSecurityLayer = "NONE"
)

// AllValues returns all BulkEnableHostsResponseDtoResponseItemSecurityLayer values.
func (BulkEnableHostsResponseDtoResponseItemSecurityLayer) AllValues() []BulkEnableHostsResponseDtoResponseItemSecurityLayer {
	return []BulkEnableHostsResponseDtoResponseItemSecurityLayer{
		BulkEnableHostsResponseDtoResponseItemSecurityLayerDEFAULT,
		BulkEnableHostsResponseDtoResponseItemSecurityLayerTLS,
		BulkEnableHostsResponseDtoResponseItemSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkEnableHostsResponseDtoResponseItemSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case BulkEnableHostsResponseDtoResponseItemSecurityLayerDEFAULT:
		return []byte(s), nil
	case BulkEnableHostsResponseDtoResponseItemSecurityLayerTLS:
		return []byte(s), nil
	case BulkEnableHostsResponseDtoResponseItemSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkEnableHostsResponseDtoResponseItemSecurityLayer) UnmarshalText(data []byte) error {
	switch BulkEnableHostsResponseDtoResponseItemSecurityLayer(data) {
	case BulkEnableHostsResponseDtoResponseItemSecurityLayerDEFAULT:
		*s = BulkEnableHostsResponseDtoResponseItemSecurityLayerDEFAULT
		return nil
	case BulkEnableHostsResponseDtoResponseItemSecurityLayerTLS:
		*s = BulkEnableHostsResponseDtoResponseItemSecurityLayerTLS
		return nil
	case BulkEnableHostsResponseDtoResponseItemSecurityLayerNONE:
		*s = BulkEnableHostsResponseDtoResponseItemSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BulkResetTrafficUsersRequestDto
type BulkResetTrafficUsersRequestDto struct {
	Uuids []uuid.UUID `json:"uuids"`
}

// GetUuids returns the value of Uuids.
func (s *BulkResetTrafficUsersRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// SetUuids sets the value of Uuids.
func (s *BulkResetTrafficUsersRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// Ref: #/components/schemas/BulkResetTrafficUsersResponseDto
type BulkResetTrafficUsersResponseDto struct {
	Response BulkResetTrafficUsersResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BulkResetTrafficUsersResponseDto) GetResponse() BulkResetTrafficUsersResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BulkResetTrafficUsersResponseDto) SetResponse(val BulkResetTrafficUsersResponseDtoResponse) {
	s.Response = val
}

type BulkResetTrafficUsersResponseDtoResponse struct {
	AffectedRows float64 `json:"affectedRows"`
}

// GetAffectedRows returns the value of AffectedRows.
func (s *BulkResetTrafficUsersResponseDtoResponse) GetAffectedRows() float64 {
	return s.AffectedRows
}

// SetAffectedRows sets the value of AffectedRows.
func (s *BulkResetTrafficUsersResponseDtoResponse) SetAffectedRows(val float64) {
	s.AffectedRows = val
}

// Ref: #/components/schemas/BulkRevokeUsersSubscriptionRequestDto
type BulkRevokeUsersSubscriptionRequestDto struct {
	Uuids []uuid.UUID `json:"uuids"`
}

// GetUuids returns the value of Uuids.
func (s *BulkRevokeUsersSubscriptionRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// SetUuids sets the value of Uuids.
func (s *BulkRevokeUsersSubscriptionRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// Ref: #/components/schemas/BulkRevokeUsersSubscriptionResponseDto
type BulkRevokeUsersSubscriptionResponseDto struct {
	Response BulkRevokeUsersSubscriptionResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BulkRevokeUsersSubscriptionResponseDto) GetResponse() BulkRevokeUsersSubscriptionResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BulkRevokeUsersSubscriptionResponseDto) SetResponse(val BulkRevokeUsersSubscriptionResponseDtoResponse) {
	s.Response = val
}

type BulkRevokeUsersSubscriptionResponseDtoResponse struct {
	AffectedRows float64 `json:"affectedRows"`
}

// GetAffectedRows returns the value of AffectedRows.
func (s *BulkRevokeUsersSubscriptionResponseDtoResponse) GetAffectedRows() float64 {
	return s.AffectedRows
}

// SetAffectedRows sets the value of AffectedRows.
func (s *BulkRevokeUsersSubscriptionResponseDtoResponse) SetAffectedRows(val float64) {
	s.AffectedRows = val
}

// Ref: #/components/schemas/BulkUpdateUsersInboundsRequestDto
type BulkUpdateUsersInboundsRequestDto struct {
	Uuids              []uuid.UUID `json:"uuids"`
	ActiveUserInbounds []uuid.UUID `json:"activeUserInbounds"`
}

// GetUuids returns the value of Uuids.
func (s *BulkUpdateUsersInboundsRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// GetActiveUserInbounds returns the value of ActiveUserInbounds.
func (s *BulkUpdateUsersInboundsRequestDto) GetActiveUserInbounds() []uuid.UUID {
	return s.ActiveUserInbounds
}

// SetUuids sets the value of Uuids.
func (s *BulkUpdateUsersInboundsRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// SetActiveUserInbounds sets the value of ActiveUserInbounds.
func (s *BulkUpdateUsersInboundsRequestDto) SetActiveUserInbounds(val []uuid.UUID) {
	s.ActiveUserInbounds = val
}

// Ref: #/components/schemas/BulkUpdateUsersInboundsResponseDto
type BulkUpdateUsersInboundsResponseDto struct {
	Response BulkUpdateUsersInboundsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BulkUpdateUsersInboundsResponseDto) GetResponse() BulkUpdateUsersInboundsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BulkUpdateUsersInboundsResponseDto) SetResponse(val BulkUpdateUsersInboundsResponseDtoResponse) {
	s.Response = val
}

type BulkUpdateUsersInboundsResponseDtoResponse struct {
	AffectedRows float64 `json:"affectedRows"`
}

// GetAffectedRows returns the value of AffectedRows.
func (s *BulkUpdateUsersInboundsResponseDtoResponse) GetAffectedRows() float64 {
	return s.AffectedRows
}

// SetAffectedRows sets the value of AffectedRows.
func (s *BulkUpdateUsersInboundsResponseDtoResponse) SetAffectedRows(val float64) {
	s.AffectedRows = val
}

// Ref: #/components/schemas/BulkUpdateUsersRequestDto
type BulkUpdateUsersRequestDto struct {
	Uuids  []uuid.UUID                     `json:"uuids"`
	Fields BulkUpdateUsersRequestDtoFields `json:"fields"`
}

// GetUuids returns the value of Uuids.
func (s *BulkUpdateUsersRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// GetFields returns the value of Fields.
func (s *BulkUpdateUsersRequestDto) GetFields() BulkUpdateUsersRequestDtoFields {
	return s.Fields
}

// SetUuids sets the value of Uuids.
func (s *BulkUpdateUsersRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// SetFields sets the value of Fields.
func (s *BulkUpdateUsersRequestDto) SetFields(val BulkUpdateUsersRequestDtoFields) {
	s.Fields = val
}

type BulkUpdateUsersRequestDtoFields struct {
	Status OptBulkUpdateUsersRequestDtoFieldsStatus `json:"status"`
	// Traffic limit in bytes. 0 - unlimited.
	TrafficLimitBytes OptInt `json:"trafficLimitBytes"`
	// Traffic limit reset strategy.
	TrafficLimitStrategy OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy `json:"trafficLimitStrategy"`
	// Expiration date: 2025-01-17T15:38:45.065Z.
	ExpireAt    OptDateTime  `json:"expireAt"`
	Description OptNilString `json:"description"`
	TelegramId  OptNilInt    `json:"telegramId"`
	Email       OptNilString `json:"email"`
	Tag         OptNilString `json:"tag"`
}

// GetStatus returns the value of Status.
func (s *BulkUpdateUsersRequestDtoFields) GetStatus() OptBulkUpdateUsersRequestDtoFieldsStatus {
	return s.Status
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *BulkUpdateUsersRequestDtoFields) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *BulkUpdateUsersRequestDtoFields) GetTrafficLimitStrategy() OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetExpireAt returns the value of ExpireAt.
func (s *BulkUpdateUsersRequestDtoFields) GetExpireAt() OptDateTime {
	return s.ExpireAt
}

// GetDescription returns the value of Description.
func (s *BulkUpdateUsersRequestDtoFields) GetDescription() OptNilString {
	return s.Description
}

// GetTelegramId returns the value of TelegramId.
func (s *BulkUpdateUsersRequestDtoFields) GetTelegramId() OptNilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *BulkUpdateUsersRequestDtoFields) GetEmail() OptNilString {
	return s.Email
}

// GetTag returns the value of Tag.
func (s *BulkUpdateUsersRequestDtoFields) GetTag() OptNilString {
	return s.Tag
}

// SetStatus sets the value of Status.
func (s *BulkUpdateUsersRequestDtoFields) SetStatus(val OptBulkUpdateUsersRequestDtoFieldsStatus) {
	s.Status = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *BulkUpdateUsersRequestDtoFields) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *BulkUpdateUsersRequestDtoFields) SetTrafficLimitStrategy(val OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *BulkUpdateUsersRequestDtoFields) SetExpireAt(val OptDateTime) {
	s.ExpireAt = val
}

// SetDescription sets the value of Description.
func (s *BulkUpdateUsersRequestDtoFields) SetDescription(val OptNilString) {
	s.Description = val
}

// SetTelegramId sets the value of TelegramId.
func (s *BulkUpdateUsersRequestDtoFields) SetTelegramId(val OptNilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *BulkUpdateUsersRequestDtoFields) SetEmail(val OptNilString) {
	s.Email = val
}

// SetTag sets the value of Tag.
func (s *BulkUpdateUsersRequestDtoFields) SetTag(val OptNilString) {
	s.Tag = val
}

type BulkUpdateUsersRequestDtoFieldsStatus string

const (
	BulkUpdateUsersRequestDtoFieldsStatusACTIVE   BulkUpdateUsersRequestDtoFieldsStatus = "ACTIVE"
	BulkUpdateUsersRequestDtoFieldsStatusDISABLED BulkUpdateUsersRequestDtoFieldsStatus = "DISABLED"
	BulkUpdateUsersRequestDtoFieldsStatusLIMITED  BulkUpdateUsersRequestDtoFieldsStatus = "LIMITED"
	BulkUpdateUsersRequestDtoFieldsStatusEXPIRED  BulkUpdateUsersRequestDtoFieldsStatus = "EXPIRED"
)

// AllValues returns all BulkUpdateUsersRequestDtoFieldsStatus values.
func (BulkUpdateUsersRequestDtoFieldsStatus) AllValues() []BulkUpdateUsersRequestDtoFieldsStatus {
	return []BulkUpdateUsersRequestDtoFieldsStatus{
		BulkUpdateUsersRequestDtoFieldsStatusACTIVE,
		BulkUpdateUsersRequestDtoFieldsStatusDISABLED,
		BulkUpdateUsersRequestDtoFieldsStatusLIMITED,
		BulkUpdateUsersRequestDtoFieldsStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkUpdateUsersRequestDtoFieldsStatus) MarshalText() ([]byte, error) {
	switch s {
	case BulkUpdateUsersRequestDtoFieldsStatusACTIVE:
		return []byte(s), nil
	case BulkUpdateUsersRequestDtoFieldsStatusDISABLED:
		return []byte(s), nil
	case BulkUpdateUsersRequestDtoFieldsStatusLIMITED:
		return []byte(s), nil
	case BulkUpdateUsersRequestDtoFieldsStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkUpdateUsersRequestDtoFieldsStatus) UnmarshalText(data []byte) error {
	switch BulkUpdateUsersRequestDtoFieldsStatus(data) {
	case BulkUpdateUsersRequestDtoFieldsStatusACTIVE:
		*s = BulkUpdateUsersRequestDtoFieldsStatusACTIVE
		return nil
	case BulkUpdateUsersRequestDtoFieldsStatusDISABLED:
		*s = BulkUpdateUsersRequestDtoFieldsStatusDISABLED
		return nil
	case BulkUpdateUsersRequestDtoFieldsStatusLIMITED:
		*s = BulkUpdateUsersRequestDtoFieldsStatusLIMITED
		return nil
	case BulkUpdateUsersRequestDtoFieldsStatusEXPIRED:
		*s = BulkUpdateUsersRequestDtoFieldsStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Traffic limit reset strategy.
type BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy string

const (
	BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyNORESET BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy = "NO_RESET"
	BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyDAY     BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy = "DAY"
	BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyWEEK    BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy = "WEEK"
	BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyMONTH   BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy = "MONTH"
)

// AllValues returns all BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy values.
func (BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) AllValues() []BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy {
	return []BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy{
		BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyNORESET,
		BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyDAY,
		BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyWEEK,
		BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyDAY:
		return []byte(s), nil
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy(data) {
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyNORESET:
		*s = BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyNORESET
		return nil
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyDAY:
		*s = BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyDAY
		return nil
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyWEEK:
		*s = BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyWEEK
		return nil
	case BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyMONTH:
		*s = BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BulkUpdateUsersResponseDto
type BulkUpdateUsersResponseDto struct {
	Response BulkUpdateUsersResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *BulkUpdateUsersResponseDto) GetResponse() BulkUpdateUsersResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *BulkUpdateUsersResponseDto) SetResponse(val BulkUpdateUsersResponseDtoResponse) {
	s.Response = val
}

type BulkUpdateUsersResponseDtoResponse struct {
	AffectedRows float64 `json:"affectedRows"`
}

// GetAffectedRows returns the value of AffectedRows.
func (s *BulkUpdateUsersResponseDtoResponse) GetAffectedRows() float64 {
	return s.AffectedRows
}

// SetAffectedRows sets the value of AffectedRows.
func (s *BulkUpdateUsersResponseDtoResponse) SetAffectedRows(val float64) {
	s.AffectedRows = val
}

// Ref: #/components/schemas/CreateApiTokenRequestDto
type CreateApiTokenRequestDto struct {
	TokenName        string    `json:"tokenName"`
	TokenDescription NilString `json:"tokenDescription"`
}

// GetTokenName returns the value of TokenName.
func (s *CreateApiTokenRequestDto) GetTokenName() string {
	return s.TokenName
}

// GetTokenDescription returns the value of TokenDescription.
func (s *CreateApiTokenRequestDto) GetTokenDescription() NilString {
	return s.TokenDescription
}

// SetTokenName sets the value of TokenName.
func (s *CreateApiTokenRequestDto) SetTokenName(val string) {
	s.TokenName = val
}

// SetTokenDescription sets the value of TokenDescription.
func (s *CreateApiTokenRequestDto) SetTokenDescription(val NilString) {
	s.TokenDescription = val
}

// Ref: #/components/schemas/CreateApiTokenResponseDto
type CreateApiTokenResponseDto struct {
	Response CreateApiTokenResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *CreateApiTokenResponseDto) GetResponse() CreateApiTokenResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *CreateApiTokenResponseDto) SetResponse(val CreateApiTokenResponseDtoResponse) {
	s.Response = val
}

type CreateApiTokenResponseDtoResponse struct {
	Token string `json:"token"`
	UUID  string `json:"uuid"`
}

// GetToken returns the value of Token.
func (s *CreateApiTokenResponseDtoResponse) GetToken() string {
	return s.Token
}

// GetUUID returns the value of UUID.
func (s *CreateApiTokenResponseDtoResponse) GetUUID() string {
	return s.UUID
}

// SetToken sets the value of Token.
func (s *CreateApiTokenResponseDtoResponse) SetToken(val string) {
	s.Token = val
}

// SetUUID sets the value of UUID.
func (s *CreateApiTokenResponseDtoResponse) SetUUID(val string) {
	s.UUID = val
}

// Ref: #/components/schemas/CreateHostRequestDto
type CreateHostRequestDto struct {
	InboundUuid      uuid.UUID                             `json:"inboundUuid"`
	Remark           string                                `json:"remark"`
	Address          string                                `json:"address"`
	Port             int                                   `json:"port"`
	Path             OptString                             `json:"path"`
	Sni              OptString                             `json:"sni"`
	Host             OptString                             `json:"host"`
	Alpn             OptNilCreateHostRequestDtoAlpn        `json:"alpn"`
	Fingerprint      OptNilCreateHostRequestDtoFingerprint `json:"fingerprint"`
	AllowInsecure    OptBool                               `json:"allowInsecure"`
	IsDisabled       OptBool                               `json:"isDisabled"`
	SecurityLayer    OptCreateHostRequestDtoSecurityLayer  `json:"securityLayer"`
	XHttpExtraParams jx.Raw                                `json:"xHttpExtraParams"`
}

// GetInboundUuid returns the value of InboundUuid.
func (s *CreateHostRequestDto) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// GetRemark returns the value of Remark.
func (s *CreateHostRequestDto) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *CreateHostRequestDto) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *CreateHostRequestDto) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *CreateHostRequestDto) GetPath() OptString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *CreateHostRequestDto) GetSni() OptString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *CreateHostRequestDto) GetHost() OptString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *CreateHostRequestDto) GetAlpn() OptNilCreateHostRequestDtoAlpn {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *CreateHostRequestDto) GetFingerprint() OptNilCreateHostRequestDtoFingerprint {
	return s.Fingerprint
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *CreateHostRequestDto) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetIsDisabled returns the value of IsDisabled.
func (s *CreateHostRequestDto) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *CreateHostRequestDto) GetSecurityLayer() OptCreateHostRequestDtoSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *CreateHostRequestDto) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// SetInboundUuid sets the value of InboundUuid.
func (s *CreateHostRequestDto) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// SetRemark sets the value of Remark.
func (s *CreateHostRequestDto) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *CreateHostRequestDto) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *CreateHostRequestDto) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *CreateHostRequestDto) SetPath(val OptString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *CreateHostRequestDto) SetSni(val OptString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *CreateHostRequestDto) SetHost(val OptString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *CreateHostRequestDto) SetAlpn(val OptNilCreateHostRequestDtoAlpn) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *CreateHostRequestDto) SetFingerprint(val OptNilCreateHostRequestDtoFingerprint) {
	s.Fingerprint = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *CreateHostRequestDto) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *CreateHostRequestDto) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *CreateHostRequestDto) SetSecurityLayer(val OptCreateHostRequestDtoSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *CreateHostRequestDto) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

type CreateHostRequestDtoAlpn string

const (
	CreateHostRequestDtoAlpnH3         CreateHostRequestDtoAlpn = "h3"
	CreateHostRequestDtoAlpnH2         CreateHostRequestDtoAlpn = "h2"
	CreateHostRequestDtoAlpnHTTP11     CreateHostRequestDtoAlpn = "http/1.1"
	CreateHostRequestDtoAlpnH2HTTP11   CreateHostRequestDtoAlpn = "h2,http/1.1"
	CreateHostRequestDtoAlpnH3H2HTTP11 CreateHostRequestDtoAlpn = "h3,h2,http/1.1"
	CreateHostRequestDtoAlpnH3H2       CreateHostRequestDtoAlpn = "h3,h2"
)

// AllValues returns all CreateHostRequestDtoAlpn values.
func (CreateHostRequestDtoAlpn) AllValues() []CreateHostRequestDtoAlpn {
	return []CreateHostRequestDtoAlpn{
		CreateHostRequestDtoAlpnH3,
		CreateHostRequestDtoAlpnH2,
		CreateHostRequestDtoAlpnHTTP11,
		CreateHostRequestDtoAlpnH2HTTP11,
		CreateHostRequestDtoAlpnH3H2HTTP11,
		CreateHostRequestDtoAlpnH3H2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateHostRequestDtoAlpn) MarshalText() ([]byte, error) {
	switch s {
	case CreateHostRequestDtoAlpnH3:
		return []byte(s), nil
	case CreateHostRequestDtoAlpnH2:
		return []byte(s), nil
	case CreateHostRequestDtoAlpnHTTP11:
		return []byte(s), nil
	case CreateHostRequestDtoAlpnH2HTTP11:
		return []byte(s), nil
	case CreateHostRequestDtoAlpnH3H2HTTP11:
		return []byte(s), nil
	case CreateHostRequestDtoAlpnH3H2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateHostRequestDtoAlpn) UnmarshalText(data []byte) error {
	switch CreateHostRequestDtoAlpn(data) {
	case CreateHostRequestDtoAlpnH3:
		*s = CreateHostRequestDtoAlpnH3
		return nil
	case CreateHostRequestDtoAlpnH2:
		*s = CreateHostRequestDtoAlpnH2
		return nil
	case CreateHostRequestDtoAlpnHTTP11:
		*s = CreateHostRequestDtoAlpnHTTP11
		return nil
	case CreateHostRequestDtoAlpnH2HTTP11:
		*s = CreateHostRequestDtoAlpnH2HTTP11
		return nil
	case CreateHostRequestDtoAlpnH3H2HTTP11:
		*s = CreateHostRequestDtoAlpnH3H2HTTP11
		return nil
	case CreateHostRequestDtoAlpnH3H2:
		*s = CreateHostRequestDtoAlpnH3H2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CreateHostRequestDtoFingerprint string

const (
	CreateHostRequestDtoFingerprintChrome     CreateHostRequestDtoFingerprint = "chrome"
	CreateHostRequestDtoFingerprintFirefox    CreateHostRequestDtoFingerprint = "firefox"
	CreateHostRequestDtoFingerprintSafari     CreateHostRequestDtoFingerprint = "safari"
	CreateHostRequestDtoFingerprintIos        CreateHostRequestDtoFingerprint = "ios"
	CreateHostRequestDtoFingerprintAndroid    CreateHostRequestDtoFingerprint = "android"
	CreateHostRequestDtoFingerprintEdge       CreateHostRequestDtoFingerprint = "edge"
	CreateHostRequestDtoFingerprintQq         CreateHostRequestDtoFingerprint = "qq"
	CreateHostRequestDtoFingerprintRandom     CreateHostRequestDtoFingerprint = "random"
	CreateHostRequestDtoFingerprintRandomized CreateHostRequestDtoFingerprint = "randomized"
)

// AllValues returns all CreateHostRequestDtoFingerprint values.
func (CreateHostRequestDtoFingerprint) AllValues() []CreateHostRequestDtoFingerprint {
	return []CreateHostRequestDtoFingerprint{
		CreateHostRequestDtoFingerprintChrome,
		CreateHostRequestDtoFingerprintFirefox,
		CreateHostRequestDtoFingerprintSafari,
		CreateHostRequestDtoFingerprintIos,
		CreateHostRequestDtoFingerprintAndroid,
		CreateHostRequestDtoFingerprintEdge,
		CreateHostRequestDtoFingerprintQq,
		CreateHostRequestDtoFingerprintRandom,
		CreateHostRequestDtoFingerprintRandomized,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateHostRequestDtoFingerprint) MarshalText() ([]byte, error) {
	switch s {
	case CreateHostRequestDtoFingerprintChrome:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintFirefox:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintSafari:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintIos:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintAndroid:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintEdge:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintQq:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintRandom:
		return []byte(s), nil
	case CreateHostRequestDtoFingerprintRandomized:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateHostRequestDtoFingerprint) UnmarshalText(data []byte) error {
	switch CreateHostRequestDtoFingerprint(data) {
	case CreateHostRequestDtoFingerprintChrome:
		*s = CreateHostRequestDtoFingerprintChrome
		return nil
	case CreateHostRequestDtoFingerprintFirefox:
		*s = CreateHostRequestDtoFingerprintFirefox
		return nil
	case CreateHostRequestDtoFingerprintSafari:
		*s = CreateHostRequestDtoFingerprintSafari
		return nil
	case CreateHostRequestDtoFingerprintIos:
		*s = CreateHostRequestDtoFingerprintIos
		return nil
	case CreateHostRequestDtoFingerprintAndroid:
		*s = CreateHostRequestDtoFingerprintAndroid
		return nil
	case CreateHostRequestDtoFingerprintEdge:
		*s = CreateHostRequestDtoFingerprintEdge
		return nil
	case CreateHostRequestDtoFingerprintQq:
		*s = CreateHostRequestDtoFingerprintQq
		return nil
	case CreateHostRequestDtoFingerprintRandom:
		*s = CreateHostRequestDtoFingerprintRandom
		return nil
	case CreateHostRequestDtoFingerprintRandomized:
		*s = CreateHostRequestDtoFingerprintRandomized
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CreateHostRequestDtoSecurityLayer string

const (
	CreateHostRequestDtoSecurityLayerDEFAULT CreateHostRequestDtoSecurityLayer = "DEFAULT"
	CreateHostRequestDtoSecurityLayerTLS     CreateHostRequestDtoSecurityLayer = "TLS"
	CreateHostRequestDtoSecurityLayerNONE    CreateHostRequestDtoSecurityLayer = "NONE"
)

// AllValues returns all CreateHostRequestDtoSecurityLayer values.
func (CreateHostRequestDtoSecurityLayer) AllValues() []CreateHostRequestDtoSecurityLayer {
	return []CreateHostRequestDtoSecurityLayer{
		CreateHostRequestDtoSecurityLayerDEFAULT,
		CreateHostRequestDtoSecurityLayerTLS,
		CreateHostRequestDtoSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateHostRequestDtoSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case CreateHostRequestDtoSecurityLayerDEFAULT:
		return []byte(s), nil
	case CreateHostRequestDtoSecurityLayerTLS:
		return []byte(s), nil
	case CreateHostRequestDtoSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateHostRequestDtoSecurityLayer) UnmarshalText(data []byte) error {
	switch CreateHostRequestDtoSecurityLayer(data) {
	case CreateHostRequestDtoSecurityLayerDEFAULT:
		*s = CreateHostRequestDtoSecurityLayerDEFAULT
		return nil
	case CreateHostRequestDtoSecurityLayerTLS:
		*s = CreateHostRequestDtoSecurityLayerTLS
		return nil
	case CreateHostRequestDtoSecurityLayerNONE:
		*s = CreateHostRequestDtoSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CreateHostResponseDto
type CreateHostResponseDto struct {
	Response CreateHostResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *CreateHostResponseDto) GetResponse() CreateHostResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *CreateHostResponseDto) SetResponse(val CreateHostResponseDtoResponse) {
	s.Response = val
}

type CreateHostResponseDtoResponse struct {
	UUID             uuid.UUID                                     `json:"uuid"`
	InboundUuid      uuid.UUID                                     `json:"inboundUuid"`
	ViewPosition     int                                           `json:"viewPosition"`
	Remark           string                                        `json:"remark"`
	Address          string                                        `json:"address"`
	Port             int                                           `json:"port"`
	Path             NilString                                     `json:"path"`
	Sni              NilString                                     `json:"sni"`
	Host             NilString                                     `json:"host"`
	Alpn             NilString                                     `json:"alpn"`
	Fingerprint      NilString                                     `json:"fingerprint"`
	AllowInsecure    OptBool                                       `json:"allowInsecure"`
	IsDisabled       OptBool                                       `json:"isDisabled"`
	SecurityLayer    OptCreateHostResponseDtoResponseSecurityLayer `json:"securityLayer"`
	XHttpExtraParams jx.Raw                                        `json:"xHttpExtraParams"`
}

// GetUUID returns the value of UUID.
func (s *CreateHostResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetInboundUuid returns the value of InboundUuid.
func (s *CreateHostResponseDtoResponse) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// GetViewPosition returns the value of ViewPosition.
func (s *CreateHostResponseDtoResponse) GetViewPosition() int {
	return s.ViewPosition
}

// GetRemark returns the value of Remark.
func (s *CreateHostResponseDtoResponse) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *CreateHostResponseDtoResponse) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *CreateHostResponseDtoResponse) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *CreateHostResponseDtoResponse) GetPath() NilString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *CreateHostResponseDtoResponse) GetSni() NilString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *CreateHostResponseDtoResponse) GetHost() NilString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *CreateHostResponseDtoResponse) GetAlpn() NilString {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *CreateHostResponseDtoResponse) GetFingerprint() NilString {
	return s.Fingerprint
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *CreateHostResponseDtoResponse) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetIsDisabled returns the value of IsDisabled.
func (s *CreateHostResponseDtoResponse) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *CreateHostResponseDtoResponse) GetSecurityLayer() OptCreateHostResponseDtoResponseSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *CreateHostResponseDtoResponse) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// SetUUID sets the value of UUID.
func (s *CreateHostResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetInboundUuid sets the value of InboundUuid.
func (s *CreateHostResponseDtoResponse) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *CreateHostResponseDtoResponse) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetRemark sets the value of Remark.
func (s *CreateHostResponseDtoResponse) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *CreateHostResponseDtoResponse) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *CreateHostResponseDtoResponse) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *CreateHostResponseDtoResponse) SetPath(val NilString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *CreateHostResponseDtoResponse) SetSni(val NilString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *CreateHostResponseDtoResponse) SetHost(val NilString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *CreateHostResponseDtoResponse) SetAlpn(val NilString) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *CreateHostResponseDtoResponse) SetFingerprint(val NilString) {
	s.Fingerprint = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *CreateHostResponseDtoResponse) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *CreateHostResponseDtoResponse) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *CreateHostResponseDtoResponse) SetSecurityLayer(val OptCreateHostResponseDtoResponseSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *CreateHostResponseDtoResponse) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

type CreateHostResponseDtoResponseSecurityLayer string

const (
	CreateHostResponseDtoResponseSecurityLayerDEFAULT CreateHostResponseDtoResponseSecurityLayer = "DEFAULT"
	CreateHostResponseDtoResponseSecurityLayerTLS     CreateHostResponseDtoResponseSecurityLayer = "TLS"
	CreateHostResponseDtoResponseSecurityLayerNONE    CreateHostResponseDtoResponseSecurityLayer = "NONE"
)

// AllValues returns all CreateHostResponseDtoResponseSecurityLayer values.
func (CreateHostResponseDtoResponseSecurityLayer) AllValues() []CreateHostResponseDtoResponseSecurityLayer {
	return []CreateHostResponseDtoResponseSecurityLayer{
		CreateHostResponseDtoResponseSecurityLayerDEFAULT,
		CreateHostResponseDtoResponseSecurityLayerTLS,
		CreateHostResponseDtoResponseSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateHostResponseDtoResponseSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case CreateHostResponseDtoResponseSecurityLayerDEFAULT:
		return []byte(s), nil
	case CreateHostResponseDtoResponseSecurityLayerTLS:
		return []byte(s), nil
	case CreateHostResponseDtoResponseSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateHostResponseDtoResponseSecurityLayer) UnmarshalText(data []byte) error {
	switch CreateHostResponseDtoResponseSecurityLayer(data) {
	case CreateHostResponseDtoResponseSecurityLayerDEFAULT:
		*s = CreateHostResponseDtoResponseSecurityLayerDEFAULT
		return nil
	case CreateHostResponseDtoResponseSecurityLayerTLS:
		*s = CreateHostResponseDtoResponseSecurityLayerTLS
		return nil
	case CreateHostResponseDtoResponseSecurityLayerNONE:
		*s = CreateHostResponseDtoResponseSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CreateNodeRequestDto
type CreateNodeRequestDto struct {
	Name                    string      `json:"name"`
	Address                 string      `json:"address"`
	Port                    OptInt      `json:"port"`
	IsTrafficTrackingActive OptBool     `json:"isTrafficTrackingActive"`
	TrafficLimitBytes       OptInt      `json:"trafficLimitBytes"`
	NotifyPercent           OptInt      `json:"notifyPercent"`
	TrafficResetDay         OptInt      `json:"trafficResetDay"`
	ExcludedInbounds        []uuid.UUID `json:"excludedInbounds"`
	CountryCode             OptString   `json:"countryCode"`
	ConsumptionMultiplier   OptFloat64  `json:"consumptionMultiplier"`
}

// GetName returns the value of Name.
func (s *CreateNodeRequestDto) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *CreateNodeRequestDto) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *CreateNodeRequestDto) GetPort() OptInt {
	return s.Port
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *CreateNodeRequestDto) GetIsTrafficTrackingActive() OptBool {
	return s.IsTrafficTrackingActive
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *CreateNodeRequestDto) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *CreateNodeRequestDto) GetNotifyPercent() OptInt {
	return s.NotifyPercent
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *CreateNodeRequestDto) GetTrafficResetDay() OptInt {
	return s.TrafficResetDay
}

// GetExcludedInbounds returns the value of ExcludedInbounds.
func (s *CreateNodeRequestDto) GetExcludedInbounds() []uuid.UUID {
	return s.ExcludedInbounds
}

// GetCountryCode returns the value of CountryCode.
func (s *CreateNodeRequestDto) GetCountryCode() OptString {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *CreateNodeRequestDto) GetConsumptionMultiplier() OptFloat64 {
	return s.ConsumptionMultiplier
}

// SetName sets the value of Name.
func (s *CreateNodeRequestDto) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *CreateNodeRequestDto) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *CreateNodeRequestDto) SetPort(val OptInt) {
	s.Port = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *CreateNodeRequestDto) SetIsTrafficTrackingActive(val OptBool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *CreateNodeRequestDto) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *CreateNodeRequestDto) SetNotifyPercent(val OptInt) {
	s.NotifyPercent = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *CreateNodeRequestDto) SetTrafficResetDay(val OptInt) {
	s.TrafficResetDay = val
}

// SetExcludedInbounds sets the value of ExcludedInbounds.
func (s *CreateNodeRequestDto) SetExcludedInbounds(val []uuid.UUID) {
	s.ExcludedInbounds = val
}

// SetCountryCode sets the value of CountryCode.
func (s *CreateNodeRequestDto) SetCountryCode(val OptString) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *CreateNodeRequestDto) SetConsumptionMultiplier(val OptFloat64) {
	s.ConsumptionMultiplier = val
}

// Ref: #/components/schemas/CreateNodeResponseDto
type CreateNodeResponseDto struct {
	Response CreateNodeResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *CreateNodeResponseDto) GetResponse() CreateNodeResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *CreateNodeResponseDto) SetResponse(val CreateNodeResponseDtoResponse) {
	s.Response = val
}

type CreateNodeResponseDtoResponse struct {
	UUID                    uuid.UUID                                           `json:"uuid"`
	Name                    string                                              `json:"name"`
	Address                 string                                              `json:"address"`
	Port                    NilInt                                              `json:"port"`
	IsConnected             bool                                                `json:"isConnected"`
	IsDisabled              bool                                                `json:"isDisabled"`
	IsConnecting            bool                                                `json:"isConnecting"`
	IsNodeOnline            bool                                                `json:"isNodeOnline"`
	IsXrayRunning           bool                                                `json:"isXrayRunning"`
	LastStatusChange        NilDateTime                                         `json:"lastStatusChange"`
	LastStatusMessage       NilString                                           `json:"lastStatusMessage"`
	XrayVersion             NilString                                           `json:"xrayVersion"`
	XrayUptime              string                                              `json:"xrayUptime"`
	IsTrafficTrackingActive bool                                                `json:"isTrafficTrackingActive"`
	TrafficResetDay         NilInt                                              `json:"trafficResetDay"`
	TrafficLimitBytes       NilFloat64                                          `json:"trafficLimitBytes"`
	TrafficUsedBytes        NilFloat64                                          `json:"trafficUsedBytes"`
	NotifyPercent           NilInt                                              `json:"notifyPercent"`
	UsersOnline             NilInt                                              `json:"usersOnline"`
	ViewPosition            int                                                 `json:"viewPosition"`
	CountryCode             string                                              `json:"countryCode"`
	ConsumptionMultiplier   float64                                             `json:"consumptionMultiplier"`
	CpuCount                NilInt                                              `json:"cpuCount"`
	CpuModel                NilString                                           `json:"cpuModel"`
	TotalRam                NilString                                           `json:"totalRam"`
	CreatedAt               time.Time                                           `json:"createdAt"`
	UpdatedAt               time.Time                                           `json:"updatedAt"`
	ExcludedInbounds        []CreateNodeResponseDtoResponseExcludedInboundsItem `json:"excludedInbounds"`
}

// GetUUID returns the value of UUID.
func (s *CreateNodeResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *CreateNodeResponseDtoResponse) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *CreateNodeResponseDtoResponse) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *CreateNodeResponseDtoResponse) GetPort() NilInt {
	return s.Port
}

// GetIsConnected returns the value of IsConnected.
func (s *CreateNodeResponseDtoResponse) GetIsConnected() bool {
	return s.IsConnected
}

// GetIsDisabled returns the value of IsDisabled.
func (s *CreateNodeResponseDtoResponse) GetIsDisabled() bool {
	return s.IsDisabled
}

// GetIsConnecting returns the value of IsConnecting.
func (s *CreateNodeResponseDtoResponse) GetIsConnecting() bool {
	return s.IsConnecting
}

// GetIsNodeOnline returns the value of IsNodeOnline.
func (s *CreateNodeResponseDtoResponse) GetIsNodeOnline() bool {
	return s.IsNodeOnline
}

// GetIsXrayRunning returns the value of IsXrayRunning.
func (s *CreateNodeResponseDtoResponse) GetIsXrayRunning() bool {
	return s.IsXrayRunning
}

// GetLastStatusChange returns the value of LastStatusChange.
func (s *CreateNodeResponseDtoResponse) GetLastStatusChange() NilDateTime {
	return s.LastStatusChange
}

// GetLastStatusMessage returns the value of LastStatusMessage.
func (s *CreateNodeResponseDtoResponse) GetLastStatusMessage() NilString {
	return s.LastStatusMessage
}

// GetXrayVersion returns the value of XrayVersion.
func (s *CreateNodeResponseDtoResponse) GetXrayVersion() NilString {
	return s.XrayVersion
}

// GetXrayUptime returns the value of XrayUptime.
func (s *CreateNodeResponseDtoResponse) GetXrayUptime() string {
	return s.XrayUptime
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *CreateNodeResponseDtoResponse) GetIsTrafficTrackingActive() bool {
	return s.IsTrafficTrackingActive
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *CreateNodeResponseDtoResponse) GetTrafficResetDay() NilInt {
	return s.TrafficResetDay
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *CreateNodeResponseDtoResponse) GetTrafficLimitBytes() NilFloat64 {
	return s.TrafficLimitBytes
}

// GetTrafficUsedBytes returns the value of TrafficUsedBytes.
func (s *CreateNodeResponseDtoResponse) GetTrafficUsedBytes() NilFloat64 {
	return s.TrafficUsedBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *CreateNodeResponseDtoResponse) GetNotifyPercent() NilInt {
	return s.NotifyPercent
}

// GetUsersOnline returns the value of UsersOnline.
func (s *CreateNodeResponseDtoResponse) GetUsersOnline() NilInt {
	return s.UsersOnline
}

// GetViewPosition returns the value of ViewPosition.
func (s *CreateNodeResponseDtoResponse) GetViewPosition() int {
	return s.ViewPosition
}

// GetCountryCode returns the value of CountryCode.
func (s *CreateNodeResponseDtoResponse) GetCountryCode() string {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *CreateNodeResponseDtoResponse) GetConsumptionMultiplier() float64 {
	return s.ConsumptionMultiplier
}

// GetCpuCount returns the value of CpuCount.
func (s *CreateNodeResponseDtoResponse) GetCpuCount() NilInt {
	return s.CpuCount
}

// GetCpuModel returns the value of CpuModel.
func (s *CreateNodeResponseDtoResponse) GetCpuModel() NilString {
	return s.CpuModel
}

// GetTotalRam returns the value of TotalRam.
func (s *CreateNodeResponseDtoResponse) GetTotalRam() NilString {
	return s.TotalRam
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateNodeResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CreateNodeResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetExcludedInbounds returns the value of ExcludedInbounds.
func (s *CreateNodeResponseDtoResponse) GetExcludedInbounds() []CreateNodeResponseDtoResponseExcludedInboundsItem {
	return s.ExcludedInbounds
}

// SetUUID sets the value of UUID.
func (s *CreateNodeResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *CreateNodeResponseDtoResponse) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *CreateNodeResponseDtoResponse) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *CreateNodeResponseDtoResponse) SetPort(val NilInt) {
	s.Port = val
}

// SetIsConnected sets the value of IsConnected.
func (s *CreateNodeResponseDtoResponse) SetIsConnected(val bool) {
	s.IsConnected = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *CreateNodeResponseDtoResponse) SetIsDisabled(val bool) {
	s.IsDisabled = val
}

// SetIsConnecting sets the value of IsConnecting.
func (s *CreateNodeResponseDtoResponse) SetIsConnecting(val bool) {
	s.IsConnecting = val
}

// SetIsNodeOnline sets the value of IsNodeOnline.
func (s *CreateNodeResponseDtoResponse) SetIsNodeOnline(val bool) {
	s.IsNodeOnline = val
}

// SetIsXrayRunning sets the value of IsXrayRunning.
func (s *CreateNodeResponseDtoResponse) SetIsXrayRunning(val bool) {
	s.IsXrayRunning = val
}

// SetLastStatusChange sets the value of LastStatusChange.
func (s *CreateNodeResponseDtoResponse) SetLastStatusChange(val NilDateTime) {
	s.LastStatusChange = val
}

// SetLastStatusMessage sets the value of LastStatusMessage.
func (s *CreateNodeResponseDtoResponse) SetLastStatusMessage(val NilString) {
	s.LastStatusMessage = val
}

// SetXrayVersion sets the value of XrayVersion.
func (s *CreateNodeResponseDtoResponse) SetXrayVersion(val NilString) {
	s.XrayVersion = val
}

// SetXrayUptime sets the value of XrayUptime.
func (s *CreateNodeResponseDtoResponse) SetXrayUptime(val string) {
	s.XrayUptime = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *CreateNodeResponseDtoResponse) SetIsTrafficTrackingActive(val bool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *CreateNodeResponseDtoResponse) SetTrafficResetDay(val NilInt) {
	s.TrafficResetDay = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *CreateNodeResponseDtoResponse) SetTrafficLimitBytes(val NilFloat64) {
	s.TrafficLimitBytes = val
}

// SetTrafficUsedBytes sets the value of TrafficUsedBytes.
func (s *CreateNodeResponseDtoResponse) SetTrafficUsedBytes(val NilFloat64) {
	s.TrafficUsedBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *CreateNodeResponseDtoResponse) SetNotifyPercent(val NilInt) {
	s.NotifyPercent = val
}

// SetUsersOnline sets the value of UsersOnline.
func (s *CreateNodeResponseDtoResponse) SetUsersOnline(val NilInt) {
	s.UsersOnline = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *CreateNodeResponseDtoResponse) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetCountryCode sets the value of CountryCode.
func (s *CreateNodeResponseDtoResponse) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *CreateNodeResponseDtoResponse) SetConsumptionMultiplier(val float64) {
	s.ConsumptionMultiplier = val
}

// SetCpuCount sets the value of CpuCount.
func (s *CreateNodeResponseDtoResponse) SetCpuCount(val NilInt) {
	s.CpuCount = val
}

// SetCpuModel sets the value of CpuModel.
func (s *CreateNodeResponseDtoResponse) SetCpuModel(val NilString) {
	s.CpuModel = val
}

// SetTotalRam sets the value of TotalRam.
func (s *CreateNodeResponseDtoResponse) SetTotalRam(val NilString) {
	s.TotalRam = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateNodeResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CreateNodeResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetExcludedInbounds sets the value of ExcludedInbounds.
func (s *CreateNodeResponseDtoResponse) SetExcludedInbounds(val []CreateNodeResponseDtoResponseExcludedInboundsItem) {
	s.ExcludedInbounds = val
}

type CreateNodeResponseDtoResponseExcludedInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *CreateNodeResponseDtoResponseExcludedInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *CreateNodeResponseDtoResponseExcludedInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *CreateNodeResponseDtoResponseExcludedInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *CreateNodeResponseDtoResponseExcludedInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *CreateNodeResponseDtoResponseExcludedInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *CreateNodeResponseDtoResponseExcludedInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *CreateNodeResponseDtoResponseExcludedInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *CreateNodeResponseDtoResponseExcludedInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *CreateNodeResponseDtoResponseExcludedInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *CreateNodeResponseDtoResponseExcludedInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// Ref: #/components/schemas/CreateUserHwidDeviceRequestDto
type CreateUserHwidDeviceRequestDto struct {
	Hwid        string    `json:"hwid"`
	UserUuid    uuid.UUID `json:"userUuid"`
	Platform    OptString `json:"platform"`
	OsVersion   OptString `json:"osVersion"`
	DeviceModel OptString `json:"deviceModel"`
	UserAgent   OptString `json:"userAgent"`
}

// GetHwid returns the value of Hwid.
func (s *CreateUserHwidDeviceRequestDto) GetHwid() string {
	return s.Hwid
}

// GetUserUuid returns the value of UserUuid.
func (s *CreateUserHwidDeviceRequestDto) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetPlatform returns the value of Platform.
func (s *CreateUserHwidDeviceRequestDto) GetPlatform() OptString {
	return s.Platform
}

// GetOsVersion returns the value of OsVersion.
func (s *CreateUserHwidDeviceRequestDto) GetOsVersion() OptString {
	return s.OsVersion
}

// GetDeviceModel returns the value of DeviceModel.
func (s *CreateUserHwidDeviceRequestDto) GetDeviceModel() OptString {
	return s.DeviceModel
}

// GetUserAgent returns the value of UserAgent.
func (s *CreateUserHwidDeviceRequestDto) GetUserAgent() OptString {
	return s.UserAgent
}

// SetHwid sets the value of Hwid.
func (s *CreateUserHwidDeviceRequestDto) SetHwid(val string) {
	s.Hwid = val
}

// SetUserUuid sets the value of UserUuid.
func (s *CreateUserHwidDeviceRequestDto) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetPlatform sets the value of Platform.
func (s *CreateUserHwidDeviceRequestDto) SetPlatform(val OptString) {
	s.Platform = val
}

// SetOsVersion sets the value of OsVersion.
func (s *CreateUserHwidDeviceRequestDto) SetOsVersion(val OptString) {
	s.OsVersion = val
}

// SetDeviceModel sets the value of DeviceModel.
func (s *CreateUserHwidDeviceRequestDto) SetDeviceModel(val OptString) {
	s.DeviceModel = val
}

// SetUserAgent sets the value of UserAgent.
func (s *CreateUserHwidDeviceRequestDto) SetUserAgent(val OptString) {
	s.UserAgent = val
}

// Ref: #/components/schemas/CreateUserHwidDeviceResponseDto
type CreateUserHwidDeviceResponseDto struct {
	Response []CreateUserHwidDeviceResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *CreateUserHwidDeviceResponseDto) GetResponse() []CreateUserHwidDeviceResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *CreateUserHwidDeviceResponseDto) SetResponse(val []CreateUserHwidDeviceResponseDtoResponseItem) {
	s.Response = val
}

type CreateUserHwidDeviceResponseDtoResponseItem struct {
	Hwid        string    `json:"hwid"`
	UserUuid    uuid.UUID `json:"userUuid"`
	Platform    NilString `json:"platform"`
	OsVersion   NilString `json:"osVersion"`
	DeviceModel NilString `json:"deviceModel"`
	UserAgent   NilString `json:"userAgent"`
	CreatedAt   time.Time `json:"createdAt"`
	UpdatedAt   time.Time `json:"updatedAt"`
}

// GetHwid returns the value of Hwid.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) GetHwid() string {
	return s.Hwid
}

// GetUserUuid returns the value of UserUuid.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetPlatform returns the value of Platform.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) GetPlatform() NilString {
	return s.Platform
}

// GetOsVersion returns the value of OsVersion.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) GetOsVersion() NilString {
	return s.OsVersion
}

// GetDeviceModel returns the value of DeviceModel.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) GetDeviceModel() NilString {
	return s.DeviceModel
}

// GetUserAgent returns the value of UserAgent.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) GetUserAgent() NilString {
	return s.UserAgent
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetHwid sets the value of Hwid.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) SetHwid(val string) {
	s.Hwid = val
}

// SetUserUuid sets the value of UserUuid.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetPlatform sets the value of Platform.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) SetPlatform(val NilString) {
	s.Platform = val
}

// SetOsVersion sets the value of OsVersion.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) SetOsVersion(val NilString) {
	s.OsVersion = val
}

// SetDeviceModel sets the value of DeviceModel.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) SetDeviceModel(val NilString) {
	s.DeviceModel = val
}

// SetUserAgent sets the value of UserAgent.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) SetUserAgent(val NilString) {
	s.UserAgent = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CreateUserHwidDeviceResponseDtoResponseItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/CreateUserRequestDto
type CreateUserRequestDto struct {
	Username         string                        `json:"username"`
	Status           OptCreateUserRequestDtoStatus `json:"status"`
	SubscriptionUuid OptUUID                       `json:"subscriptionUuid"`
	ShortUuid        OptString                     `json:"shortUuid"`
	TrojanPassword   OptString                     `json:"trojanPassword"`
	VlessUuid        OptUUID                       `json:"vlessUuid"`
	SsPassword       OptString                     `json:"ssPassword"`
	// Traffic limit in bytes. 0 - unlimited.
	TrafficLimitBytes OptInt `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy CreateUserRequestDtoTrafficLimitStrategy `json:"trafficLimitStrategy"`
	ActiveUserInbounds   []uuid.UUID                              `json:"activeUserInbounds"`
	// Date format: 2025-01-17T15:38:45.065Z.
	ExpireAt time.Time `json:"expireAt"`
	// Date format: 2025-01-17T15:38:45.065Z.
	CreatedAt OptDateTime `json:"createdAt"`
	// Date format: 2025-01-17T15:38:45.065Z.
	LastTrafficResetAt OptDateTime  `json:"lastTrafficResetAt"`
	Description        OptString    `json:"description"`
	Tag                OptNilString `json:"tag"`
	TelegramId         OptInt       `json:"telegramId"`
	Email              OptString    `json:"email"`
	// Device limit.
	HwidDeviceLimit     OptInt  `json:"hwidDeviceLimit"`
	ActivateAllInbounds OptBool `json:"activateAllInbounds"`
}

// GetUsername returns the value of Username.
func (s *CreateUserRequestDto) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *CreateUserRequestDto) GetStatus() OptCreateUserRequestDtoStatus {
	return s.Status
}

// GetSubscriptionUuid returns the value of SubscriptionUuid.
func (s *CreateUserRequestDto) GetSubscriptionUuid() OptUUID {
	return s.SubscriptionUuid
}

// GetShortUuid returns the value of ShortUuid.
func (s *CreateUserRequestDto) GetShortUuid() OptString {
	return s.ShortUuid
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *CreateUserRequestDto) GetTrojanPassword() OptString {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *CreateUserRequestDto) GetVlessUuid() OptUUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *CreateUserRequestDto) GetSsPassword() OptString {
	return s.SsPassword
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *CreateUserRequestDto) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *CreateUserRequestDto) GetTrafficLimitStrategy() CreateUserRequestDtoTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetActiveUserInbounds returns the value of ActiveUserInbounds.
func (s *CreateUserRequestDto) GetActiveUserInbounds() []uuid.UUID {
	return s.ActiveUserInbounds
}

// GetExpireAt returns the value of ExpireAt.
func (s *CreateUserRequestDto) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateUserRequestDto) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *CreateUserRequestDto) GetLastTrafficResetAt() OptDateTime {
	return s.LastTrafficResetAt
}

// GetDescription returns the value of Description.
func (s *CreateUserRequestDto) GetDescription() OptString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *CreateUserRequestDto) GetTag() OptNilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *CreateUserRequestDto) GetTelegramId() OptInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *CreateUserRequestDto) GetEmail() OptString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *CreateUserRequestDto) GetHwidDeviceLimit() OptInt {
	return s.HwidDeviceLimit
}

// GetActivateAllInbounds returns the value of ActivateAllInbounds.
func (s *CreateUserRequestDto) GetActivateAllInbounds() OptBool {
	return s.ActivateAllInbounds
}

// SetUsername sets the value of Username.
func (s *CreateUserRequestDto) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *CreateUserRequestDto) SetStatus(val OptCreateUserRequestDtoStatus) {
	s.Status = val
}

// SetSubscriptionUuid sets the value of SubscriptionUuid.
func (s *CreateUserRequestDto) SetSubscriptionUuid(val OptUUID) {
	s.SubscriptionUuid = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *CreateUserRequestDto) SetShortUuid(val OptString) {
	s.ShortUuid = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *CreateUserRequestDto) SetTrojanPassword(val OptString) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *CreateUserRequestDto) SetVlessUuid(val OptUUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *CreateUserRequestDto) SetSsPassword(val OptString) {
	s.SsPassword = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *CreateUserRequestDto) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *CreateUserRequestDto) SetTrafficLimitStrategy(val CreateUserRequestDtoTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetActiveUserInbounds sets the value of ActiveUserInbounds.
func (s *CreateUserRequestDto) SetActiveUserInbounds(val []uuid.UUID) {
	s.ActiveUserInbounds = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *CreateUserRequestDto) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateUserRequestDto) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *CreateUserRequestDto) SetLastTrafficResetAt(val OptDateTime) {
	s.LastTrafficResetAt = val
}

// SetDescription sets the value of Description.
func (s *CreateUserRequestDto) SetDescription(val OptString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *CreateUserRequestDto) SetTag(val OptNilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *CreateUserRequestDto) SetTelegramId(val OptInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *CreateUserRequestDto) SetEmail(val OptString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *CreateUserRequestDto) SetHwidDeviceLimit(val OptInt) {
	s.HwidDeviceLimit = val
}

// SetActivateAllInbounds sets the value of ActivateAllInbounds.
func (s *CreateUserRequestDto) SetActivateAllInbounds(val OptBool) {
	s.ActivateAllInbounds = val
}

type CreateUserRequestDtoStatus string

const (
	CreateUserRequestDtoStatusACTIVE   CreateUserRequestDtoStatus = "ACTIVE"
	CreateUserRequestDtoStatusDISABLED CreateUserRequestDtoStatus = "DISABLED"
	CreateUserRequestDtoStatusLIMITED  CreateUserRequestDtoStatus = "LIMITED"
	CreateUserRequestDtoStatusEXPIRED  CreateUserRequestDtoStatus = "EXPIRED"
)

// AllValues returns all CreateUserRequestDtoStatus values.
func (CreateUserRequestDtoStatus) AllValues() []CreateUserRequestDtoStatus {
	return []CreateUserRequestDtoStatus{
		CreateUserRequestDtoStatusACTIVE,
		CreateUserRequestDtoStatusDISABLED,
		CreateUserRequestDtoStatusLIMITED,
		CreateUserRequestDtoStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateUserRequestDtoStatus) MarshalText() ([]byte, error) {
	switch s {
	case CreateUserRequestDtoStatusACTIVE:
		return []byte(s), nil
	case CreateUserRequestDtoStatusDISABLED:
		return []byte(s), nil
	case CreateUserRequestDtoStatusLIMITED:
		return []byte(s), nil
	case CreateUserRequestDtoStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateUserRequestDtoStatus) UnmarshalText(data []byte) error {
	switch CreateUserRequestDtoStatus(data) {
	case CreateUserRequestDtoStatusACTIVE:
		*s = CreateUserRequestDtoStatusACTIVE
		return nil
	case CreateUserRequestDtoStatusDISABLED:
		*s = CreateUserRequestDtoStatusDISABLED
		return nil
	case CreateUserRequestDtoStatusLIMITED:
		*s = CreateUserRequestDtoStatusLIMITED
		return nil
	case CreateUserRequestDtoStatusEXPIRED:
		*s = CreateUserRequestDtoStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type CreateUserRequestDtoTrafficLimitStrategy string

const (
	CreateUserRequestDtoTrafficLimitStrategyNORESET CreateUserRequestDtoTrafficLimitStrategy = "NO_RESET"
	CreateUserRequestDtoTrafficLimitStrategyDAY     CreateUserRequestDtoTrafficLimitStrategy = "DAY"
	CreateUserRequestDtoTrafficLimitStrategyWEEK    CreateUserRequestDtoTrafficLimitStrategy = "WEEK"
	CreateUserRequestDtoTrafficLimitStrategyMONTH   CreateUserRequestDtoTrafficLimitStrategy = "MONTH"
)

// AllValues returns all CreateUserRequestDtoTrafficLimitStrategy values.
func (CreateUserRequestDtoTrafficLimitStrategy) AllValues() []CreateUserRequestDtoTrafficLimitStrategy {
	return []CreateUserRequestDtoTrafficLimitStrategy{
		CreateUserRequestDtoTrafficLimitStrategyNORESET,
		CreateUserRequestDtoTrafficLimitStrategyDAY,
		CreateUserRequestDtoTrafficLimitStrategyWEEK,
		CreateUserRequestDtoTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateUserRequestDtoTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case CreateUserRequestDtoTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case CreateUserRequestDtoTrafficLimitStrategyDAY:
		return []byte(s), nil
	case CreateUserRequestDtoTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case CreateUserRequestDtoTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateUserRequestDtoTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch CreateUserRequestDtoTrafficLimitStrategy(data) {
	case CreateUserRequestDtoTrafficLimitStrategyNORESET:
		*s = CreateUserRequestDtoTrafficLimitStrategyNORESET
		return nil
	case CreateUserRequestDtoTrafficLimitStrategyDAY:
		*s = CreateUserRequestDtoTrafficLimitStrategyDAY
		return nil
	case CreateUserRequestDtoTrafficLimitStrategyWEEK:
		*s = CreateUserRequestDtoTrafficLimitStrategyWEEK
		return nil
	case CreateUserRequestDtoTrafficLimitStrategyMONTH:
		*s = CreateUserRequestDtoTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/DeleteApiTokenResponseDto
type DeleteApiTokenResponseDto struct {
	Response bool `json:"response"`
}

// GetResponse returns the value of Response.
func (s *DeleteApiTokenResponseDto) GetResponse() bool {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *DeleteApiTokenResponseDto) SetResponse(val bool) {
	s.Response = val
}

// Ref: #/components/schemas/DeleteHostResponseDto
type DeleteHostResponseDto struct {
	Response DeleteHostResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *DeleteHostResponseDto) GetResponse() DeleteHostResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *DeleteHostResponseDto) SetResponse(val DeleteHostResponseDtoResponse) {
	s.Response = val
}

func (*DeleteHostResponseDto) hostsControllerDeleteHostRes() {}

type DeleteHostResponseDtoResponse struct {
	IsDeleted bool `json:"isDeleted"`
}

// GetIsDeleted returns the value of IsDeleted.
func (s *DeleteHostResponseDtoResponse) GetIsDeleted() bool {
	return s.IsDeleted
}

// SetIsDeleted sets the value of IsDeleted.
func (s *DeleteHostResponseDtoResponse) SetIsDeleted(val bool) {
	s.IsDeleted = val
}

// Ref: #/components/schemas/DeleteNodeResponseDto
type DeleteNodeResponseDto struct {
	Response DeleteNodeResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *DeleteNodeResponseDto) GetResponse() DeleteNodeResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *DeleteNodeResponseDto) SetResponse(val DeleteNodeResponseDtoResponse) {
	s.Response = val
}

type DeleteNodeResponseDtoResponse struct {
	IsDeleted bool `json:"isDeleted"`
}

// GetIsDeleted returns the value of IsDeleted.
func (s *DeleteNodeResponseDtoResponse) GetIsDeleted() bool {
	return s.IsDeleted
}

// SetIsDeleted sets the value of IsDeleted.
func (s *DeleteNodeResponseDtoResponse) SetIsDeleted(val bool) {
	s.IsDeleted = val
}

// Ref: #/components/schemas/DeleteUserHwidDeviceRequestDto
type DeleteUserHwidDeviceRequestDto struct {
	UserUuid uuid.UUID `json:"userUuid"`
	Hwid     string    `json:"hwid"`
}

// GetUserUuid returns the value of UserUuid.
func (s *DeleteUserHwidDeviceRequestDto) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetHwid returns the value of Hwid.
func (s *DeleteUserHwidDeviceRequestDto) GetHwid() string {
	return s.Hwid
}

// SetUserUuid sets the value of UserUuid.
func (s *DeleteUserHwidDeviceRequestDto) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetHwid sets the value of Hwid.
func (s *DeleteUserHwidDeviceRequestDto) SetHwid(val string) {
	s.Hwid = val
}

// Ref: #/components/schemas/DeleteUserHwidDeviceResponseDto
type DeleteUserHwidDeviceResponseDto struct {
	Response []DeleteUserHwidDeviceResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *DeleteUserHwidDeviceResponseDto) GetResponse() []DeleteUserHwidDeviceResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *DeleteUserHwidDeviceResponseDto) SetResponse(val []DeleteUserHwidDeviceResponseDtoResponseItem) {
	s.Response = val
}

type DeleteUserHwidDeviceResponseDtoResponseItem struct {
	Hwid        string    `json:"hwid"`
	UserUuid    uuid.UUID `json:"userUuid"`
	Platform    NilString `json:"platform"`
	OsVersion   NilString `json:"osVersion"`
	DeviceModel NilString `json:"deviceModel"`
	UserAgent   NilString `json:"userAgent"`
	CreatedAt   time.Time `json:"createdAt"`
	UpdatedAt   time.Time `json:"updatedAt"`
}

// GetHwid returns the value of Hwid.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) GetHwid() string {
	return s.Hwid
}

// GetUserUuid returns the value of UserUuid.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetPlatform returns the value of Platform.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) GetPlatform() NilString {
	return s.Platform
}

// GetOsVersion returns the value of OsVersion.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) GetOsVersion() NilString {
	return s.OsVersion
}

// GetDeviceModel returns the value of DeviceModel.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) GetDeviceModel() NilString {
	return s.DeviceModel
}

// GetUserAgent returns the value of UserAgent.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) GetUserAgent() NilString {
	return s.UserAgent
}

// GetCreatedAt returns the value of CreatedAt.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetHwid sets the value of Hwid.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) SetHwid(val string) {
	s.Hwid = val
}

// SetUserUuid sets the value of UserUuid.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetPlatform sets the value of Platform.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) SetPlatform(val NilString) {
	s.Platform = val
}

// SetOsVersion sets the value of OsVersion.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) SetOsVersion(val NilString) {
	s.OsVersion = val
}

// SetDeviceModel sets the value of DeviceModel.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) SetDeviceModel(val NilString) {
	s.DeviceModel = val
}

// SetUserAgent sets the value of UserAgent.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) SetUserAgent(val NilString) {
	s.UserAgent = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *DeleteUserHwidDeviceResponseDtoResponseItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/DeleteUserResponseDto
type DeleteUserResponseDto struct {
	Response DeleteUserResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *DeleteUserResponseDto) GetResponse() DeleteUserResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *DeleteUserResponseDto) SetResponse(val DeleteUserResponseDtoResponse) {
	s.Response = val
}

func (*DeleteUserResponseDto) usersControllerDeleteUserRes() {}

type DeleteUserResponseDtoResponse struct {
	IsDeleted bool `json:"isDeleted"`
}

// GetIsDeleted returns the value of IsDeleted.
func (s *DeleteUserResponseDtoResponse) GetIsDeleted() bool {
	return s.IsDeleted
}

// SetIsDeleted sets the value of IsDeleted.
func (s *DeleteUserResponseDtoResponse) SetIsDeleted(val bool) {
	s.IsDeleted = val
}

// Ref: #/components/schemas/DisableNodeResponseDto
type DisableNodeResponseDto struct {
	Response DisableNodeResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *DisableNodeResponseDto) GetResponse() DisableNodeResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *DisableNodeResponseDto) SetResponse(val DisableNodeResponseDtoResponse) {
	s.Response = val
}

type DisableNodeResponseDtoResponse struct {
	UUID                    uuid.UUID                                            `json:"uuid"`
	Name                    string                                               `json:"name"`
	Address                 string                                               `json:"address"`
	Port                    NilInt                                               `json:"port"`
	IsConnected             bool                                                 `json:"isConnected"`
	IsDisabled              bool                                                 `json:"isDisabled"`
	IsConnecting            bool                                                 `json:"isConnecting"`
	IsNodeOnline            bool                                                 `json:"isNodeOnline"`
	IsXrayRunning           bool                                                 `json:"isXrayRunning"`
	LastStatusChange        NilDateTime                                          `json:"lastStatusChange"`
	LastStatusMessage       NilString                                            `json:"lastStatusMessage"`
	XrayVersion             NilString                                            `json:"xrayVersion"`
	XrayUptime              string                                               `json:"xrayUptime"`
	IsTrafficTrackingActive bool                                                 `json:"isTrafficTrackingActive"`
	TrafficResetDay         NilInt                                               `json:"trafficResetDay"`
	TrafficLimitBytes       NilFloat64                                           `json:"trafficLimitBytes"`
	TrafficUsedBytes        NilFloat64                                           `json:"trafficUsedBytes"`
	NotifyPercent           NilInt                                               `json:"notifyPercent"`
	UsersOnline             NilInt                                               `json:"usersOnline"`
	ViewPosition            int                                                  `json:"viewPosition"`
	CountryCode             string                                               `json:"countryCode"`
	ConsumptionMultiplier   float64                                              `json:"consumptionMultiplier"`
	CpuCount                NilInt                                               `json:"cpuCount"`
	CpuModel                NilString                                            `json:"cpuModel"`
	TotalRam                NilString                                            `json:"totalRam"`
	CreatedAt               time.Time                                            `json:"createdAt"`
	UpdatedAt               time.Time                                            `json:"updatedAt"`
	ExcludedInbounds        []DisableNodeResponseDtoResponseExcludedInboundsItem `json:"excludedInbounds"`
}

// GetUUID returns the value of UUID.
func (s *DisableNodeResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *DisableNodeResponseDtoResponse) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *DisableNodeResponseDtoResponse) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *DisableNodeResponseDtoResponse) GetPort() NilInt {
	return s.Port
}

// GetIsConnected returns the value of IsConnected.
func (s *DisableNodeResponseDtoResponse) GetIsConnected() bool {
	return s.IsConnected
}

// GetIsDisabled returns the value of IsDisabled.
func (s *DisableNodeResponseDtoResponse) GetIsDisabled() bool {
	return s.IsDisabled
}

// GetIsConnecting returns the value of IsConnecting.
func (s *DisableNodeResponseDtoResponse) GetIsConnecting() bool {
	return s.IsConnecting
}

// GetIsNodeOnline returns the value of IsNodeOnline.
func (s *DisableNodeResponseDtoResponse) GetIsNodeOnline() bool {
	return s.IsNodeOnline
}

// GetIsXrayRunning returns the value of IsXrayRunning.
func (s *DisableNodeResponseDtoResponse) GetIsXrayRunning() bool {
	return s.IsXrayRunning
}

// GetLastStatusChange returns the value of LastStatusChange.
func (s *DisableNodeResponseDtoResponse) GetLastStatusChange() NilDateTime {
	return s.LastStatusChange
}

// GetLastStatusMessage returns the value of LastStatusMessage.
func (s *DisableNodeResponseDtoResponse) GetLastStatusMessage() NilString {
	return s.LastStatusMessage
}

// GetXrayVersion returns the value of XrayVersion.
func (s *DisableNodeResponseDtoResponse) GetXrayVersion() NilString {
	return s.XrayVersion
}

// GetXrayUptime returns the value of XrayUptime.
func (s *DisableNodeResponseDtoResponse) GetXrayUptime() string {
	return s.XrayUptime
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *DisableNodeResponseDtoResponse) GetIsTrafficTrackingActive() bool {
	return s.IsTrafficTrackingActive
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *DisableNodeResponseDtoResponse) GetTrafficResetDay() NilInt {
	return s.TrafficResetDay
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *DisableNodeResponseDtoResponse) GetTrafficLimitBytes() NilFloat64 {
	return s.TrafficLimitBytes
}

// GetTrafficUsedBytes returns the value of TrafficUsedBytes.
func (s *DisableNodeResponseDtoResponse) GetTrafficUsedBytes() NilFloat64 {
	return s.TrafficUsedBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *DisableNodeResponseDtoResponse) GetNotifyPercent() NilInt {
	return s.NotifyPercent
}

// GetUsersOnline returns the value of UsersOnline.
func (s *DisableNodeResponseDtoResponse) GetUsersOnline() NilInt {
	return s.UsersOnline
}

// GetViewPosition returns the value of ViewPosition.
func (s *DisableNodeResponseDtoResponse) GetViewPosition() int {
	return s.ViewPosition
}

// GetCountryCode returns the value of CountryCode.
func (s *DisableNodeResponseDtoResponse) GetCountryCode() string {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *DisableNodeResponseDtoResponse) GetConsumptionMultiplier() float64 {
	return s.ConsumptionMultiplier
}

// GetCpuCount returns the value of CpuCount.
func (s *DisableNodeResponseDtoResponse) GetCpuCount() NilInt {
	return s.CpuCount
}

// GetCpuModel returns the value of CpuModel.
func (s *DisableNodeResponseDtoResponse) GetCpuModel() NilString {
	return s.CpuModel
}

// GetTotalRam returns the value of TotalRam.
func (s *DisableNodeResponseDtoResponse) GetTotalRam() NilString {
	return s.TotalRam
}

// GetCreatedAt returns the value of CreatedAt.
func (s *DisableNodeResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *DisableNodeResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetExcludedInbounds returns the value of ExcludedInbounds.
func (s *DisableNodeResponseDtoResponse) GetExcludedInbounds() []DisableNodeResponseDtoResponseExcludedInboundsItem {
	return s.ExcludedInbounds
}

// SetUUID sets the value of UUID.
func (s *DisableNodeResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *DisableNodeResponseDtoResponse) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *DisableNodeResponseDtoResponse) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *DisableNodeResponseDtoResponse) SetPort(val NilInt) {
	s.Port = val
}

// SetIsConnected sets the value of IsConnected.
func (s *DisableNodeResponseDtoResponse) SetIsConnected(val bool) {
	s.IsConnected = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *DisableNodeResponseDtoResponse) SetIsDisabled(val bool) {
	s.IsDisabled = val
}

// SetIsConnecting sets the value of IsConnecting.
func (s *DisableNodeResponseDtoResponse) SetIsConnecting(val bool) {
	s.IsConnecting = val
}

// SetIsNodeOnline sets the value of IsNodeOnline.
func (s *DisableNodeResponseDtoResponse) SetIsNodeOnline(val bool) {
	s.IsNodeOnline = val
}

// SetIsXrayRunning sets the value of IsXrayRunning.
func (s *DisableNodeResponseDtoResponse) SetIsXrayRunning(val bool) {
	s.IsXrayRunning = val
}

// SetLastStatusChange sets the value of LastStatusChange.
func (s *DisableNodeResponseDtoResponse) SetLastStatusChange(val NilDateTime) {
	s.LastStatusChange = val
}

// SetLastStatusMessage sets the value of LastStatusMessage.
func (s *DisableNodeResponseDtoResponse) SetLastStatusMessage(val NilString) {
	s.LastStatusMessage = val
}

// SetXrayVersion sets the value of XrayVersion.
func (s *DisableNodeResponseDtoResponse) SetXrayVersion(val NilString) {
	s.XrayVersion = val
}

// SetXrayUptime sets the value of XrayUptime.
func (s *DisableNodeResponseDtoResponse) SetXrayUptime(val string) {
	s.XrayUptime = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *DisableNodeResponseDtoResponse) SetIsTrafficTrackingActive(val bool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *DisableNodeResponseDtoResponse) SetTrafficResetDay(val NilInt) {
	s.TrafficResetDay = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *DisableNodeResponseDtoResponse) SetTrafficLimitBytes(val NilFloat64) {
	s.TrafficLimitBytes = val
}

// SetTrafficUsedBytes sets the value of TrafficUsedBytes.
func (s *DisableNodeResponseDtoResponse) SetTrafficUsedBytes(val NilFloat64) {
	s.TrafficUsedBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *DisableNodeResponseDtoResponse) SetNotifyPercent(val NilInt) {
	s.NotifyPercent = val
}

// SetUsersOnline sets the value of UsersOnline.
func (s *DisableNodeResponseDtoResponse) SetUsersOnline(val NilInt) {
	s.UsersOnline = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *DisableNodeResponseDtoResponse) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetCountryCode sets the value of CountryCode.
func (s *DisableNodeResponseDtoResponse) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *DisableNodeResponseDtoResponse) SetConsumptionMultiplier(val float64) {
	s.ConsumptionMultiplier = val
}

// SetCpuCount sets the value of CpuCount.
func (s *DisableNodeResponseDtoResponse) SetCpuCount(val NilInt) {
	s.CpuCount = val
}

// SetCpuModel sets the value of CpuModel.
func (s *DisableNodeResponseDtoResponse) SetCpuModel(val NilString) {
	s.CpuModel = val
}

// SetTotalRam sets the value of TotalRam.
func (s *DisableNodeResponseDtoResponse) SetTotalRam(val NilString) {
	s.TotalRam = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *DisableNodeResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *DisableNodeResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetExcludedInbounds sets the value of ExcludedInbounds.
func (s *DisableNodeResponseDtoResponse) SetExcludedInbounds(val []DisableNodeResponseDtoResponseExcludedInboundsItem) {
	s.ExcludedInbounds = val
}

type DisableNodeResponseDtoResponseExcludedInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *DisableNodeResponseDtoResponseExcludedInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *DisableNodeResponseDtoResponseExcludedInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *DisableNodeResponseDtoResponseExcludedInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *DisableNodeResponseDtoResponseExcludedInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *DisableNodeResponseDtoResponseExcludedInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *DisableNodeResponseDtoResponseExcludedInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *DisableNodeResponseDtoResponseExcludedInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *DisableNodeResponseDtoResponseExcludedInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *DisableNodeResponseDtoResponseExcludedInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *DisableNodeResponseDtoResponseExcludedInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// Ref: #/components/schemas/DisableUserResponseDto
type DisableUserResponseDto struct {
	Response DisableUserResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *DisableUserResponseDto) GetResponse() DisableUserResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *DisableUserResponseDto) SetResponse(val DisableUserResponseDtoResponse) {
	s.Response = val
}

func (*DisableUserResponseDto) usersControllerDisableUserRes() {}

type DisableUserResponseDtoResponse struct {
	UUID                     uuid.UUID                               `json:"uuid"`
	SubscriptionUuid         uuid.UUID                               `json:"subscriptionUuid"`
	ShortUuid                string                                  `json:"shortUuid"`
	Username                 string                                  `json:"username"`
	Status                   OptDisableUserResponseDtoResponseStatus `json:"status"`
	UsedTrafficBytes         float64                                 `json:"usedTrafficBytes"`
	LifetimeUsedTrafficBytes float64                                 `json:"lifetimeUsedTrafficBytes"`
	TrafficLimitBytes        OptInt                                  `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy OptDisableUserResponseDtoResponseTrafficLimitStrategy  `json:"trafficLimitStrategy"`
	SubLastUserAgent     NilString                                              `json:"subLastUserAgent"`
	SubLastOpenedAt      NilDateTime                                            `json:"subLastOpenedAt"`
	ExpireAt             time.Time                                              `json:"expireAt"`
	OnlineAt             NilDateTime                                            `json:"onlineAt"`
	SubRevokedAt         NilDateTime                                            `json:"subRevokedAt"`
	LastTrafficResetAt   NilDateTime                                            `json:"lastTrafficResetAt"`
	TrojanPassword       string                                                 `json:"trojanPassword"`
	VlessUuid            uuid.UUID                                              `json:"vlessUuid"`
	SsPassword           string                                                 `json:"ssPassword"`
	Description          NilString                                              `json:"description"`
	Tag                  NilString                                              `json:"tag"`
	TelegramId           NilInt                                                 `json:"telegramId"`
	Email                NilString                                              `json:"email"`
	HwidDeviceLimit      NilInt                                                 `json:"hwidDeviceLimit"`
	CreatedAt            time.Time                                              `json:"createdAt"`
	UpdatedAt            time.Time                                              `json:"updatedAt"`
	ActiveUserInbounds   []DisableUserResponseDtoResponseActiveUserInboundsItem `json:"activeUserInbounds"`
	SubscriptionUrl      string                                                 `json:"subscriptionUrl"`
	LastConnectedNode    NilDisableUserResponseDtoResponseLastConnectedNode     `json:"lastConnectedNode"`
	Happ                 DisableUserResponseDtoResponseHapp                     `json:"happ"`
}

// GetUUID returns the value of UUID.
func (s *DisableUserResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetSubscriptionUuid returns the value of SubscriptionUuid.
func (s *DisableUserResponseDtoResponse) GetSubscriptionUuid() uuid.UUID {
	return s.SubscriptionUuid
}

// GetShortUuid returns the value of ShortUuid.
func (s *DisableUserResponseDtoResponse) GetShortUuid() string {
	return s.ShortUuid
}

// GetUsername returns the value of Username.
func (s *DisableUserResponseDtoResponse) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *DisableUserResponseDtoResponse) GetStatus() OptDisableUserResponseDtoResponseStatus {
	return s.Status
}

// GetUsedTrafficBytes returns the value of UsedTrafficBytes.
func (s *DisableUserResponseDtoResponse) GetUsedTrafficBytes() float64 {
	return s.UsedTrafficBytes
}

// GetLifetimeUsedTrafficBytes returns the value of LifetimeUsedTrafficBytes.
func (s *DisableUserResponseDtoResponse) GetLifetimeUsedTrafficBytes() float64 {
	return s.LifetimeUsedTrafficBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *DisableUserResponseDtoResponse) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *DisableUserResponseDtoResponse) GetTrafficLimitStrategy() OptDisableUserResponseDtoResponseTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetSubLastUserAgent returns the value of SubLastUserAgent.
func (s *DisableUserResponseDtoResponse) GetSubLastUserAgent() NilString {
	return s.SubLastUserAgent
}

// GetSubLastOpenedAt returns the value of SubLastOpenedAt.
func (s *DisableUserResponseDtoResponse) GetSubLastOpenedAt() NilDateTime {
	return s.SubLastOpenedAt
}

// GetExpireAt returns the value of ExpireAt.
func (s *DisableUserResponseDtoResponse) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetOnlineAt returns the value of OnlineAt.
func (s *DisableUserResponseDtoResponse) GetOnlineAt() NilDateTime {
	return s.OnlineAt
}

// GetSubRevokedAt returns the value of SubRevokedAt.
func (s *DisableUserResponseDtoResponse) GetSubRevokedAt() NilDateTime {
	return s.SubRevokedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *DisableUserResponseDtoResponse) GetLastTrafficResetAt() NilDateTime {
	return s.LastTrafficResetAt
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *DisableUserResponseDtoResponse) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *DisableUserResponseDtoResponse) GetVlessUuid() uuid.UUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *DisableUserResponseDtoResponse) GetSsPassword() string {
	return s.SsPassword
}

// GetDescription returns the value of Description.
func (s *DisableUserResponseDtoResponse) GetDescription() NilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *DisableUserResponseDtoResponse) GetTag() NilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *DisableUserResponseDtoResponse) GetTelegramId() NilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *DisableUserResponseDtoResponse) GetEmail() NilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *DisableUserResponseDtoResponse) GetHwidDeviceLimit() NilInt {
	return s.HwidDeviceLimit
}

// GetCreatedAt returns the value of CreatedAt.
func (s *DisableUserResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *DisableUserResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetActiveUserInbounds returns the value of ActiveUserInbounds.
func (s *DisableUserResponseDtoResponse) GetActiveUserInbounds() []DisableUserResponseDtoResponseActiveUserInboundsItem {
	return s.ActiveUserInbounds
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *DisableUserResponseDtoResponse) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetLastConnectedNode returns the value of LastConnectedNode.
func (s *DisableUserResponseDtoResponse) GetLastConnectedNode() NilDisableUserResponseDtoResponseLastConnectedNode {
	return s.LastConnectedNode
}

// GetHapp returns the value of Happ.
func (s *DisableUserResponseDtoResponse) GetHapp() DisableUserResponseDtoResponseHapp {
	return s.Happ
}

// SetUUID sets the value of UUID.
func (s *DisableUserResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetSubscriptionUuid sets the value of SubscriptionUuid.
func (s *DisableUserResponseDtoResponse) SetSubscriptionUuid(val uuid.UUID) {
	s.SubscriptionUuid = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *DisableUserResponseDtoResponse) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetUsername sets the value of Username.
func (s *DisableUserResponseDtoResponse) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *DisableUserResponseDtoResponse) SetStatus(val OptDisableUserResponseDtoResponseStatus) {
	s.Status = val
}

// SetUsedTrafficBytes sets the value of UsedTrafficBytes.
func (s *DisableUserResponseDtoResponse) SetUsedTrafficBytes(val float64) {
	s.UsedTrafficBytes = val
}

// SetLifetimeUsedTrafficBytes sets the value of LifetimeUsedTrafficBytes.
func (s *DisableUserResponseDtoResponse) SetLifetimeUsedTrafficBytes(val float64) {
	s.LifetimeUsedTrafficBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *DisableUserResponseDtoResponse) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *DisableUserResponseDtoResponse) SetTrafficLimitStrategy(val OptDisableUserResponseDtoResponseTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetSubLastUserAgent sets the value of SubLastUserAgent.
func (s *DisableUserResponseDtoResponse) SetSubLastUserAgent(val NilString) {
	s.SubLastUserAgent = val
}

// SetSubLastOpenedAt sets the value of SubLastOpenedAt.
func (s *DisableUserResponseDtoResponse) SetSubLastOpenedAt(val NilDateTime) {
	s.SubLastOpenedAt = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *DisableUserResponseDtoResponse) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetOnlineAt sets the value of OnlineAt.
func (s *DisableUserResponseDtoResponse) SetOnlineAt(val NilDateTime) {
	s.OnlineAt = val
}

// SetSubRevokedAt sets the value of SubRevokedAt.
func (s *DisableUserResponseDtoResponse) SetSubRevokedAt(val NilDateTime) {
	s.SubRevokedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *DisableUserResponseDtoResponse) SetLastTrafficResetAt(val NilDateTime) {
	s.LastTrafficResetAt = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *DisableUserResponseDtoResponse) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *DisableUserResponseDtoResponse) SetVlessUuid(val uuid.UUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *DisableUserResponseDtoResponse) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetDescription sets the value of Description.
func (s *DisableUserResponseDtoResponse) SetDescription(val NilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *DisableUserResponseDtoResponse) SetTag(val NilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *DisableUserResponseDtoResponse) SetTelegramId(val NilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *DisableUserResponseDtoResponse) SetEmail(val NilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *DisableUserResponseDtoResponse) SetHwidDeviceLimit(val NilInt) {
	s.HwidDeviceLimit = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *DisableUserResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *DisableUserResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetActiveUserInbounds sets the value of ActiveUserInbounds.
func (s *DisableUserResponseDtoResponse) SetActiveUserInbounds(val []DisableUserResponseDtoResponseActiveUserInboundsItem) {
	s.ActiveUserInbounds = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *DisableUserResponseDtoResponse) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetLastConnectedNode sets the value of LastConnectedNode.
func (s *DisableUserResponseDtoResponse) SetLastConnectedNode(val NilDisableUserResponseDtoResponseLastConnectedNode) {
	s.LastConnectedNode = val
}

// SetHapp sets the value of Happ.
func (s *DisableUserResponseDtoResponse) SetHapp(val DisableUserResponseDtoResponseHapp) {
	s.Happ = val
}

type DisableUserResponseDtoResponseActiveUserInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *DisableUserResponseDtoResponseActiveUserInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *DisableUserResponseDtoResponseActiveUserInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *DisableUserResponseDtoResponseActiveUserInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *DisableUserResponseDtoResponseActiveUserInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *DisableUserResponseDtoResponseActiveUserInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *DisableUserResponseDtoResponseActiveUserInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *DisableUserResponseDtoResponseActiveUserInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *DisableUserResponseDtoResponseActiveUserInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *DisableUserResponseDtoResponseActiveUserInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *DisableUserResponseDtoResponseActiveUserInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

type DisableUserResponseDtoResponseHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *DisableUserResponseDtoResponseHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *DisableUserResponseDtoResponseHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type DisableUserResponseDtoResponseLastConnectedNode struct {
	ConnectedAt time.Time `json:"connectedAt"`
	NodeName    string    `json:"nodeName"`
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *DisableUserResponseDtoResponseLastConnectedNode) GetConnectedAt() time.Time {
	return s.ConnectedAt
}

// GetNodeName returns the value of NodeName.
func (s *DisableUserResponseDtoResponseLastConnectedNode) GetNodeName() string {
	return s.NodeName
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *DisableUserResponseDtoResponseLastConnectedNode) SetConnectedAt(val time.Time) {
	s.ConnectedAt = val
}

// SetNodeName sets the value of NodeName.
func (s *DisableUserResponseDtoResponseLastConnectedNode) SetNodeName(val string) {
	s.NodeName = val
}

type DisableUserResponseDtoResponseStatus string

const (
	DisableUserResponseDtoResponseStatusACTIVE   DisableUserResponseDtoResponseStatus = "ACTIVE"
	DisableUserResponseDtoResponseStatusDISABLED DisableUserResponseDtoResponseStatus = "DISABLED"
	DisableUserResponseDtoResponseStatusLIMITED  DisableUserResponseDtoResponseStatus = "LIMITED"
	DisableUserResponseDtoResponseStatusEXPIRED  DisableUserResponseDtoResponseStatus = "EXPIRED"
)

// AllValues returns all DisableUserResponseDtoResponseStatus values.
func (DisableUserResponseDtoResponseStatus) AllValues() []DisableUserResponseDtoResponseStatus {
	return []DisableUserResponseDtoResponseStatus{
		DisableUserResponseDtoResponseStatusACTIVE,
		DisableUserResponseDtoResponseStatusDISABLED,
		DisableUserResponseDtoResponseStatusLIMITED,
		DisableUserResponseDtoResponseStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DisableUserResponseDtoResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case DisableUserResponseDtoResponseStatusACTIVE:
		return []byte(s), nil
	case DisableUserResponseDtoResponseStatusDISABLED:
		return []byte(s), nil
	case DisableUserResponseDtoResponseStatusLIMITED:
		return []byte(s), nil
	case DisableUserResponseDtoResponseStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DisableUserResponseDtoResponseStatus) UnmarshalText(data []byte) error {
	switch DisableUserResponseDtoResponseStatus(data) {
	case DisableUserResponseDtoResponseStatusACTIVE:
		*s = DisableUserResponseDtoResponseStatusACTIVE
		return nil
	case DisableUserResponseDtoResponseStatusDISABLED:
		*s = DisableUserResponseDtoResponseStatusDISABLED
		return nil
	case DisableUserResponseDtoResponseStatusLIMITED:
		*s = DisableUserResponseDtoResponseStatusLIMITED
		return nil
	case DisableUserResponseDtoResponseStatusEXPIRED:
		*s = DisableUserResponseDtoResponseStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type DisableUserResponseDtoResponseTrafficLimitStrategy string

const (
	DisableUserResponseDtoResponseTrafficLimitStrategyNORESET DisableUserResponseDtoResponseTrafficLimitStrategy = "NO_RESET"
	DisableUserResponseDtoResponseTrafficLimitStrategyDAY     DisableUserResponseDtoResponseTrafficLimitStrategy = "DAY"
	DisableUserResponseDtoResponseTrafficLimitStrategyWEEK    DisableUserResponseDtoResponseTrafficLimitStrategy = "WEEK"
	DisableUserResponseDtoResponseTrafficLimitStrategyMONTH   DisableUserResponseDtoResponseTrafficLimitStrategy = "MONTH"
)

// AllValues returns all DisableUserResponseDtoResponseTrafficLimitStrategy values.
func (DisableUserResponseDtoResponseTrafficLimitStrategy) AllValues() []DisableUserResponseDtoResponseTrafficLimitStrategy {
	return []DisableUserResponseDtoResponseTrafficLimitStrategy{
		DisableUserResponseDtoResponseTrafficLimitStrategyNORESET,
		DisableUserResponseDtoResponseTrafficLimitStrategyDAY,
		DisableUserResponseDtoResponseTrafficLimitStrategyWEEK,
		DisableUserResponseDtoResponseTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DisableUserResponseDtoResponseTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case DisableUserResponseDtoResponseTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case DisableUserResponseDtoResponseTrafficLimitStrategyDAY:
		return []byte(s), nil
	case DisableUserResponseDtoResponseTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case DisableUserResponseDtoResponseTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DisableUserResponseDtoResponseTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch DisableUserResponseDtoResponseTrafficLimitStrategy(data) {
	case DisableUserResponseDtoResponseTrafficLimitStrategyNORESET:
		*s = DisableUserResponseDtoResponseTrafficLimitStrategyNORESET
		return nil
	case DisableUserResponseDtoResponseTrafficLimitStrategyDAY:
		*s = DisableUserResponseDtoResponseTrafficLimitStrategyDAY
		return nil
	case DisableUserResponseDtoResponseTrafficLimitStrategyWEEK:
		*s = DisableUserResponseDtoResponseTrafficLimitStrategyWEEK
		return nil
	case DisableUserResponseDtoResponseTrafficLimitStrategyMONTH:
		*s = DisableUserResponseDtoResponseTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/EnableNodeResponseDto
type EnableNodeResponseDto struct {
	Response EnableNodeResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *EnableNodeResponseDto) GetResponse() EnableNodeResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *EnableNodeResponseDto) SetResponse(val EnableNodeResponseDtoResponse) {
	s.Response = val
}

type EnableNodeResponseDtoResponse struct {
	UUID                    uuid.UUID                                           `json:"uuid"`
	Name                    string                                              `json:"name"`
	Address                 string                                              `json:"address"`
	Port                    NilInt                                              `json:"port"`
	IsConnected             bool                                                `json:"isConnected"`
	IsDisabled              bool                                                `json:"isDisabled"`
	IsConnecting            bool                                                `json:"isConnecting"`
	IsNodeOnline            bool                                                `json:"isNodeOnline"`
	IsXrayRunning           bool                                                `json:"isXrayRunning"`
	LastStatusChange        NilDateTime                                         `json:"lastStatusChange"`
	LastStatusMessage       NilString                                           `json:"lastStatusMessage"`
	XrayVersion             NilString                                           `json:"xrayVersion"`
	XrayUptime              string                                              `json:"xrayUptime"`
	IsTrafficTrackingActive bool                                                `json:"isTrafficTrackingActive"`
	TrafficResetDay         NilInt                                              `json:"trafficResetDay"`
	TrafficLimitBytes       NilFloat64                                          `json:"trafficLimitBytes"`
	TrafficUsedBytes        NilFloat64                                          `json:"trafficUsedBytes"`
	NotifyPercent           NilInt                                              `json:"notifyPercent"`
	UsersOnline             NilInt                                              `json:"usersOnline"`
	ViewPosition            int                                                 `json:"viewPosition"`
	CountryCode             string                                              `json:"countryCode"`
	ConsumptionMultiplier   float64                                             `json:"consumptionMultiplier"`
	CpuCount                NilInt                                              `json:"cpuCount"`
	CpuModel                NilString                                           `json:"cpuModel"`
	TotalRam                NilString                                           `json:"totalRam"`
	CreatedAt               time.Time                                           `json:"createdAt"`
	UpdatedAt               time.Time                                           `json:"updatedAt"`
	ExcludedInbounds        []EnableNodeResponseDtoResponseExcludedInboundsItem `json:"excludedInbounds"`
}

// GetUUID returns the value of UUID.
func (s *EnableNodeResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *EnableNodeResponseDtoResponse) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *EnableNodeResponseDtoResponse) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *EnableNodeResponseDtoResponse) GetPort() NilInt {
	return s.Port
}

// GetIsConnected returns the value of IsConnected.
func (s *EnableNodeResponseDtoResponse) GetIsConnected() bool {
	return s.IsConnected
}

// GetIsDisabled returns the value of IsDisabled.
func (s *EnableNodeResponseDtoResponse) GetIsDisabled() bool {
	return s.IsDisabled
}

// GetIsConnecting returns the value of IsConnecting.
func (s *EnableNodeResponseDtoResponse) GetIsConnecting() bool {
	return s.IsConnecting
}

// GetIsNodeOnline returns the value of IsNodeOnline.
func (s *EnableNodeResponseDtoResponse) GetIsNodeOnline() bool {
	return s.IsNodeOnline
}

// GetIsXrayRunning returns the value of IsXrayRunning.
func (s *EnableNodeResponseDtoResponse) GetIsXrayRunning() bool {
	return s.IsXrayRunning
}

// GetLastStatusChange returns the value of LastStatusChange.
func (s *EnableNodeResponseDtoResponse) GetLastStatusChange() NilDateTime {
	return s.LastStatusChange
}

// GetLastStatusMessage returns the value of LastStatusMessage.
func (s *EnableNodeResponseDtoResponse) GetLastStatusMessage() NilString {
	return s.LastStatusMessage
}

// GetXrayVersion returns the value of XrayVersion.
func (s *EnableNodeResponseDtoResponse) GetXrayVersion() NilString {
	return s.XrayVersion
}

// GetXrayUptime returns the value of XrayUptime.
func (s *EnableNodeResponseDtoResponse) GetXrayUptime() string {
	return s.XrayUptime
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *EnableNodeResponseDtoResponse) GetIsTrafficTrackingActive() bool {
	return s.IsTrafficTrackingActive
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *EnableNodeResponseDtoResponse) GetTrafficResetDay() NilInt {
	return s.TrafficResetDay
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *EnableNodeResponseDtoResponse) GetTrafficLimitBytes() NilFloat64 {
	return s.TrafficLimitBytes
}

// GetTrafficUsedBytes returns the value of TrafficUsedBytes.
func (s *EnableNodeResponseDtoResponse) GetTrafficUsedBytes() NilFloat64 {
	return s.TrafficUsedBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *EnableNodeResponseDtoResponse) GetNotifyPercent() NilInt {
	return s.NotifyPercent
}

// GetUsersOnline returns the value of UsersOnline.
func (s *EnableNodeResponseDtoResponse) GetUsersOnline() NilInt {
	return s.UsersOnline
}

// GetViewPosition returns the value of ViewPosition.
func (s *EnableNodeResponseDtoResponse) GetViewPosition() int {
	return s.ViewPosition
}

// GetCountryCode returns the value of CountryCode.
func (s *EnableNodeResponseDtoResponse) GetCountryCode() string {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *EnableNodeResponseDtoResponse) GetConsumptionMultiplier() float64 {
	return s.ConsumptionMultiplier
}

// GetCpuCount returns the value of CpuCount.
func (s *EnableNodeResponseDtoResponse) GetCpuCount() NilInt {
	return s.CpuCount
}

// GetCpuModel returns the value of CpuModel.
func (s *EnableNodeResponseDtoResponse) GetCpuModel() NilString {
	return s.CpuModel
}

// GetTotalRam returns the value of TotalRam.
func (s *EnableNodeResponseDtoResponse) GetTotalRam() NilString {
	return s.TotalRam
}

// GetCreatedAt returns the value of CreatedAt.
func (s *EnableNodeResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *EnableNodeResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetExcludedInbounds returns the value of ExcludedInbounds.
func (s *EnableNodeResponseDtoResponse) GetExcludedInbounds() []EnableNodeResponseDtoResponseExcludedInboundsItem {
	return s.ExcludedInbounds
}

// SetUUID sets the value of UUID.
func (s *EnableNodeResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *EnableNodeResponseDtoResponse) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *EnableNodeResponseDtoResponse) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *EnableNodeResponseDtoResponse) SetPort(val NilInt) {
	s.Port = val
}

// SetIsConnected sets the value of IsConnected.
func (s *EnableNodeResponseDtoResponse) SetIsConnected(val bool) {
	s.IsConnected = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *EnableNodeResponseDtoResponse) SetIsDisabled(val bool) {
	s.IsDisabled = val
}

// SetIsConnecting sets the value of IsConnecting.
func (s *EnableNodeResponseDtoResponse) SetIsConnecting(val bool) {
	s.IsConnecting = val
}

// SetIsNodeOnline sets the value of IsNodeOnline.
func (s *EnableNodeResponseDtoResponse) SetIsNodeOnline(val bool) {
	s.IsNodeOnline = val
}

// SetIsXrayRunning sets the value of IsXrayRunning.
func (s *EnableNodeResponseDtoResponse) SetIsXrayRunning(val bool) {
	s.IsXrayRunning = val
}

// SetLastStatusChange sets the value of LastStatusChange.
func (s *EnableNodeResponseDtoResponse) SetLastStatusChange(val NilDateTime) {
	s.LastStatusChange = val
}

// SetLastStatusMessage sets the value of LastStatusMessage.
func (s *EnableNodeResponseDtoResponse) SetLastStatusMessage(val NilString) {
	s.LastStatusMessage = val
}

// SetXrayVersion sets the value of XrayVersion.
func (s *EnableNodeResponseDtoResponse) SetXrayVersion(val NilString) {
	s.XrayVersion = val
}

// SetXrayUptime sets the value of XrayUptime.
func (s *EnableNodeResponseDtoResponse) SetXrayUptime(val string) {
	s.XrayUptime = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *EnableNodeResponseDtoResponse) SetIsTrafficTrackingActive(val bool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *EnableNodeResponseDtoResponse) SetTrafficResetDay(val NilInt) {
	s.TrafficResetDay = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *EnableNodeResponseDtoResponse) SetTrafficLimitBytes(val NilFloat64) {
	s.TrafficLimitBytes = val
}

// SetTrafficUsedBytes sets the value of TrafficUsedBytes.
func (s *EnableNodeResponseDtoResponse) SetTrafficUsedBytes(val NilFloat64) {
	s.TrafficUsedBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *EnableNodeResponseDtoResponse) SetNotifyPercent(val NilInt) {
	s.NotifyPercent = val
}

// SetUsersOnline sets the value of UsersOnline.
func (s *EnableNodeResponseDtoResponse) SetUsersOnline(val NilInt) {
	s.UsersOnline = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *EnableNodeResponseDtoResponse) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetCountryCode sets the value of CountryCode.
func (s *EnableNodeResponseDtoResponse) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *EnableNodeResponseDtoResponse) SetConsumptionMultiplier(val float64) {
	s.ConsumptionMultiplier = val
}

// SetCpuCount sets the value of CpuCount.
func (s *EnableNodeResponseDtoResponse) SetCpuCount(val NilInt) {
	s.CpuCount = val
}

// SetCpuModel sets the value of CpuModel.
func (s *EnableNodeResponseDtoResponse) SetCpuModel(val NilString) {
	s.CpuModel = val
}

// SetTotalRam sets the value of TotalRam.
func (s *EnableNodeResponseDtoResponse) SetTotalRam(val NilString) {
	s.TotalRam = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *EnableNodeResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *EnableNodeResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetExcludedInbounds sets the value of ExcludedInbounds.
func (s *EnableNodeResponseDtoResponse) SetExcludedInbounds(val []EnableNodeResponseDtoResponseExcludedInboundsItem) {
	s.ExcludedInbounds = val
}

type EnableNodeResponseDtoResponseExcludedInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *EnableNodeResponseDtoResponseExcludedInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *EnableNodeResponseDtoResponseExcludedInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *EnableNodeResponseDtoResponseExcludedInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *EnableNodeResponseDtoResponseExcludedInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *EnableNodeResponseDtoResponseExcludedInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *EnableNodeResponseDtoResponseExcludedInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *EnableNodeResponseDtoResponseExcludedInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *EnableNodeResponseDtoResponseExcludedInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *EnableNodeResponseDtoResponseExcludedInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *EnableNodeResponseDtoResponseExcludedInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// Ref: #/components/schemas/EnableUserResponseDto
type EnableUserResponseDto struct {
	Response EnableUserResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *EnableUserResponseDto) GetResponse() EnableUserResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *EnableUserResponseDto) SetResponse(val EnableUserResponseDtoResponse) {
	s.Response = val
}

func (*EnableUserResponseDto) usersControllerEnableUserRes() {}

type EnableUserResponseDtoResponse struct {
	UUID                     uuid.UUID                              `json:"uuid"`
	SubscriptionUuid         uuid.UUID                              `json:"subscriptionUuid"`
	ShortUuid                string                                 `json:"shortUuid"`
	Username                 string                                 `json:"username"`
	Status                   OptEnableUserResponseDtoResponseStatus `json:"status"`
	UsedTrafficBytes         float64                                `json:"usedTrafficBytes"`
	LifetimeUsedTrafficBytes float64                                `json:"lifetimeUsedTrafficBytes"`
	TrafficLimitBytes        OptInt                                 `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy OptEnableUserResponseDtoResponseTrafficLimitStrategy  `json:"trafficLimitStrategy"`
	SubLastUserAgent     NilString                                             `json:"subLastUserAgent"`
	SubLastOpenedAt      NilDateTime                                           `json:"subLastOpenedAt"`
	ExpireAt             time.Time                                             `json:"expireAt"`
	OnlineAt             NilDateTime                                           `json:"onlineAt"`
	SubRevokedAt         NilDateTime                                           `json:"subRevokedAt"`
	LastTrafficResetAt   NilDateTime                                           `json:"lastTrafficResetAt"`
	TrojanPassword       string                                                `json:"trojanPassword"`
	VlessUuid            uuid.UUID                                             `json:"vlessUuid"`
	SsPassword           string                                                `json:"ssPassword"`
	Description          NilString                                             `json:"description"`
	Tag                  NilString                                             `json:"tag"`
	TelegramId           NilInt                                                `json:"telegramId"`
	Email                NilString                                             `json:"email"`
	HwidDeviceLimit      NilInt                                                `json:"hwidDeviceLimit"`
	CreatedAt            time.Time                                             `json:"createdAt"`
	UpdatedAt            time.Time                                             `json:"updatedAt"`
	ActiveUserInbounds   []EnableUserResponseDtoResponseActiveUserInboundsItem `json:"activeUserInbounds"`
	SubscriptionUrl      string                                                `json:"subscriptionUrl"`
	LastConnectedNode    NilEnableUserResponseDtoResponseLastConnectedNode     `json:"lastConnectedNode"`
	Happ                 EnableUserResponseDtoResponseHapp                     `json:"happ"`
}

// GetUUID returns the value of UUID.
func (s *EnableUserResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetSubscriptionUuid returns the value of SubscriptionUuid.
func (s *EnableUserResponseDtoResponse) GetSubscriptionUuid() uuid.UUID {
	return s.SubscriptionUuid
}

// GetShortUuid returns the value of ShortUuid.
func (s *EnableUserResponseDtoResponse) GetShortUuid() string {
	return s.ShortUuid
}

// GetUsername returns the value of Username.
func (s *EnableUserResponseDtoResponse) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *EnableUserResponseDtoResponse) GetStatus() OptEnableUserResponseDtoResponseStatus {
	return s.Status
}

// GetUsedTrafficBytes returns the value of UsedTrafficBytes.
func (s *EnableUserResponseDtoResponse) GetUsedTrafficBytes() float64 {
	return s.UsedTrafficBytes
}

// GetLifetimeUsedTrafficBytes returns the value of LifetimeUsedTrafficBytes.
func (s *EnableUserResponseDtoResponse) GetLifetimeUsedTrafficBytes() float64 {
	return s.LifetimeUsedTrafficBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *EnableUserResponseDtoResponse) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *EnableUserResponseDtoResponse) GetTrafficLimitStrategy() OptEnableUserResponseDtoResponseTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetSubLastUserAgent returns the value of SubLastUserAgent.
func (s *EnableUserResponseDtoResponse) GetSubLastUserAgent() NilString {
	return s.SubLastUserAgent
}

// GetSubLastOpenedAt returns the value of SubLastOpenedAt.
func (s *EnableUserResponseDtoResponse) GetSubLastOpenedAt() NilDateTime {
	return s.SubLastOpenedAt
}

// GetExpireAt returns the value of ExpireAt.
func (s *EnableUserResponseDtoResponse) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetOnlineAt returns the value of OnlineAt.
func (s *EnableUserResponseDtoResponse) GetOnlineAt() NilDateTime {
	return s.OnlineAt
}

// GetSubRevokedAt returns the value of SubRevokedAt.
func (s *EnableUserResponseDtoResponse) GetSubRevokedAt() NilDateTime {
	return s.SubRevokedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *EnableUserResponseDtoResponse) GetLastTrafficResetAt() NilDateTime {
	return s.LastTrafficResetAt
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *EnableUserResponseDtoResponse) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *EnableUserResponseDtoResponse) GetVlessUuid() uuid.UUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *EnableUserResponseDtoResponse) GetSsPassword() string {
	return s.SsPassword
}

// GetDescription returns the value of Description.
func (s *EnableUserResponseDtoResponse) GetDescription() NilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *EnableUserResponseDtoResponse) GetTag() NilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *EnableUserResponseDtoResponse) GetTelegramId() NilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *EnableUserResponseDtoResponse) GetEmail() NilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *EnableUserResponseDtoResponse) GetHwidDeviceLimit() NilInt {
	return s.HwidDeviceLimit
}

// GetCreatedAt returns the value of CreatedAt.
func (s *EnableUserResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *EnableUserResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetActiveUserInbounds returns the value of ActiveUserInbounds.
func (s *EnableUserResponseDtoResponse) GetActiveUserInbounds() []EnableUserResponseDtoResponseActiveUserInboundsItem {
	return s.ActiveUserInbounds
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *EnableUserResponseDtoResponse) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetLastConnectedNode returns the value of LastConnectedNode.
func (s *EnableUserResponseDtoResponse) GetLastConnectedNode() NilEnableUserResponseDtoResponseLastConnectedNode {
	return s.LastConnectedNode
}

// GetHapp returns the value of Happ.
func (s *EnableUserResponseDtoResponse) GetHapp() EnableUserResponseDtoResponseHapp {
	return s.Happ
}

// SetUUID sets the value of UUID.
func (s *EnableUserResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetSubscriptionUuid sets the value of SubscriptionUuid.
func (s *EnableUserResponseDtoResponse) SetSubscriptionUuid(val uuid.UUID) {
	s.SubscriptionUuid = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *EnableUserResponseDtoResponse) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetUsername sets the value of Username.
func (s *EnableUserResponseDtoResponse) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *EnableUserResponseDtoResponse) SetStatus(val OptEnableUserResponseDtoResponseStatus) {
	s.Status = val
}

// SetUsedTrafficBytes sets the value of UsedTrafficBytes.
func (s *EnableUserResponseDtoResponse) SetUsedTrafficBytes(val float64) {
	s.UsedTrafficBytes = val
}

// SetLifetimeUsedTrafficBytes sets the value of LifetimeUsedTrafficBytes.
func (s *EnableUserResponseDtoResponse) SetLifetimeUsedTrafficBytes(val float64) {
	s.LifetimeUsedTrafficBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *EnableUserResponseDtoResponse) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *EnableUserResponseDtoResponse) SetTrafficLimitStrategy(val OptEnableUserResponseDtoResponseTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetSubLastUserAgent sets the value of SubLastUserAgent.
func (s *EnableUserResponseDtoResponse) SetSubLastUserAgent(val NilString) {
	s.SubLastUserAgent = val
}

// SetSubLastOpenedAt sets the value of SubLastOpenedAt.
func (s *EnableUserResponseDtoResponse) SetSubLastOpenedAt(val NilDateTime) {
	s.SubLastOpenedAt = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *EnableUserResponseDtoResponse) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetOnlineAt sets the value of OnlineAt.
func (s *EnableUserResponseDtoResponse) SetOnlineAt(val NilDateTime) {
	s.OnlineAt = val
}

// SetSubRevokedAt sets the value of SubRevokedAt.
func (s *EnableUserResponseDtoResponse) SetSubRevokedAt(val NilDateTime) {
	s.SubRevokedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *EnableUserResponseDtoResponse) SetLastTrafficResetAt(val NilDateTime) {
	s.LastTrafficResetAt = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *EnableUserResponseDtoResponse) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *EnableUserResponseDtoResponse) SetVlessUuid(val uuid.UUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *EnableUserResponseDtoResponse) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetDescription sets the value of Description.
func (s *EnableUserResponseDtoResponse) SetDescription(val NilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *EnableUserResponseDtoResponse) SetTag(val NilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *EnableUserResponseDtoResponse) SetTelegramId(val NilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *EnableUserResponseDtoResponse) SetEmail(val NilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *EnableUserResponseDtoResponse) SetHwidDeviceLimit(val NilInt) {
	s.HwidDeviceLimit = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *EnableUserResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *EnableUserResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetActiveUserInbounds sets the value of ActiveUserInbounds.
func (s *EnableUserResponseDtoResponse) SetActiveUserInbounds(val []EnableUserResponseDtoResponseActiveUserInboundsItem) {
	s.ActiveUserInbounds = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *EnableUserResponseDtoResponse) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetLastConnectedNode sets the value of LastConnectedNode.
func (s *EnableUserResponseDtoResponse) SetLastConnectedNode(val NilEnableUserResponseDtoResponseLastConnectedNode) {
	s.LastConnectedNode = val
}

// SetHapp sets the value of Happ.
func (s *EnableUserResponseDtoResponse) SetHapp(val EnableUserResponseDtoResponseHapp) {
	s.Happ = val
}

type EnableUserResponseDtoResponseActiveUserInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *EnableUserResponseDtoResponseActiveUserInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *EnableUserResponseDtoResponseActiveUserInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *EnableUserResponseDtoResponseActiveUserInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *EnableUserResponseDtoResponseActiveUserInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *EnableUserResponseDtoResponseActiveUserInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *EnableUserResponseDtoResponseActiveUserInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *EnableUserResponseDtoResponseActiveUserInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *EnableUserResponseDtoResponseActiveUserInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *EnableUserResponseDtoResponseActiveUserInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *EnableUserResponseDtoResponseActiveUserInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

type EnableUserResponseDtoResponseHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *EnableUserResponseDtoResponseHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *EnableUserResponseDtoResponseHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type EnableUserResponseDtoResponseLastConnectedNode struct {
	ConnectedAt time.Time `json:"connectedAt"`
	NodeName    string    `json:"nodeName"`
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *EnableUserResponseDtoResponseLastConnectedNode) GetConnectedAt() time.Time {
	return s.ConnectedAt
}

// GetNodeName returns the value of NodeName.
func (s *EnableUserResponseDtoResponseLastConnectedNode) GetNodeName() string {
	return s.NodeName
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *EnableUserResponseDtoResponseLastConnectedNode) SetConnectedAt(val time.Time) {
	s.ConnectedAt = val
}

// SetNodeName sets the value of NodeName.
func (s *EnableUserResponseDtoResponseLastConnectedNode) SetNodeName(val string) {
	s.NodeName = val
}

type EnableUserResponseDtoResponseStatus string

const (
	EnableUserResponseDtoResponseStatusACTIVE   EnableUserResponseDtoResponseStatus = "ACTIVE"
	EnableUserResponseDtoResponseStatusDISABLED EnableUserResponseDtoResponseStatus = "DISABLED"
	EnableUserResponseDtoResponseStatusLIMITED  EnableUserResponseDtoResponseStatus = "LIMITED"
	EnableUserResponseDtoResponseStatusEXPIRED  EnableUserResponseDtoResponseStatus = "EXPIRED"
)

// AllValues returns all EnableUserResponseDtoResponseStatus values.
func (EnableUserResponseDtoResponseStatus) AllValues() []EnableUserResponseDtoResponseStatus {
	return []EnableUserResponseDtoResponseStatus{
		EnableUserResponseDtoResponseStatusACTIVE,
		EnableUserResponseDtoResponseStatusDISABLED,
		EnableUserResponseDtoResponseStatusLIMITED,
		EnableUserResponseDtoResponseStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EnableUserResponseDtoResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case EnableUserResponseDtoResponseStatusACTIVE:
		return []byte(s), nil
	case EnableUserResponseDtoResponseStatusDISABLED:
		return []byte(s), nil
	case EnableUserResponseDtoResponseStatusLIMITED:
		return []byte(s), nil
	case EnableUserResponseDtoResponseStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnableUserResponseDtoResponseStatus) UnmarshalText(data []byte) error {
	switch EnableUserResponseDtoResponseStatus(data) {
	case EnableUserResponseDtoResponseStatusACTIVE:
		*s = EnableUserResponseDtoResponseStatusACTIVE
		return nil
	case EnableUserResponseDtoResponseStatusDISABLED:
		*s = EnableUserResponseDtoResponseStatusDISABLED
		return nil
	case EnableUserResponseDtoResponseStatusLIMITED:
		*s = EnableUserResponseDtoResponseStatusLIMITED
		return nil
	case EnableUserResponseDtoResponseStatusEXPIRED:
		*s = EnableUserResponseDtoResponseStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type EnableUserResponseDtoResponseTrafficLimitStrategy string

const (
	EnableUserResponseDtoResponseTrafficLimitStrategyNORESET EnableUserResponseDtoResponseTrafficLimitStrategy = "NO_RESET"
	EnableUserResponseDtoResponseTrafficLimitStrategyDAY     EnableUserResponseDtoResponseTrafficLimitStrategy = "DAY"
	EnableUserResponseDtoResponseTrafficLimitStrategyWEEK    EnableUserResponseDtoResponseTrafficLimitStrategy = "WEEK"
	EnableUserResponseDtoResponseTrafficLimitStrategyMONTH   EnableUserResponseDtoResponseTrafficLimitStrategy = "MONTH"
)

// AllValues returns all EnableUserResponseDtoResponseTrafficLimitStrategy values.
func (EnableUserResponseDtoResponseTrafficLimitStrategy) AllValues() []EnableUserResponseDtoResponseTrafficLimitStrategy {
	return []EnableUserResponseDtoResponseTrafficLimitStrategy{
		EnableUserResponseDtoResponseTrafficLimitStrategyNORESET,
		EnableUserResponseDtoResponseTrafficLimitStrategyDAY,
		EnableUserResponseDtoResponseTrafficLimitStrategyWEEK,
		EnableUserResponseDtoResponseTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EnableUserResponseDtoResponseTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case EnableUserResponseDtoResponseTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case EnableUserResponseDtoResponseTrafficLimitStrategyDAY:
		return []byte(s), nil
	case EnableUserResponseDtoResponseTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case EnableUserResponseDtoResponseTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EnableUserResponseDtoResponseTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch EnableUserResponseDtoResponseTrafficLimitStrategy(data) {
	case EnableUserResponseDtoResponseTrafficLimitStrategyNORESET:
		*s = EnableUserResponseDtoResponseTrafficLimitStrategyNORESET
		return nil
	case EnableUserResponseDtoResponseTrafficLimitStrategyDAY:
		*s = EnableUserResponseDtoResponseTrafficLimitStrategyDAY
		return nil
	case EnableUserResponseDtoResponseTrafficLimitStrategyWEEK:
		*s = EnableUserResponseDtoResponseTrafficLimitStrategyWEEK
		return nil
	case EnableUserResponseDtoResponseTrafficLimitStrategyMONTH:
		*s = EnableUserResponseDtoResponseTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/FindAllApiTokensResponseDto
type FindAllApiTokensResponseDto struct {
	Response FindAllApiTokensResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *FindAllApiTokensResponseDto) GetResponse() FindAllApiTokensResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *FindAllApiTokensResponseDto) SetResponse(val FindAllApiTokensResponseDtoResponse) {
	s.Response = val
}

type FindAllApiTokensResponseDtoResponse struct {
	ApiKeys []FindAllApiTokensResponseDtoResponseApiKeysItem `json:"apiKeys"`
	Docs    FindAllApiTokensResponseDtoResponseDocs          `json:"docs"`
}

// GetApiKeys returns the value of ApiKeys.
func (s *FindAllApiTokensResponseDtoResponse) GetApiKeys() []FindAllApiTokensResponseDtoResponseApiKeysItem {
	return s.ApiKeys
}

// GetDocs returns the value of Docs.
func (s *FindAllApiTokensResponseDtoResponse) GetDocs() FindAllApiTokensResponseDtoResponseDocs {
	return s.Docs
}

// SetApiKeys sets the value of ApiKeys.
func (s *FindAllApiTokensResponseDtoResponse) SetApiKeys(val []FindAllApiTokensResponseDtoResponseApiKeysItem) {
	s.ApiKeys = val
}

// SetDocs sets the value of Docs.
func (s *FindAllApiTokensResponseDtoResponse) SetDocs(val FindAllApiTokensResponseDtoResponseDocs) {
	s.Docs = val
}

type FindAllApiTokensResponseDtoResponseApiKeysItem struct {
	UUID             uuid.UUID `json:"uuid"`
	Token            string    `json:"token"`
	TokenName        string    `json:"tokenName"`
	TokenDescription NilString `json:"tokenDescription"`
	CreatedAt        time.Time `json:"createdAt"`
	UpdatedAt        time.Time `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetToken returns the value of Token.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) GetToken() string {
	return s.Token
}

// GetTokenName returns the value of TokenName.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) GetTokenName() string {
	return s.TokenName
}

// GetTokenDescription returns the value of TokenDescription.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) GetTokenDescription() NilString {
	return s.TokenDescription
}

// GetCreatedAt returns the value of CreatedAt.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetToken sets the value of Token.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetToken(val string) {
	s.Token = val
}

// SetTokenName sets the value of TokenName.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetTokenName(val string) {
	s.TokenName = val
}

// SetTokenDescription sets the value of TokenDescription.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetTokenDescription(val NilString) {
	s.TokenDescription = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *FindAllApiTokensResponseDtoResponseApiKeysItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type FindAllApiTokensResponseDtoResponseDocs struct {
	IsDocsEnabled bool      `json:"isDocsEnabled"`
	ScalarPath    NilString `json:"scalarPath"`
	SwaggerPath   NilString `json:"swaggerPath"`
}

// GetIsDocsEnabled returns the value of IsDocsEnabled.
func (s *FindAllApiTokensResponseDtoResponseDocs) GetIsDocsEnabled() bool {
	return s.IsDocsEnabled
}

// GetScalarPath returns the value of ScalarPath.
func (s *FindAllApiTokensResponseDtoResponseDocs) GetScalarPath() NilString {
	return s.ScalarPath
}

// GetSwaggerPath returns the value of SwaggerPath.
func (s *FindAllApiTokensResponseDtoResponseDocs) GetSwaggerPath() NilString {
	return s.SwaggerPath
}

// SetIsDocsEnabled sets the value of IsDocsEnabled.
func (s *FindAllApiTokensResponseDtoResponseDocs) SetIsDocsEnabled(val bool) {
	s.IsDocsEnabled = val
}

// SetScalarPath sets the value of ScalarPath.
func (s *FindAllApiTokensResponseDtoResponseDocs) SetScalarPath(val NilString) {
	s.ScalarPath = val
}

// SetSwaggerPath sets the value of SwaggerPath.
func (s *FindAllApiTokensResponseDtoResponseDocs) SetSwaggerPath(val NilString) {
	s.SwaggerPath = val
}

// Ref: #/components/schemas/GetAllHostsResponseDto
type GetAllHostsResponseDto struct {
	Response []GetAllHostsResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetAllHostsResponseDto) GetResponse() []GetAllHostsResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetAllHostsResponseDto) SetResponse(val []GetAllHostsResponseDtoResponseItem) {
	s.Response = val
}

type GetAllHostsResponseDtoResponseItem struct {
	UUID             uuid.UUID                                          `json:"uuid"`
	InboundUuid      uuid.UUID                                          `json:"inboundUuid"`
	ViewPosition     int                                                `json:"viewPosition"`
	Remark           string                                             `json:"remark"`
	Address          string                                             `json:"address"`
	Port             int                                                `json:"port"`
	Path             NilString                                          `json:"path"`
	Sni              NilString                                          `json:"sni"`
	Host             NilString                                          `json:"host"`
	Alpn             NilString                                          `json:"alpn"`
	Fingerprint      NilString                                          `json:"fingerprint"`
	AllowInsecure    OptBool                                            `json:"allowInsecure"`
	IsDisabled       OptBool                                            `json:"isDisabled"`
	SecurityLayer    OptGetAllHostsResponseDtoResponseItemSecurityLayer `json:"securityLayer"`
	XHttpExtraParams jx.Raw                                             `json:"xHttpExtraParams"`
}

// GetUUID returns the value of UUID.
func (s *GetAllHostsResponseDtoResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetInboundUuid returns the value of InboundUuid.
func (s *GetAllHostsResponseDtoResponseItem) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// GetViewPosition returns the value of ViewPosition.
func (s *GetAllHostsResponseDtoResponseItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetRemark returns the value of Remark.
func (s *GetAllHostsResponseDtoResponseItem) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *GetAllHostsResponseDtoResponseItem) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *GetAllHostsResponseDtoResponseItem) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *GetAllHostsResponseDtoResponseItem) GetPath() NilString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *GetAllHostsResponseDtoResponseItem) GetSni() NilString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *GetAllHostsResponseDtoResponseItem) GetHost() NilString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *GetAllHostsResponseDtoResponseItem) GetAlpn() NilString {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *GetAllHostsResponseDtoResponseItem) GetFingerprint() NilString {
	return s.Fingerprint
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *GetAllHostsResponseDtoResponseItem) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetIsDisabled returns the value of IsDisabled.
func (s *GetAllHostsResponseDtoResponseItem) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *GetAllHostsResponseDtoResponseItem) GetSecurityLayer() OptGetAllHostsResponseDtoResponseItemSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *GetAllHostsResponseDtoResponseItem) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// SetUUID sets the value of UUID.
func (s *GetAllHostsResponseDtoResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetInboundUuid sets the value of InboundUuid.
func (s *GetAllHostsResponseDtoResponseItem) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *GetAllHostsResponseDtoResponseItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetRemark sets the value of Remark.
func (s *GetAllHostsResponseDtoResponseItem) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *GetAllHostsResponseDtoResponseItem) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *GetAllHostsResponseDtoResponseItem) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *GetAllHostsResponseDtoResponseItem) SetPath(val NilString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *GetAllHostsResponseDtoResponseItem) SetSni(val NilString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *GetAllHostsResponseDtoResponseItem) SetHost(val NilString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *GetAllHostsResponseDtoResponseItem) SetAlpn(val NilString) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *GetAllHostsResponseDtoResponseItem) SetFingerprint(val NilString) {
	s.Fingerprint = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *GetAllHostsResponseDtoResponseItem) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *GetAllHostsResponseDtoResponseItem) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *GetAllHostsResponseDtoResponseItem) SetSecurityLayer(val OptGetAllHostsResponseDtoResponseItemSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *GetAllHostsResponseDtoResponseItem) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

type GetAllHostsResponseDtoResponseItemSecurityLayer string

const (
	GetAllHostsResponseDtoResponseItemSecurityLayerDEFAULT GetAllHostsResponseDtoResponseItemSecurityLayer = "DEFAULT"
	GetAllHostsResponseDtoResponseItemSecurityLayerTLS     GetAllHostsResponseDtoResponseItemSecurityLayer = "TLS"
	GetAllHostsResponseDtoResponseItemSecurityLayerNONE    GetAllHostsResponseDtoResponseItemSecurityLayer = "NONE"
)

// AllValues returns all GetAllHostsResponseDtoResponseItemSecurityLayer values.
func (GetAllHostsResponseDtoResponseItemSecurityLayer) AllValues() []GetAllHostsResponseDtoResponseItemSecurityLayer {
	return []GetAllHostsResponseDtoResponseItemSecurityLayer{
		GetAllHostsResponseDtoResponseItemSecurityLayerDEFAULT,
		GetAllHostsResponseDtoResponseItemSecurityLayerTLS,
		GetAllHostsResponseDtoResponseItemSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetAllHostsResponseDtoResponseItemSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case GetAllHostsResponseDtoResponseItemSecurityLayerDEFAULT:
		return []byte(s), nil
	case GetAllHostsResponseDtoResponseItemSecurityLayerTLS:
		return []byte(s), nil
	case GetAllHostsResponseDtoResponseItemSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetAllHostsResponseDtoResponseItemSecurityLayer) UnmarshalText(data []byte) error {
	switch GetAllHostsResponseDtoResponseItemSecurityLayer(data) {
	case GetAllHostsResponseDtoResponseItemSecurityLayerDEFAULT:
		*s = GetAllHostsResponseDtoResponseItemSecurityLayerDEFAULT
		return nil
	case GetAllHostsResponseDtoResponseItemSecurityLayerTLS:
		*s = GetAllHostsResponseDtoResponseItemSecurityLayerTLS
		return nil
	case GetAllHostsResponseDtoResponseItemSecurityLayerNONE:
		*s = GetAllHostsResponseDtoResponseItemSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetAllNodesResponseDto
type GetAllNodesResponseDto struct {
	Response []GetAllNodesResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetAllNodesResponseDto) GetResponse() []GetAllNodesResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetAllNodesResponseDto) SetResponse(val []GetAllNodesResponseDtoResponseItem) {
	s.Response = val
}

type GetAllNodesResponseDtoResponseItem struct {
	UUID                    uuid.UUID                                                `json:"uuid"`
	Name                    string                                                   `json:"name"`
	Address                 string                                                   `json:"address"`
	Port                    NilInt                                                   `json:"port"`
	IsConnected             bool                                                     `json:"isConnected"`
	IsDisabled              bool                                                     `json:"isDisabled"`
	IsConnecting            bool                                                     `json:"isConnecting"`
	IsNodeOnline            bool                                                     `json:"isNodeOnline"`
	IsXrayRunning           bool                                                     `json:"isXrayRunning"`
	LastStatusChange        NilDateTime                                              `json:"lastStatusChange"`
	LastStatusMessage       NilString                                                `json:"lastStatusMessage"`
	XrayVersion             NilString                                                `json:"xrayVersion"`
	XrayUptime              string                                                   `json:"xrayUptime"`
	IsTrafficTrackingActive bool                                                     `json:"isTrafficTrackingActive"`
	TrafficResetDay         NilInt                                                   `json:"trafficResetDay"`
	TrafficLimitBytes       NilFloat64                                               `json:"trafficLimitBytes"`
	TrafficUsedBytes        NilFloat64                                               `json:"trafficUsedBytes"`
	NotifyPercent           NilInt                                                   `json:"notifyPercent"`
	UsersOnline             NilInt                                                   `json:"usersOnline"`
	ViewPosition            int                                                      `json:"viewPosition"`
	CountryCode             string                                                   `json:"countryCode"`
	ConsumptionMultiplier   float64                                                  `json:"consumptionMultiplier"`
	CpuCount                NilInt                                                   `json:"cpuCount"`
	CpuModel                NilString                                                `json:"cpuModel"`
	TotalRam                NilString                                                `json:"totalRam"`
	CreatedAt               time.Time                                                `json:"createdAt"`
	UpdatedAt               time.Time                                                `json:"updatedAt"`
	ExcludedInbounds        []GetAllNodesResponseDtoResponseItemExcludedInboundsItem `json:"excludedInbounds"`
}

// GetUUID returns the value of UUID.
func (s *GetAllNodesResponseDtoResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *GetAllNodesResponseDtoResponseItem) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *GetAllNodesResponseDtoResponseItem) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *GetAllNodesResponseDtoResponseItem) GetPort() NilInt {
	return s.Port
}

// GetIsConnected returns the value of IsConnected.
func (s *GetAllNodesResponseDtoResponseItem) GetIsConnected() bool {
	return s.IsConnected
}

// GetIsDisabled returns the value of IsDisabled.
func (s *GetAllNodesResponseDtoResponseItem) GetIsDisabled() bool {
	return s.IsDisabled
}

// GetIsConnecting returns the value of IsConnecting.
func (s *GetAllNodesResponseDtoResponseItem) GetIsConnecting() bool {
	return s.IsConnecting
}

// GetIsNodeOnline returns the value of IsNodeOnline.
func (s *GetAllNodesResponseDtoResponseItem) GetIsNodeOnline() bool {
	return s.IsNodeOnline
}

// GetIsXrayRunning returns the value of IsXrayRunning.
func (s *GetAllNodesResponseDtoResponseItem) GetIsXrayRunning() bool {
	return s.IsXrayRunning
}

// GetLastStatusChange returns the value of LastStatusChange.
func (s *GetAllNodesResponseDtoResponseItem) GetLastStatusChange() NilDateTime {
	return s.LastStatusChange
}

// GetLastStatusMessage returns the value of LastStatusMessage.
func (s *GetAllNodesResponseDtoResponseItem) GetLastStatusMessage() NilString {
	return s.LastStatusMessage
}

// GetXrayVersion returns the value of XrayVersion.
func (s *GetAllNodesResponseDtoResponseItem) GetXrayVersion() NilString {
	return s.XrayVersion
}

// GetXrayUptime returns the value of XrayUptime.
func (s *GetAllNodesResponseDtoResponseItem) GetXrayUptime() string {
	return s.XrayUptime
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *GetAllNodesResponseDtoResponseItem) GetIsTrafficTrackingActive() bool {
	return s.IsTrafficTrackingActive
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *GetAllNodesResponseDtoResponseItem) GetTrafficResetDay() NilInt {
	return s.TrafficResetDay
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *GetAllNodesResponseDtoResponseItem) GetTrafficLimitBytes() NilFloat64 {
	return s.TrafficLimitBytes
}

// GetTrafficUsedBytes returns the value of TrafficUsedBytes.
func (s *GetAllNodesResponseDtoResponseItem) GetTrafficUsedBytes() NilFloat64 {
	return s.TrafficUsedBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *GetAllNodesResponseDtoResponseItem) GetNotifyPercent() NilInt {
	return s.NotifyPercent
}

// GetUsersOnline returns the value of UsersOnline.
func (s *GetAllNodesResponseDtoResponseItem) GetUsersOnline() NilInt {
	return s.UsersOnline
}

// GetViewPosition returns the value of ViewPosition.
func (s *GetAllNodesResponseDtoResponseItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetCountryCode returns the value of CountryCode.
func (s *GetAllNodesResponseDtoResponseItem) GetCountryCode() string {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *GetAllNodesResponseDtoResponseItem) GetConsumptionMultiplier() float64 {
	return s.ConsumptionMultiplier
}

// GetCpuCount returns the value of CpuCount.
func (s *GetAllNodesResponseDtoResponseItem) GetCpuCount() NilInt {
	return s.CpuCount
}

// GetCpuModel returns the value of CpuModel.
func (s *GetAllNodesResponseDtoResponseItem) GetCpuModel() NilString {
	return s.CpuModel
}

// GetTotalRam returns the value of TotalRam.
func (s *GetAllNodesResponseDtoResponseItem) GetTotalRam() NilString {
	return s.TotalRam
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetAllNodesResponseDtoResponseItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetAllNodesResponseDtoResponseItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetExcludedInbounds returns the value of ExcludedInbounds.
func (s *GetAllNodesResponseDtoResponseItem) GetExcludedInbounds() []GetAllNodesResponseDtoResponseItemExcludedInboundsItem {
	return s.ExcludedInbounds
}

// SetUUID sets the value of UUID.
func (s *GetAllNodesResponseDtoResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *GetAllNodesResponseDtoResponseItem) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *GetAllNodesResponseDtoResponseItem) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *GetAllNodesResponseDtoResponseItem) SetPort(val NilInt) {
	s.Port = val
}

// SetIsConnected sets the value of IsConnected.
func (s *GetAllNodesResponseDtoResponseItem) SetIsConnected(val bool) {
	s.IsConnected = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *GetAllNodesResponseDtoResponseItem) SetIsDisabled(val bool) {
	s.IsDisabled = val
}

// SetIsConnecting sets the value of IsConnecting.
func (s *GetAllNodesResponseDtoResponseItem) SetIsConnecting(val bool) {
	s.IsConnecting = val
}

// SetIsNodeOnline sets the value of IsNodeOnline.
func (s *GetAllNodesResponseDtoResponseItem) SetIsNodeOnline(val bool) {
	s.IsNodeOnline = val
}

// SetIsXrayRunning sets the value of IsXrayRunning.
func (s *GetAllNodesResponseDtoResponseItem) SetIsXrayRunning(val bool) {
	s.IsXrayRunning = val
}

// SetLastStatusChange sets the value of LastStatusChange.
func (s *GetAllNodesResponseDtoResponseItem) SetLastStatusChange(val NilDateTime) {
	s.LastStatusChange = val
}

// SetLastStatusMessage sets the value of LastStatusMessage.
func (s *GetAllNodesResponseDtoResponseItem) SetLastStatusMessage(val NilString) {
	s.LastStatusMessage = val
}

// SetXrayVersion sets the value of XrayVersion.
func (s *GetAllNodesResponseDtoResponseItem) SetXrayVersion(val NilString) {
	s.XrayVersion = val
}

// SetXrayUptime sets the value of XrayUptime.
func (s *GetAllNodesResponseDtoResponseItem) SetXrayUptime(val string) {
	s.XrayUptime = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *GetAllNodesResponseDtoResponseItem) SetIsTrafficTrackingActive(val bool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *GetAllNodesResponseDtoResponseItem) SetTrafficResetDay(val NilInt) {
	s.TrafficResetDay = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *GetAllNodesResponseDtoResponseItem) SetTrafficLimitBytes(val NilFloat64) {
	s.TrafficLimitBytes = val
}

// SetTrafficUsedBytes sets the value of TrafficUsedBytes.
func (s *GetAllNodesResponseDtoResponseItem) SetTrafficUsedBytes(val NilFloat64) {
	s.TrafficUsedBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *GetAllNodesResponseDtoResponseItem) SetNotifyPercent(val NilInt) {
	s.NotifyPercent = val
}

// SetUsersOnline sets the value of UsersOnline.
func (s *GetAllNodesResponseDtoResponseItem) SetUsersOnline(val NilInt) {
	s.UsersOnline = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *GetAllNodesResponseDtoResponseItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetCountryCode sets the value of CountryCode.
func (s *GetAllNodesResponseDtoResponseItem) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *GetAllNodesResponseDtoResponseItem) SetConsumptionMultiplier(val float64) {
	s.ConsumptionMultiplier = val
}

// SetCpuCount sets the value of CpuCount.
func (s *GetAllNodesResponseDtoResponseItem) SetCpuCount(val NilInt) {
	s.CpuCount = val
}

// SetCpuModel sets the value of CpuModel.
func (s *GetAllNodesResponseDtoResponseItem) SetCpuModel(val NilString) {
	s.CpuModel = val
}

// SetTotalRam sets the value of TotalRam.
func (s *GetAllNodesResponseDtoResponseItem) SetTotalRam(val NilString) {
	s.TotalRam = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetAllNodesResponseDtoResponseItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetAllNodesResponseDtoResponseItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetExcludedInbounds sets the value of ExcludedInbounds.
func (s *GetAllNodesResponseDtoResponseItem) SetExcludedInbounds(val []GetAllNodesResponseDtoResponseItemExcludedInboundsItem) {
	s.ExcludedInbounds = val
}

type GetAllNodesResponseDtoResponseItemExcludedInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *GetAllNodesResponseDtoResponseItemExcludedInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *GetAllNodesResponseDtoResponseItemExcludedInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *GetAllNodesResponseDtoResponseItemExcludedInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *GetAllNodesResponseDtoResponseItemExcludedInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *GetAllNodesResponseDtoResponseItemExcludedInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *GetAllNodesResponseDtoResponseItemExcludedInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *GetAllNodesResponseDtoResponseItemExcludedInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *GetAllNodesResponseDtoResponseItemExcludedInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *GetAllNodesResponseDtoResponseItemExcludedInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *GetAllNodesResponseDtoResponseItemExcludedInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// Ref: #/components/schemas/GetAllSubscriptionsResponseDto
type GetAllSubscriptionsResponseDto struct {
	Response GetAllSubscriptionsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetAllSubscriptionsResponseDto) GetResponse() GetAllSubscriptionsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetAllSubscriptionsResponseDto) SetResponse(val GetAllSubscriptionsResponseDtoResponse) {
	s.Response = val
}

type GetAllSubscriptionsResponseDtoResponse struct {
	Subscriptions []GetAllSubscriptionsResponseDtoResponseSubscriptionsItem `json:"subscriptions"`
	Total         float64                                                   `json:"total"`
}

// GetSubscriptions returns the value of Subscriptions.
func (s *GetAllSubscriptionsResponseDtoResponse) GetSubscriptions() []GetAllSubscriptionsResponseDtoResponseSubscriptionsItem {
	return s.Subscriptions
}

// GetTotal returns the value of Total.
func (s *GetAllSubscriptionsResponseDtoResponse) GetTotal() float64 {
	return s.Total
}

// SetSubscriptions sets the value of Subscriptions.
func (s *GetAllSubscriptionsResponseDtoResponse) SetSubscriptions(val []GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) {
	s.Subscriptions = val
}

// SetTotal sets the value of Total.
func (s *GetAllSubscriptionsResponseDtoResponse) SetTotal(val float64) {
	s.Total = val
}

type GetAllSubscriptionsResponseDtoResponseSubscriptionsItem struct {
	IsFound         bool                                                               `json:"isFound"`
	User            GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser        `json:"user"`
	Links           []string                                                           `json:"links"`
	SsConfLinks     GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks `json:"ssConfLinks"`
	SubscriptionUrl string                                                             `json:"subscriptionUrl"`
}

// GetIsFound returns the value of IsFound.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) GetIsFound() bool {
	return s.IsFound
}

// GetUser returns the value of User.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) GetUser() GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser {
	return s.User
}

// GetLinks returns the value of Links.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) GetLinks() []string {
	return s.Links
}

// GetSsConfLinks returns the value of SsConfLinks.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) GetSsConfLinks() GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks {
	return s.SsConfLinks
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// SetIsFound sets the value of IsFound.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) SetIsFound(val bool) {
	s.IsFound = val
}

// SetUser sets the value of User.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) SetUser(val GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) {
	s.User = val
}

// SetLinks sets the value of Links.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) SetLinks(val []string) {
	s.Links = val
}

// SetSsConfLinks sets the value of SsConfLinks.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) SetSsConfLinks(val GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks) {
	s.SsConfLinks = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItem) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

type GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks map[string]string

func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks) init() GetAllSubscriptionsResponseDtoResponseSubscriptionsItemSsConfLinks {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser struct {
	ShortUuid            string                                                                          `json:"shortUuid"`
	DaysLeft             float64                                                                         `json:"daysLeft"`
	TrafficUsed          string                                                                          `json:"trafficUsed"`
	TrafficLimit         string                                                                          `json:"trafficLimit"`
	Username             string                                                                          `json:"username"`
	ExpiresAt            time.Time                                                                       `json:"expiresAt"`
	IsActive             bool                                                                            `json:"isActive"`
	UserStatus           GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus           `json:"userStatus"`
	TrafficLimitStrategy GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy `json:"trafficLimitStrategy"`
}

// GetShortUuid returns the value of ShortUuid.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetShortUuid() string {
	return s.ShortUuid
}

// GetDaysLeft returns the value of DaysLeft.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetDaysLeft() float64 {
	return s.DaysLeft
}

// GetTrafficUsed returns the value of TrafficUsed.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetTrafficUsed() string {
	return s.TrafficUsed
}

// GetTrafficLimit returns the value of TrafficLimit.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetTrafficLimit() string {
	return s.TrafficLimit
}

// GetUsername returns the value of Username.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetUsername() string {
	return s.Username
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetExpiresAt() time.Time {
	return s.ExpiresAt
}

// GetIsActive returns the value of IsActive.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetIsActive() bool {
	return s.IsActive
}

// GetUserStatus returns the value of UserStatus.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetUserStatus() GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus {
	return s.UserStatus
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) GetTrafficLimitStrategy() GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// SetShortUuid sets the value of ShortUuid.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetDaysLeft sets the value of DaysLeft.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetDaysLeft(val float64) {
	s.DaysLeft = val
}

// SetTrafficUsed sets the value of TrafficUsed.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetTrafficUsed(val string) {
	s.TrafficUsed = val
}

// SetTrafficLimit sets the value of TrafficLimit.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetTrafficLimit(val string) {
	s.TrafficLimit = val
}

// SetUsername sets the value of Username.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetUsername(val string) {
	s.Username = val
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetExpiresAt(val time.Time) {
	s.ExpiresAt = val
}

// SetIsActive sets the value of IsActive.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetIsActive(val bool) {
	s.IsActive = val
}

// SetUserStatus sets the value of UserStatus.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetUserStatus(val GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus) {
	s.UserStatus = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUser) SetTrafficLimitStrategy(val GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

type GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy string

const (
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyNORESET GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy = "NO_RESET"
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyDAY     GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy = "DAY"
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyWEEK    GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy = "WEEK"
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyMONTH   GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy = "MONTH"
)

// AllValues returns all GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy values.
func (GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy) AllValues() []GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy {
	return []GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy{
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyNORESET,
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyDAY,
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyWEEK,
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyDAY:
		return []byte(s), nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategy(data) {
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyNORESET:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyNORESET
		return nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyDAY:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyDAY
		return nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyWEEK:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyWEEK
		return nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyMONTH:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus string

const (
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusACTIVE   GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus = "ACTIVE"
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusDISABLED GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus = "DISABLED"
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusLIMITED  GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus = "LIMITED"
	GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusEXPIRED  GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus = "EXPIRED"
)

// AllValues returns all GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus values.
func (GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus) AllValues() []GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus {
	return []GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus{
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusACTIVE,
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusDISABLED,
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusLIMITED,
		GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusACTIVE:
		return []byte(s), nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusDISABLED:
		return []byte(s), nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusLIMITED:
		return []byte(s), nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus) UnmarshalText(data []byte) error {
	switch GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatus(data) {
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusACTIVE:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusACTIVE
		return nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusDISABLED:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusDISABLED
		return nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusLIMITED:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusLIMITED
		return nil
	case GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusEXPIRED:
		*s = GetAllSubscriptionsResponseDtoResponseSubscriptionsItemUserUserStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetAllTagsResponseDto
type GetAllTagsResponseDto struct {
	Response GetAllTagsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetAllTagsResponseDto) GetResponse() GetAllTagsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetAllTagsResponseDto) SetResponse(val GetAllTagsResponseDtoResponse) {
	s.Response = val
}

type GetAllTagsResponseDtoResponse struct {
	Tags []string `json:"tags"`
}

// GetTags returns the value of Tags.
func (s *GetAllTagsResponseDtoResponse) GetTags() []string {
	return s.Tags
}

// SetTags sets the value of Tags.
func (s *GetAllTagsResponseDtoResponse) SetTags(val []string) {
	s.Tags = val
}

// Ref: #/components/schemas/GetAllUsersResponseDto
type GetAllUsersResponseDto struct {
	Response GetAllUsersResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetAllUsersResponseDto) GetResponse() GetAllUsersResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetAllUsersResponseDto) SetResponse(val GetAllUsersResponseDtoResponse) {
	s.Response = val
}

type GetAllUsersResponseDtoResponse struct {
	Users []UserDto `json:"users"`
	Total float64   `json:"total"`
}

// GetUsers returns the value of Users.
func (s *GetAllUsersResponseDtoResponse) GetUsers() []UserDto {
	return s.Users
}

// GetTotal returns the value of Total.
func (s *GetAllUsersResponseDtoResponse) GetTotal() float64 {
	return s.Total
}

// SetUsers sets the value of Users.
func (s *GetAllUsersResponseDtoResponse) SetUsers(val []UserDto) {
	s.Users = val
}

// SetTotal sets the value of Total.
func (s *GetAllUsersResponseDtoResponse) SetTotal(val float64) {
	s.Total = val
}

// Ref: #/components/schemas/GetBandwidthStatsResponseDto
type GetBandwidthStatsResponseDto struct {
	Response GetBandwidthStatsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetBandwidthStatsResponseDto) GetResponse() GetBandwidthStatsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetBandwidthStatsResponseDto) SetResponse(val GetBandwidthStatsResponseDtoResponse) {
	s.Response = val
}

type GetBandwidthStatsResponseDtoResponse struct {
	BandwidthLastTwoDays   GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays   `json:"bandwidthLastTwoDays"`
	BandwidthLastSevenDays GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays `json:"bandwidthLastSevenDays"`
	BandwidthLast30Days    GetBandwidthStatsResponseDtoResponseBandwidthLast30Days    `json:"bandwidthLast30Days"`
	BandwidthCalendarMonth GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth `json:"bandwidthCalendarMonth"`
	BandwidthCurrentYear   GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear   `json:"bandwidthCurrentYear"`
}

// GetBandwidthLastTwoDays returns the value of BandwidthLastTwoDays.
func (s *GetBandwidthStatsResponseDtoResponse) GetBandwidthLastTwoDays() GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays {
	return s.BandwidthLastTwoDays
}

// GetBandwidthLastSevenDays returns the value of BandwidthLastSevenDays.
func (s *GetBandwidthStatsResponseDtoResponse) GetBandwidthLastSevenDays() GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays {
	return s.BandwidthLastSevenDays
}

// GetBandwidthLast30Days returns the value of BandwidthLast30Days.
func (s *GetBandwidthStatsResponseDtoResponse) GetBandwidthLast30Days() GetBandwidthStatsResponseDtoResponseBandwidthLast30Days {
	return s.BandwidthLast30Days
}

// GetBandwidthCalendarMonth returns the value of BandwidthCalendarMonth.
func (s *GetBandwidthStatsResponseDtoResponse) GetBandwidthCalendarMonth() GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth {
	return s.BandwidthCalendarMonth
}

// GetBandwidthCurrentYear returns the value of BandwidthCurrentYear.
func (s *GetBandwidthStatsResponseDtoResponse) GetBandwidthCurrentYear() GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear {
	return s.BandwidthCurrentYear
}

// SetBandwidthLastTwoDays sets the value of BandwidthLastTwoDays.
func (s *GetBandwidthStatsResponseDtoResponse) SetBandwidthLastTwoDays(val GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) {
	s.BandwidthLastTwoDays = val
}

// SetBandwidthLastSevenDays sets the value of BandwidthLastSevenDays.
func (s *GetBandwidthStatsResponseDtoResponse) SetBandwidthLastSevenDays(val GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) {
	s.BandwidthLastSevenDays = val
}

// SetBandwidthLast30Days sets the value of BandwidthLast30Days.
func (s *GetBandwidthStatsResponseDtoResponse) SetBandwidthLast30Days(val GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) {
	s.BandwidthLast30Days = val
}

// SetBandwidthCalendarMonth sets the value of BandwidthCalendarMonth.
func (s *GetBandwidthStatsResponseDtoResponse) SetBandwidthCalendarMonth(val GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) {
	s.BandwidthCalendarMonth = val
}

// SetBandwidthCurrentYear sets the value of BandwidthCurrentYear.
func (s *GetBandwidthStatsResponseDtoResponse) SetBandwidthCurrentYear(val GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) {
	s.BandwidthCurrentYear = val
}

type GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth struct {
	Current    string `json:"current"`
	Previous   string `json:"previous"`
	Difference string `json:"difference"`
}

// GetCurrent returns the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) GetCurrent() string {
	return s.Current
}

// GetPrevious returns the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) GetPrevious() string {
	return s.Previous
}

// GetDifference returns the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) GetDifference() string {
	return s.Difference
}

// SetCurrent sets the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) SetCurrent(val string) {
	s.Current = val
}

// SetPrevious sets the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) SetPrevious(val string) {
	s.Previous = val
}

// SetDifference sets the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCalendarMonth) SetDifference(val string) {
	s.Difference = val
}

type GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear struct {
	Current    string `json:"current"`
	Previous   string `json:"previous"`
	Difference string `json:"difference"`
}

// GetCurrent returns the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) GetCurrent() string {
	return s.Current
}

// GetPrevious returns the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) GetPrevious() string {
	return s.Previous
}

// GetDifference returns the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) GetDifference() string {
	return s.Difference
}

// SetCurrent sets the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) SetCurrent(val string) {
	s.Current = val
}

// SetPrevious sets the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) SetPrevious(val string) {
	s.Previous = val
}

// SetDifference sets the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthCurrentYear) SetDifference(val string) {
	s.Difference = val
}

type GetBandwidthStatsResponseDtoResponseBandwidthLast30Days struct {
	Current    string `json:"current"`
	Previous   string `json:"previous"`
	Difference string `json:"difference"`
}

// GetCurrent returns the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) GetCurrent() string {
	return s.Current
}

// GetPrevious returns the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) GetPrevious() string {
	return s.Previous
}

// GetDifference returns the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) GetDifference() string {
	return s.Difference
}

// SetCurrent sets the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) SetCurrent(val string) {
	s.Current = val
}

// SetPrevious sets the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) SetPrevious(val string) {
	s.Previous = val
}

// SetDifference sets the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLast30Days) SetDifference(val string) {
	s.Difference = val
}

type GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays struct {
	Current    string `json:"current"`
	Previous   string `json:"previous"`
	Difference string `json:"difference"`
}

// GetCurrent returns the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) GetCurrent() string {
	return s.Current
}

// GetPrevious returns the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) GetPrevious() string {
	return s.Previous
}

// GetDifference returns the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) GetDifference() string {
	return s.Difference
}

// SetCurrent sets the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) SetCurrent(val string) {
	s.Current = val
}

// SetPrevious sets the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) SetPrevious(val string) {
	s.Previous = val
}

// SetDifference sets the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastSevenDays) SetDifference(val string) {
	s.Difference = val
}

type GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays struct {
	Current    string `json:"current"`
	Previous   string `json:"previous"`
	Difference string `json:"difference"`
}

// GetCurrent returns the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) GetCurrent() string {
	return s.Current
}

// GetPrevious returns the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) GetPrevious() string {
	return s.Previous
}

// GetDifference returns the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) GetDifference() string {
	return s.Difference
}

// SetCurrent sets the value of Current.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) SetCurrent(val string) {
	s.Current = val
}

// SetPrevious sets the value of Previous.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) SetPrevious(val string) {
	s.Previous = val
}

// SetDifference sets the value of Difference.
func (s *GetBandwidthStatsResponseDtoResponseBandwidthLastTwoDays) SetDifference(val string) {
	s.Difference = val
}

// Ref: #/components/schemas/GetConfigResponseDto
type GetConfigResponseDto struct {
	Response GetConfigResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetConfigResponseDto) GetResponse() GetConfigResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetConfigResponseDto) SetResponse(val GetConfigResponseDtoResponse) {
	s.Response = val
}

func (*GetConfigResponseDto) xrayConfigControllerGetConfigRes() {}

type GetConfigResponseDtoResponse struct {
	Config jx.Raw `json:"config"`
}

// GetConfig returns the value of Config.
func (s *GetConfigResponseDtoResponse) GetConfig() jx.Raw {
	return s.Config
}

// SetConfig sets the value of Config.
func (s *GetConfigResponseDtoResponse) SetConfig(val jx.Raw) {
	s.Config = val
}

// Ref: #/components/schemas/GetFullInboundsResponseDto
type GetFullInboundsResponseDto struct {
	Response []GetFullInboundsResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetFullInboundsResponseDto) GetResponse() []GetFullInboundsResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetFullInboundsResponseDto) SetResponse(val []GetFullInboundsResponseDtoResponseItem) {
	s.Response = val
}

type GetFullInboundsResponseDtoResponseItem struct {
	UUID          uuid.UUID                                           `json:"uuid"`
	Tag           string                                              `json:"tag"`
	Type          string                                              `json:"type"`
	Port          float64                                             `json:"port"`
	Network       NilString                                           `json:"network"`
	Security      NilString                                           `json:"security"`
	RawFromConfig GetFullInboundsResponseDtoResponseItemRawFromConfig `json:"rawFromConfig"`
	Users         GetFullInboundsResponseDtoResponseItemUsers         `json:"users"`
	Nodes         GetFullInboundsResponseDtoResponseItemNodes         `json:"nodes"`
}

// GetUUID returns the value of UUID.
func (s *GetFullInboundsResponseDtoResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *GetFullInboundsResponseDtoResponseItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *GetFullInboundsResponseDtoResponseItem) GetType() string {
	return s.Type
}

// GetPort returns the value of Port.
func (s *GetFullInboundsResponseDtoResponseItem) GetPort() float64 {
	return s.Port
}

// GetNetwork returns the value of Network.
func (s *GetFullInboundsResponseDtoResponseItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *GetFullInboundsResponseDtoResponseItem) GetSecurity() NilString {
	return s.Security
}

// GetRawFromConfig returns the value of RawFromConfig.
func (s *GetFullInboundsResponseDtoResponseItem) GetRawFromConfig() GetFullInboundsResponseDtoResponseItemRawFromConfig {
	return s.RawFromConfig
}

// GetUsers returns the value of Users.
func (s *GetFullInboundsResponseDtoResponseItem) GetUsers() GetFullInboundsResponseDtoResponseItemUsers {
	return s.Users
}

// GetNodes returns the value of Nodes.
func (s *GetFullInboundsResponseDtoResponseItem) GetNodes() GetFullInboundsResponseDtoResponseItemNodes {
	return s.Nodes
}

// SetUUID sets the value of UUID.
func (s *GetFullInboundsResponseDtoResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *GetFullInboundsResponseDtoResponseItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *GetFullInboundsResponseDtoResponseItem) SetType(val string) {
	s.Type = val
}

// SetPort sets the value of Port.
func (s *GetFullInboundsResponseDtoResponseItem) SetPort(val float64) {
	s.Port = val
}

// SetNetwork sets the value of Network.
func (s *GetFullInboundsResponseDtoResponseItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *GetFullInboundsResponseDtoResponseItem) SetSecurity(val NilString) {
	s.Security = val
}

// SetRawFromConfig sets the value of RawFromConfig.
func (s *GetFullInboundsResponseDtoResponseItem) SetRawFromConfig(val GetFullInboundsResponseDtoResponseItemRawFromConfig) {
	s.RawFromConfig = val
}

// SetUsers sets the value of Users.
func (s *GetFullInboundsResponseDtoResponseItem) SetUsers(val GetFullInboundsResponseDtoResponseItemUsers) {
	s.Users = val
}

// SetNodes sets the value of Nodes.
func (s *GetFullInboundsResponseDtoResponseItem) SetNodes(val GetFullInboundsResponseDtoResponseItemNodes) {
	s.Nodes = val
}

type GetFullInboundsResponseDtoResponseItemNodes struct {
	Enabled  float64 `json:"enabled"`
	Disabled float64 `json:"disabled"`
}

// GetEnabled returns the value of Enabled.
func (s *GetFullInboundsResponseDtoResponseItemNodes) GetEnabled() float64 {
	return s.Enabled
}

// GetDisabled returns the value of Disabled.
func (s *GetFullInboundsResponseDtoResponseItemNodes) GetDisabled() float64 {
	return s.Disabled
}

// SetEnabled sets the value of Enabled.
func (s *GetFullInboundsResponseDtoResponseItemNodes) SetEnabled(val float64) {
	s.Enabled = val
}

// SetDisabled sets the value of Disabled.
func (s *GetFullInboundsResponseDtoResponseItemNodes) SetDisabled(val float64) {
	s.Disabled = val
}

type GetFullInboundsResponseDtoResponseItemRawFromConfig struct{}

type GetFullInboundsResponseDtoResponseItemUsers struct {
	Enabled  float64 `json:"enabled"`
	Disabled float64 `json:"disabled"`
}

// GetEnabled returns the value of Enabled.
func (s *GetFullInboundsResponseDtoResponseItemUsers) GetEnabled() float64 {
	return s.Enabled
}

// GetDisabled returns the value of Disabled.
func (s *GetFullInboundsResponseDtoResponseItemUsers) GetDisabled() float64 {
	return s.Disabled
}

// SetEnabled sets the value of Enabled.
func (s *GetFullInboundsResponseDtoResponseItemUsers) SetEnabled(val float64) {
	s.Enabled = val
}

// SetDisabled sets the value of Disabled.
func (s *GetFullInboundsResponseDtoResponseItemUsers) SetDisabled(val float64) {
	s.Disabled = val
}

// Ref: #/components/schemas/GetInboundsResponseDto
type GetInboundsResponseDto struct {
	Response []GetInboundsResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetInboundsResponseDto) GetResponse() []GetInboundsResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetInboundsResponseDto) SetResponse(val []GetInboundsResponseDtoResponseItem) {
	s.Response = val
}

type GetInboundsResponseDtoResponseItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Port     float64   `json:"port"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *GetInboundsResponseDtoResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *GetInboundsResponseDtoResponseItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *GetInboundsResponseDtoResponseItem) GetType() string {
	return s.Type
}

// GetPort returns the value of Port.
func (s *GetInboundsResponseDtoResponseItem) GetPort() float64 {
	return s.Port
}

// GetNetwork returns the value of Network.
func (s *GetInboundsResponseDtoResponseItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *GetInboundsResponseDtoResponseItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *GetInboundsResponseDtoResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *GetInboundsResponseDtoResponseItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *GetInboundsResponseDtoResponseItem) SetType(val string) {
	s.Type = val
}

// SetPort sets the value of Port.
func (s *GetInboundsResponseDtoResponseItem) SetPort(val float64) {
	s.Port = val
}

// SetNetwork sets the value of Network.
func (s *GetInboundsResponseDtoResponseItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *GetInboundsResponseDtoResponseItem) SetSecurity(val NilString) {
	s.Security = val
}

// Ref: #/components/schemas/GetNodeUserUsageByRangeResponseDto
type GetNodeUserUsageByRangeResponseDto struct {
	Response []GetNodeUserUsageByRangeResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetNodeUserUsageByRangeResponseDto) GetResponse() []GetNodeUserUsageByRangeResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetNodeUserUsageByRangeResponseDto) SetResponse(val []GetNodeUserUsageByRangeResponseDtoResponseItem) {
	s.Response = val
}

type GetNodeUserUsageByRangeResponseDtoResponseItem struct {
	UserUuid uuid.UUID `json:"userUuid"`
	Username string    `json:"username"`
	NodeUuid uuid.UUID `json:"nodeUuid"`
	Total    float64   `json:"total"`
	Date     string    `json:"date"`
}

// GetUserUuid returns the value of UserUuid.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetUsername returns the value of Username.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) GetUsername() string {
	return s.Username
}

// GetNodeUuid returns the value of NodeUuid.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) GetNodeUuid() uuid.UUID {
	return s.NodeUuid
}

// GetTotal returns the value of Total.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) GetTotal() float64 {
	return s.Total
}

// GetDate returns the value of Date.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) GetDate() string {
	return s.Date
}

// SetUserUuid sets the value of UserUuid.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetUsername sets the value of Username.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) SetUsername(val string) {
	s.Username = val
}

// SetNodeUuid sets the value of NodeUuid.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) SetNodeUuid(val uuid.UUID) {
	s.NodeUuid = val
}

// SetTotal sets the value of Total.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) SetTotal(val float64) {
	s.Total = val
}

// SetDate sets the value of Date.
func (s *GetNodeUserUsageByRangeResponseDtoResponseItem) SetDate(val string) {
	s.Date = val
}

// Ref: #/components/schemas/GetNodesRealtimeUsageResponseDto
type GetNodesRealtimeUsageResponseDto struct {
	Response []GetNodesRealtimeUsageResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetNodesRealtimeUsageResponseDto) GetResponse() []GetNodesRealtimeUsageResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetNodesRealtimeUsageResponseDto) SetResponse(val []GetNodesRealtimeUsageResponseDtoResponseItem) {
	s.Response = val
}

type GetNodesRealtimeUsageResponseDtoResponseItem struct {
	NodeUuid         uuid.UUID `json:"nodeUuid"`
	NodeName         string    `json:"nodeName"`
	CountryCode      string    `json:"countryCode"`
	DownloadBytes    float64   `json:"downloadBytes"`
	UploadBytes      float64   `json:"uploadBytes"`
	TotalBytes       float64   `json:"totalBytes"`
	DownloadSpeedBps float64   `json:"downloadSpeedBps"`
	UploadSpeedBps   float64   `json:"uploadSpeedBps"`
	TotalSpeedBps    float64   `json:"totalSpeedBps"`
}

// GetNodeUuid returns the value of NodeUuid.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetNodeUuid() uuid.UUID {
	return s.NodeUuid
}

// GetNodeName returns the value of NodeName.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetNodeName() string {
	return s.NodeName
}

// GetCountryCode returns the value of CountryCode.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetCountryCode() string {
	return s.CountryCode
}

// GetDownloadBytes returns the value of DownloadBytes.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetDownloadBytes() float64 {
	return s.DownloadBytes
}

// GetUploadBytes returns the value of UploadBytes.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetUploadBytes() float64 {
	return s.UploadBytes
}

// GetTotalBytes returns the value of TotalBytes.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetTotalBytes() float64 {
	return s.TotalBytes
}

// GetDownloadSpeedBps returns the value of DownloadSpeedBps.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetDownloadSpeedBps() float64 {
	return s.DownloadSpeedBps
}

// GetUploadSpeedBps returns the value of UploadSpeedBps.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetUploadSpeedBps() float64 {
	return s.UploadSpeedBps
}

// GetTotalSpeedBps returns the value of TotalSpeedBps.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) GetTotalSpeedBps() float64 {
	return s.TotalSpeedBps
}

// SetNodeUuid sets the value of NodeUuid.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetNodeUuid(val uuid.UUID) {
	s.NodeUuid = val
}

// SetNodeName sets the value of NodeName.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetNodeName(val string) {
	s.NodeName = val
}

// SetCountryCode sets the value of CountryCode.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetDownloadBytes sets the value of DownloadBytes.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetDownloadBytes(val float64) {
	s.DownloadBytes = val
}

// SetUploadBytes sets the value of UploadBytes.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetUploadBytes(val float64) {
	s.UploadBytes = val
}

// SetTotalBytes sets the value of TotalBytes.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetTotalBytes(val float64) {
	s.TotalBytes = val
}

// SetDownloadSpeedBps sets the value of DownloadSpeedBps.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetDownloadSpeedBps(val float64) {
	s.DownloadSpeedBps = val
}

// SetUploadSpeedBps sets the value of UploadSpeedBps.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetUploadSpeedBps(val float64) {
	s.UploadSpeedBps = val
}

// SetTotalSpeedBps sets the value of TotalSpeedBps.
func (s *GetNodesRealtimeUsageResponseDtoResponseItem) SetTotalSpeedBps(val float64) {
	s.TotalSpeedBps = val
}

// Ref: #/components/schemas/GetNodesStatisticsResponseDto
type GetNodesStatisticsResponseDto struct {
	Response GetNodesStatisticsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetNodesStatisticsResponseDto) GetResponse() GetNodesStatisticsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetNodesStatisticsResponseDto) SetResponse(val GetNodesStatisticsResponseDtoResponse) {
	s.Response = val
}

type GetNodesStatisticsResponseDtoResponse struct {
	LastSevenDays []GetNodesStatisticsResponseDtoResponseLastSevenDaysItem `json:"lastSevenDays"`
}

// GetLastSevenDays returns the value of LastSevenDays.
func (s *GetNodesStatisticsResponseDtoResponse) GetLastSevenDays() []GetNodesStatisticsResponseDtoResponseLastSevenDaysItem {
	return s.LastSevenDays
}

// SetLastSevenDays sets the value of LastSevenDays.
func (s *GetNodesStatisticsResponseDtoResponse) SetLastSevenDays(val []GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) {
	s.LastSevenDays = val
}

type GetNodesStatisticsResponseDtoResponseLastSevenDaysItem struct {
	NodeName   string `json:"nodeName"`
	Date       string `json:"date"`
	TotalBytes string `json:"totalBytes"`
}

// GetNodeName returns the value of NodeName.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) GetNodeName() string {
	return s.NodeName
}

// GetDate returns the value of Date.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) GetDate() string {
	return s.Date
}

// GetTotalBytes returns the value of TotalBytes.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) GetTotalBytes() string {
	return s.TotalBytes
}

// SetNodeName sets the value of NodeName.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) SetNodeName(val string) {
	s.NodeName = val
}

// SetDate sets the value of Date.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) SetDate(val string) {
	s.Date = val
}

// SetTotalBytes sets the value of TotalBytes.
func (s *GetNodesStatisticsResponseDtoResponseLastSevenDaysItem) SetTotalBytes(val string) {
	s.TotalBytes = val
}

// Ref: #/components/schemas/GetNodesUsageByRangeResponseDto
type GetNodesUsageByRangeResponseDto struct {
	Response []GetNodesUsageByRangeResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetNodesUsageByRangeResponseDto) GetResponse() []GetNodesUsageByRangeResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetNodesUsageByRangeResponseDto) SetResponse(val []GetNodesUsageByRangeResponseDtoResponseItem) {
	s.Response = val
}

type GetNodesUsageByRangeResponseDtoResponseItem struct {
	NodeUuid                   uuid.UUID `json:"nodeUuid"`
	NodeName                   string    `json:"nodeName"`
	Total                      float64   `json:"total"`
	TotalDownload              float64   `json:"totalDownload"`
	TotalUpload                float64   `json:"totalUpload"`
	HumanReadableTotal         string    `json:"humanReadableTotal"`
	HumanReadableTotalDownload string    `json:"humanReadableTotalDownload"`
	HumanReadableTotalUpload   string    `json:"humanReadableTotalUpload"`
	Date                       string    `json:"date"`
}

// GetNodeUuid returns the value of NodeUuid.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetNodeUuid() uuid.UUID {
	return s.NodeUuid
}

// GetNodeName returns the value of NodeName.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetNodeName() string {
	return s.NodeName
}

// GetTotal returns the value of Total.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetTotal() float64 {
	return s.Total
}

// GetTotalDownload returns the value of TotalDownload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetTotalDownload() float64 {
	return s.TotalDownload
}

// GetTotalUpload returns the value of TotalUpload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetTotalUpload() float64 {
	return s.TotalUpload
}

// GetHumanReadableTotal returns the value of HumanReadableTotal.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetHumanReadableTotal() string {
	return s.HumanReadableTotal
}

// GetHumanReadableTotalDownload returns the value of HumanReadableTotalDownload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetHumanReadableTotalDownload() string {
	return s.HumanReadableTotalDownload
}

// GetHumanReadableTotalUpload returns the value of HumanReadableTotalUpload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetHumanReadableTotalUpload() string {
	return s.HumanReadableTotalUpload
}

// GetDate returns the value of Date.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) GetDate() string {
	return s.Date
}

// SetNodeUuid sets the value of NodeUuid.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetNodeUuid(val uuid.UUID) {
	s.NodeUuid = val
}

// SetNodeName sets the value of NodeName.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetNodeName(val string) {
	s.NodeName = val
}

// SetTotal sets the value of Total.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetTotal(val float64) {
	s.Total = val
}

// SetTotalDownload sets the value of TotalDownload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetTotalDownload(val float64) {
	s.TotalDownload = val
}

// SetTotalUpload sets the value of TotalUpload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetTotalUpload(val float64) {
	s.TotalUpload = val
}

// SetHumanReadableTotal sets the value of HumanReadableTotal.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetHumanReadableTotal(val string) {
	s.HumanReadableTotal = val
}

// SetHumanReadableTotalDownload sets the value of HumanReadableTotalDownload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetHumanReadableTotalDownload(val string) {
	s.HumanReadableTotalDownload = val
}

// SetHumanReadableTotalUpload sets the value of HumanReadableTotalUpload.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetHumanReadableTotalUpload(val string) {
	s.HumanReadableTotalUpload = val
}

// SetDate sets the value of Date.
func (s *GetNodesUsageByRangeResponseDtoResponseItem) SetDate(val string) {
	s.Date = val
}

// Ref: #/components/schemas/GetOneHostResponseDto
type GetOneHostResponseDto struct {
	Response GetOneHostResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetOneHostResponseDto) GetResponse() GetOneHostResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetOneHostResponseDto) SetResponse(val GetOneHostResponseDtoResponse) {
	s.Response = val
}

type GetOneHostResponseDtoResponse struct {
	UUID             uuid.UUID                                     `json:"uuid"`
	InboundUuid      uuid.UUID                                     `json:"inboundUuid"`
	ViewPosition     int                                           `json:"viewPosition"`
	Remark           string                                        `json:"remark"`
	Address          string                                        `json:"address"`
	Port             int                                           `json:"port"`
	Path             NilString                                     `json:"path"`
	Sni              NilString                                     `json:"sni"`
	Host             NilString                                     `json:"host"`
	Alpn             NilString                                     `json:"alpn"`
	Fingerprint      NilString                                     `json:"fingerprint"`
	AllowInsecure    OptBool                                       `json:"allowInsecure"`
	IsDisabled       OptBool                                       `json:"isDisabled"`
	SecurityLayer    OptGetOneHostResponseDtoResponseSecurityLayer `json:"securityLayer"`
	XHttpExtraParams jx.Raw                                        `json:"xHttpExtraParams"`
}

// GetUUID returns the value of UUID.
func (s *GetOneHostResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetInboundUuid returns the value of InboundUuid.
func (s *GetOneHostResponseDtoResponse) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// GetViewPosition returns the value of ViewPosition.
func (s *GetOneHostResponseDtoResponse) GetViewPosition() int {
	return s.ViewPosition
}

// GetRemark returns the value of Remark.
func (s *GetOneHostResponseDtoResponse) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *GetOneHostResponseDtoResponse) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *GetOneHostResponseDtoResponse) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *GetOneHostResponseDtoResponse) GetPath() NilString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *GetOneHostResponseDtoResponse) GetSni() NilString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *GetOneHostResponseDtoResponse) GetHost() NilString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *GetOneHostResponseDtoResponse) GetAlpn() NilString {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *GetOneHostResponseDtoResponse) GetFingerprint() NilString {
	return s.Fingerprint
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *GetOneHostResponseDtoResponse) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetIsDisabled returns the value of IsDisabled.
func (s *GetOneHostResponseDtoResponse) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *GetOneHostResponseDtoResponse) GetSecurityLayer() OptGetOneHostResponseDtoResponseSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *GetOneHostResponseDtoResponse) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// SetUUID sets the value of UUID.
func (s *GetOneHostResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetInboundUuid sets the value of InboundUuid.
func (s *GetOneHostResponseDtoResponse) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *GetOneHostResponseDtoResponse) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetRemark sets the value of Remark.
func (s *GetOneHostResponseDtoResponse) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *GetOneHostResponseDtoResponse) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *GetOneHostResponseDtoResponse) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *GetOneHostResponseDtoResponse) SetPath(val NilString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *GetOneHostResponseDtoResponse) SetSni(val NilString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *GetOneHostResponseDtoResponse) SetHost(val NilString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *GetOneHostResponseDtoResponse) SetAlpn(val NilString) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *GetOneHostResponseDtoResponse) SetFingerprint(val NilString) {
	s.Fingerprint = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *GetOneHostResponseDtoResponse) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *GetOneHostResponseDtoResponse) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *GetOneHostResponseDtoResponse) SetSecurityLayer(val OptGetOneHostResponseDtoResponseSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *GetOneHostResponseDtoResponse) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

type GetOneHostResponseDtoResponseSecurityLayer string

const (
	GetOneHostResponseDtoResponseSecurityLayerDEFAULT GetOneHostResponseDtoResponseSecurityLayer = "DEFAULT"
	GetOneHostResponseDtoResponseSecurityLayerTLS     GetOneHostResponseDtoResponseSecurityLayer = "TLS"
	GetOneHostResponseDtoResponseSecurityLayerNONE    GetOneHostResponseDtoResponseSecurityLayer = "NONE"
)

// AllValues returns all GetOneHostResponseDtoResponseSecurityLayer values.
func (GetOneHostResponseDtoResponseSecurityLayer) AllValues() []GetOneHostResponseDtoResponseSecurityLayer {
	return []GetOneHostResponseDtoResponseSecurityLayer{
		GetOneHostResponseDtoResponseSecurityLayerDEFAULT,
		GetOneHostResponseDtoResponseSecurityLayerTLS,
		GetOneHostResponseDtoResponseSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetOneHostResponseDtoResponseSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case GetOneHostResponseDtoResponseSecurityLayerDEFAULT:
		return []byte(s), nil
	case GetOneHostResponseDtoResponseSecurityLayerTLS:
		return []byte(s), nil
	case GetOneHostResponseDtoResponseSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetOneHostResponseDtoResponseSecurityLayer) UnmarshalText(data []byte) error {
	switch GetOneHostResponseDtoResponseSecurityLayer(data) {
	case GetOneHostResponseDtoResponseSecurityLayerDEFAULT:
		*s = GetOneHostResponseDtoResponseSecurityLayerDEFAULT
		return nil
	case GetOneHostResponseDtoResponseSecurityLayerTLS:
		*s = GetOneHostResponseDtoResponseSecurityLayerTLS
		return nil
	case GetOneHostResponseDtoResponseSecurityLayerNONE:
		*s = GetOneHostResponseDtoResponseSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetOneNodeResponseDto
type GetOneNodeResponseDto struct {
	Response GetOneNodeResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetOneNodeResponseDto) GetResponse() GetOneNodeResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetOneNodeResponseDto) SetResponse(val GetOneNodeResponseDtoResponse) {
	s.Response = val
}

type GetOneNodeResponseDtoResponse struct {
	UUID                    uuid.UUID                                           `json:"uuid"`
	Name                    string                                              `json:"name"`
	Address                 string                                              `json:"address"`
	Port                    NilInt                                              `json:"port"`
	IsConnected             bool                                                `json:"isConnected"`
	IsDisabled              bool                                                `json:"isDisabled"`
	IsConnecting            bool                                                `json:"isConnecting"`
	IsNodeOnline            bool                                                `json:"isNodeOnline"`
	IsXrayRunning           bool                                                `json:"isXrayRunning"`
	LastStatusChange        NilDateTime                                         `json:"lastStatusChange"`
	LastStatusMessage       NilString                                           `json:"lastStatusMessage"`
	XrayVersion             NilString                                           `json:"xrayVersion"`
	XrayUptime              string                                              `json:"xrayUptime"`
	IsTrafficTrackingActive bool                                                `json:"isTrafficTrackingActive"`
	TrafficResetDay         NilInt                                              `json:"trafficResetDay"`
	TrafficLimitBytes       NilFloat64                                          `json:"trafficLimitBytes"`
	TrafficUsedBytes        NilFloat64                                          `json:"trafficUsedBytes"`
	NotifyPercent           NilInt                                              `json:"notifyPercent"`
	UsersOnline             NilInt                                              `json:"usersOnline"`
	ViewPosition            int                                                 `json:"viewPosition"`
	CountryCode             string                                              `json:"countryCode"`
	ConsumptionMultiplier   float64                                             `json:"consumptionMultiplier"`
	CpuCount                NilInt                                              `json:"cpuCount"`
	CpuModel                NilString                                           `json:"cpuModel"`
	TotalRam                NilString                                           `json:"totalRam"`
	CreatedAt               time.Time                                           `json:"createdAt"`
	UpdatedAt               time.Time                                           `json:"updatedAt"`
	ExcludedInbounds        []GetOneNodeResponseDtoResponseExcludedInboundsItem `json:"excludedInbounds"`
}

// GetUUID returns the value of UUID.
func (s *GetOneNodeResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *GetOneNodeResponseDtoResponse) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *GetOneNodeResponseDtoResponse) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *GetOneNodeResponseDtoResponse) GetPort() NilInt {
	return s.Port
}

// GetIsConnected returns the value of IsConnected.
func (s *GetOneNodeResponseDtoResponse) GetIsConnected() bool {
	return s.IsConnected
}

// GetIsDisabled returns the value of IsDisabled.
func (s *GetOneNodeResponseDtoResponse) GetIsDisabled() bool {
	return s.IsDisabled
}

// GetIsConnecting returns the value of IsConnecting.
func (s *GetOneNodeResponseDtoResponse) GetIsConnecting() bool {
	return s.IsConnecting
}

// GetIsNodeOnline returns the value of IsNodeOnline.
func (s *GetOneNodeResponseDtoResponse) GetIsNodeOnline() bool {
	return s.IsNodeOnline
}

// GetIsXrayRunning returns the value of IsXrayRunning.
func (s *GetOneNodeResponseDtoResponse) GetIsXrayRunning() bool {
	return s.IsXrayRunning
}

// GetLastStatusChange returns the value of LastStatusChange.
func (s *GetOneNodeResponseDtoResponse) GetLastStatusChange() NilDateTime {
	return s.LastStatusChange
}

// GetLastStatusMessage returns the value of LastStatusMessage.
func (s *GetOneNodeResponseDtoResponse) GetLastStatusMessage() NilString {
	return s.LastStatusMessage
}

// GetXrayVersion returns the value of XrayVersion.
func (s *GetOneNodeResponseDtoResponse) GetXrayVersion() NilString {
	return s.XrayVersion
}

// GetXrayUptime returns the value of XrayUptime.
func (s *GetOneNodeResponseDtoResponse) GetXrayUptime() string {
	return s.XrayUptime
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *GetOneNodeResponseDtoResponse) GetIsTrafficTrackingActive() bool {
	return s.IsTrafficTrackingActive
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *GetOneNodeResponseDtoResponse) GetTrafficResetDay() NilInt {
	return s.TrafficResetDay
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *GetOneNodeResponseDtoResponse) GetTrafficLimitBytes() NilFloat64 {
	return s.TrafficLimitBytes
}

// GetTrafficUsedBytes returns the value of TrafficUsedBytes.
func (s *GetOneNodeResponseDtoResponse) GetTrafficUsedBytes() NilFloat64 {
	return s.TrafficUsedBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *GetOneNodeResponseDtoResponse) GetNotifyPercent() NilInt {
	return s.NotifyPercent
}

// GetUsersOnline returns the value of UsersOnline.
func (s *GetOneNodeResponseDtoResponse) GetUsersOnline() NilInt {
	return s.UsersOnline
}

// GetViewPosition returns the value of ViewPosition.
func (s *GetOneNodeResponseDtoResponse) GetViewPosition() int {
	return s.ViewPosition
}

// GetCountryCode returns the value of CountryCode.
func (s *GetOneNodeResponseDtoResponse) GetCountryCode() string {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *GetOneNodeResponseDtoResponse) GetConsumptionMultiplier() float64 {
	return s.ConsumptionMultiplier
}

// GetCpuCount returns the value of CpuCount.
func (s *GetOneNodeResponseDtoResponse) GetCpuCount() NilInt {
	return s.CpuCount
}

// GetCpuModel returns the value of CpuModel.
func (s *GetOneNodeResponseDtoResponse) GetCpuModel() NilString {
	return s.CpuModel
}

// GetTotalRam returns the value of TotalRam.
func (s *GetOneNodeResponseDtoResponse) GetTotalRam() NilString {
	return s.TotalRam
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetOneNodeResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetOneNodeResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetExcludedInbounds returns the value of ExcludedInbounds.
func (s *GetOneNodeResponseDtoResponse) GetExcludedInbounds() []GetOneNodeResponseDtoResponseExcludedInboundsItem {
	return s.ExcludedInbounds
}

// SetUUID sets the value of UUID.
func (s *GetOneNodeResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *GetOneNodeResponseDtoResponse) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *GetOneNodeResponseDtoResponse) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *GetOneNodeResponseDtoResponse) SetPort(val NilInt) {
	s.Port = val
}

// SetIsConnected sets the value of IsConnected.
func (s *GetOneNodeResponseDtoResponse) SetIsConnected(val bool) {
	s.IsConnected = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *GetOneNodeResponseDtoResponse) SetIsDisabled(val bool) {
	s.IsDisabled = val
}

// SetIsConnecting sets the value of IsConnecting.
func (s *GetOneNodeResponseDtoResponse) SetIsConnecting(val bool) {
	s.IsConnecting = val
}

// SetIsNodeOnline sets the value of IsNodeOnline.
func (s *GetOneNodeResponseDtoResponse) SetIsNodeOnline(val bool) {
	s.IsNodeOnline = val
}

// SetIsXrayRunning sets the value of IsXrayRunning.
func (s *GetOneNodeResponseDtoResponse) SetIsXrayRunning(val bool) {
	s.IsXrayRunning = val
}

// SetLastStatusChange sets the value of LastStatusChange.
func (s *GetOneNodeResponseDtoResponse) SetLastStatusChange(val NilDateTime) {
	s.LastStatusChange = val
}

// SetLastStatusMessage sets the value of LastStatusMessage.
func (s *GetOneNodeResponseDtoResponse) SetLastStatusMessage(val NilString) {
	s.LastStatusMessage = val
}

// SetXrayVersion sets the value of XrayVersion.
func (s *GetOneNodeResponseDtoResponse) SetXrayVersion(val NilString) {
	s.XrayVersion = val
}

// SetXrayUptime sets the value of XrayUptime.
func (s *GetOneNodeResponseDtoResponse) SetXrayUptime(val string) {
	s.XrayUptime = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *GetOneNodeResponseDtoResponse) SetIsTrafficTrackingActive(val bool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *GetOneNodeResponseDtoResponse) SetTrafficResetDay(val NilInt) {
	s.TrafficResetDay = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *GetOneNodeResponseDtoResponse) SetTrafficLimitBytes(val NilFloat64) {
	s.TrafficLimitBytes = val
}

// SetTrafficUsedBytes sets the value of TrafficUsedBytes.
func (s *GetOneNodeResponseDtoResponse) SetTrafficUsedBytes(val NilFloat64) {
	s.TrafficUsedBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *GetOneNodeResponseDtoResponse) SetNotifyPercent(val NilInt) {
	s.NotifyPercent = val
}

// SetUsersOnline sets the value of UsersOnline.
func (s *GetOneNodeResponseDtoResponse) SetUsersOnline(val NilInt) {
	s.UsersOnline = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *GetOneNodeResponseDtoResponse) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetCountryCode sets the value of CountryCode.
func (s *GetOneNodeResponseDtoResponse) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *GetOneNodeResponseDtoResponse) SetConsumptionMultiplier(val float64) {
	s.ConsumptionMultiplier = val
}

// SetCpuCount sets the value of CpuCount.
func (s *GetOneNodeResponseDtoResponse) SetCpuCount(val NilInt) {
	s.CpuCount = val
}

// SetCpuModel sets the value of CpuModel.
func (s *GetOneNodeResponseDtoResponse) SetCpuModel(val NilString) {
	s.CpuModel = val
}

// SetTotalRam sets the value of TotalRam.
func (s *GetOneNodeResponseDtoResponse) SetTotalRam(val NilString) {
	s.TotalRam = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetOneNodeResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetOneNodeResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetExcludedInbounds sets the value of ExcludedInbounds.
func (s *GetOneNodeResponseDtoResponse) SetExcludedInbounds(val []GetOneNodeResponseDtoResponseExcludedInboundsItem) {
	s.ExcludedInbounds = val
}

type GetOneNodeResponseDtoResponseExcludedInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *GetOneNodeResponseDtoResponseExcludedInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *GetOneNodeResponseDtoResponseExcludedInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *GetOneNodeResponseDtoResponseExcludedInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *GetOneNodeResponseDtoResponseExcludedInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *GetOneNodeResponseDtoResponseExcludedInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *GetOneNodeResponseDtoResponseExcludedInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *GetOneNodeResponseDtoResponseExcludedInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *GetOneNodeResponseDtoResponseExcludedInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *GetOneNodeResponseDtoResponseExcludedInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *GetOneNodeResponseDtoResponseExcludedInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// Ref: #/components/schemas/GetPubKeyResponseDto
type GetPubKeyResponseDto struct {
	Response GetPubKeyResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetPubKeyResponseDto) GetResponse() GetPubKeyResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetPubKeyResponseDto) SetResponse(val GetPubKeyResponseDtoResponse) {
	s.Response = val
}

type GetPubKeyResponseDtoResponse struct {
	PubKey string `json:"pubKey"`
}

// GetPubKey returns the value of PubKey.
func (s *GetPubKeyResponseDtoResponse) GetPubKey() string {
	return s.PubKey
}

// SetPubKey sets the value of PubKey.
func (s *GetPubKeyResponseDtoResponse) SetPubKey(val string) {
	s.PubKey = val
}

// Ref: #/components/schemas/GetStatsResponseDto
type GetStatsResponseDto struct {
	Response GetStatsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetStatsResponseDto) GetResponse() GetStatsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetStatsResponseDto) SetResponse(val GetStatsResponseDtoResponse) {
	s.Response = val
}

type GetStatsResponseDtoResponse struct {
	CPU         GetStatsResponseDtoResponseCPU         `json:"cpu"`
	Memory      GetStatsResponseDtoResponseMemory      `json:"memory"`
	Uptime      float64                                `json:"uptime"`
	Timestamp   float64                                `json:"timestamp"`
	Users       GetStatsResponseDtoResponseUsers       `json:"users"`
	OnlineStats GetStatsResponseDtoResponseOnlineStats `json:"onlineStats"`
}

// GetCPU returns the value of CPU.
func (s *GetStatsResponseDtoResponse) GetCPU() GetStatsResponseDtoResponseCPU {
	return s.CPU
}

// GetMemory returns the value of Memory.
func (s *GetStatsResponseDtoResponse) GetMemory() GetStatsResponseDtoResponseMemory {
	return s.Memory
}

// GetUptime returns the value of Uptime.
func (s *GetStatsResponseDtoResponse) GetUptime() float64 {
	return s.Uptime
}

// GetTimestamp returns the value of Timestamp.
func (s *GetStatsResponseDtoResponse) GetTimestamp() float64 {
	return s.Timestamp
}

// GetUsers returns the value of Users.
func (s *GetStatsResponseDtoResponse) GetUsers() GetStatsResponseDtoResponseUsers {
	return s.Users
}

// GetOnlineStats returns the value of OnlineStats.
func (s *GetStatsResponseDtoResponse) GetOnlineStats() GetStatsResponseDtoResponseOnlineStats {
	return s.OnlineStats
}

// SetCPU sets the value of CPU.
func (s *GetStatsResponseDtoResponse) SetCPU(val GetStatsResponseDtoResponseCPU) {
	s.CPU = val
}

// SetMemory sets the value of Memory.
func (s *GetStatsResponseDtoResponse) SetMemory(val GetStatsResponseDtoResponseMemory) {
	s.Memory = val
}

// SetUptime sets the value of Uptime.
func (s *GetStatsResponseDtoResponse) SetUptime(val float64) {
	s.Uptime = val
}

// SetTimestamp sets the value of Timestamp.
func (s *GetStatsResponseDtoResponse) SetTimestamp(val float64) {
	s.Timestamp = val
}

// SetUsers sets the value of Users.
func (s *GetStatsResponseDtoResponse) SetUsers(val GetStatsResponseDtoResponseUsers) {
	s.Users = val
}

// SetOnlineStats sets the value of OnlineStats.
func (s *GetStatsResponseDtoResponse) SetOnlineStats(val GetStatsResponseDtoResponseOnlineStats) {
	s.OnlineStats = val
}

type GetStatsResponseDtoResponseCPU struct {
	Cores         float64 `json:"cores"`
	PhysicalCores float64 `json:"physicalCores"`
}

// GetCores returns the value of Cores.
func (s *GetStatsResponseDtoResponseCPU) GetCores() float64 {
	return s.Cores
}

// GetPhysicalCores returns the value of PhysicalCores.
func (s *GetStatsResponseDtoResponseCPU) GetPhysicalCores() float64 {
	return s.PhysicalCores
}

// SetCores sets the value of Cores.
func (s *GetStatsResponseDtoResponseCPU) SetCores(val float64) {
	s.Cores = val
}

// SetPhysicalCores sets the value of PhysicalCores.
func (s *GetStatsResponseDtoResponseCPU) SetPhysicalCores(val float64) {
	s.PhysicalCores = val
}

type GetStatsResponseDtoResponseMemory struct {
	Total     float64 `json:"total"`
	Free      float64 `json:"free"`
	Used      float64 `json:"used"`
	Active    float64 `json:"active"`
	Available float64 `json:"available"`
}

// GetTotal returns the value of Total.
func (s *GetStatsResponseDtoResponseMemory) GetTotal() float64 {
	return s.Total
}

// GetFree returns the value of Free.
func (s *GetStatsResponseDtoResponseMemory) GetFree() float64 {
	return s.Free
}

// GetUsed returns the value of Used.
func (s *GetStatsResponseDtoResponseMemory) GetUsed() float64 {
	return s.Used
}

// GetActive returns the value of Active.
func (s *GetStatsResponseDtoResponseMemory) GetActive() float64 {
	return s.Active
}

// GetAvailable returns the value of Available.
func (s *GetStatsResponseDtoResponseMemory) GetAvailable() float64 {
	return s.Available
}

// SetTotal sets the value of Total.
func (s *GetStatsResponseDtoResponseMemory) SetTotal(val float64) {
	s.Total = val
}

// SetFree sets the value of Free.
func (s *GetStatsResponseDtoResponseMemory) SetFree(val float64) {
	s.Free = val
}

// SetUsed sets the value of Used.
func (s *GetStatsResponseDtoResponseMemory) SetUsed(val float64) {
	s.Used = val
}

// SetActive sets the value of Active.
func (s *GetStatsResponseDtoResponseMemory) SetActive(val float64) {
	s.Active = val
}

// SetAvailable sets the value of Available.
func (s *GetStatsResponseDtoResponseMemory) SetAvailable(val float64) {
	s.Available = val
}

type GetStatsResponseDtoResponseOnlineStats struct {
	LastDay     float64 `json:"lastDay"`
	LastWeek    float64 `json:"lastWeek"`
	NeverOnline float64 `json:"neverOnline"`
	OnlineNow   float64 `json:"onlineNow"`
}

// GetLastDay returns the value of LastDay.
func (s *GetStatsResponseDtoResponseOnlineStats) GetLastDay() float64 {
	return s.LastDay
}

// GetLastWeek returns the value of LastWeek.
func (s *GetStatsResponseDtoResponseOnlineStats) GetLastWeek() float64 {
	return s.LastWeek
}

// GetNeverOnline returns the value of NeverOnline.
func (s *GetStatsResponseDtoResponseOnlineStats) GetNeverOnline() float64 {
	return s.NeverOnline
}

// GetOnlineNow returns the value of OnlineNow.
func (s *GetStatsResponseDtoResponseOnlineStats) GetOnlineNow() float64 {
	return s.OnlineNow
}

// SetLastDay sets the value of LastDay.
func (s *GetStatsResponseDtoResponseOnlineStats) SetLastDay(val float64) {
	s.LastDay = val
}

// SetLastWeek sets the value of LastWeek.
func (s *GetStatsResponseDtoResponseOnlineStats) SetLastWeek(val float64) {
	s.LastWeek = val
}

// SetNeverOnline sets the value of NeverOnline.
func (s *GetStatsResponseDtoResponseOnlineStats) SetNeverOnline(val float64) {
	s.NeverOnline = val
}

// SetOnlineNow sets the value of OnlineNow.
func (s *GetStatsResponseDtoResponseOnlineStats) SetOnlineNow(val float64) {
	s.OnlineNow = val
}

type GetStatsResponseDtoResponseUsers struct {
	StatusCounts      GetStatsResponseDtoResponseUsersStatusCounts `json:"statusCounts"`
	TotalUsers        float64                                      `json:"totalUsers"`
	TotalTrafficBytes string                                       `json:"totalTrafficBytes"`
}

// GetStatusCounts returns the value of StatusCounts.
func (s *GetStatsResponseDtoResponseUsers) GetStatusCounts() GetStatsResponseDtoResponseUsersStatusCounts {
	return s.StatusCounts
}

// GetTotalUsers returns the value of TotalUsers.
func (s *GetStatsResponseDtoResponseUsers) GetTotalUsers() float64 {
	return s.TotalUsers
}

// GetTotalTrafficBytes returns the value of TotalTrafficBytes.
func (s *GetStatsResponseDtoResponseUsers) GetTotalTrafficBytes() string {
	return s.TotalTrafficBytes
}

// SetStatusCounts sets the value of StatusCounts.
func (s *GetStatsResponseDtoResponseUsers) SetStatusCounts(val GetStatsResponseDtoResponseUsersStatusCounts) {
	s.StatusCounts = val
}

// SetTotalUsers sets the value of TotalUsers.
func (s *GetStatsResponseDtoResponseUsers) SetTotalUsers(val float64) {
	s.TotalUsers = val
}

// SetTotalTrafficBytes sets the value of TotalTrafficBytes.
func (s *GetStatsResponseDtoResponseUsers) SetTotalTrafficBytes(val string) {
	s.TotalTrafficBytes = val
}

type GetStatsResponseDtoResponseUsersStatusCounts map[string]float64

func (s *GetStatsResponseDtoResponseUsersStatusCounts) init() GetStatsResponseDtoResponseUsersStatusCounts {
	m := *s
	if m == nil {
		m = map[string]float64{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/GetStatusResponseDto
type GetStatusResponseDto struct {
	Response GetStatusResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetStatusResponseDto) GetResponse() GetStatusResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetStatusResponseDto) SetResponse(val GetStatusResponseDtoResponse) {
	s.Response = val
}

type GetStatusResponseDtoResponse struct {
	IsLoginAllowed    bool                                  `json:"isLoginAllowed"`
	IsRegisterAllowed bool                                  `json:"isRegisterAllowed"`
	TgAuth            NilGetStatusResponseDtoResponseTgAuth `json:"tgAuth"`
}

// GetIsLoginAllowed returns the value of IsLoginAllowed.
func (s *GetStatusResponseDtoResponse) GetIsLoginAllowed() bool {
	return s.IsLoginAllowed
}

// GetIsRegisterAllowed returns the value of IsRegisterAllowed.
func (s *GetStatusResponseDtoResponse) GetIsRegisterAllowed() bool {
	return s.IsRegisterAllowed
}

// GetTgAuth returns the value of TgAuth.
func (s *GetStatusResponseDtoResponse) GetTgAuth() NilGetStatusResponseDtoResponseTgAuth {
	return s.TgAuth
}

// SetIsLoginAllowed sets the value of IsLoginAllowed.
func (s *GetStatusResponseDtoResponse) SetIsLoginAllowed(val bool) {
	s.IsLoginAllowed = val
}

// SetIsRegisterAllowed sets the value of IsRegisterAllowed.
func (s *GetStatusResponseDtoResponse) SetIsRegisterAllowed(val bool) {
	s.IsRegisterAllowed = val
}

// SetTgAuth sets the value of TgAuth.
func (s *GetStatusResponseDtoResponse) SetTgAuth(val NilGetStatusResponseDtoResponseTgAuth) {
	s.TgAuth = val
}

type GetStatusResponseDtoResponseTgAuth struct {
	BotId float64 `json:"botId"`
}

// GetBotId returns the value of BotId.
func (s *GetStatusResponseDtoResponseTgAuth) GetBotId() float64 {
	return s.BotId
}

// SetBotId sets the value of BotId.
func (s *GetStatusResponseDtoResponseTgAuth) SetBotId(val float64) {
	s.BotId = val
}

// GetStatusResponseDtoStatusCode wraps GetStatusResponseDto with StatusCode.
type GetStatusResponseDtoStatusCode struct {
	StatusCode int
	Response   GetStatusResponseDto
}

// GetStatusCode returns the value of StatusCode.
func (s *GetStatusResponseDtoStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *GetStatusResponseDtoStatusCode) GetResponse() GetStatusResponseDto {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *GetStatusResponseDtoStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *GetStatusResponseDtoStatusCode) SetResponse(val GetStatusResponseDto) {
	s.Response = val
}

// Ref: #/components/schemas/GetSubscriptionByUsernameResponseDto
type GetSubscriptionByUsernameResponseDto struct {
	Response GetSubscriptionByUsernameResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetSubscriptionByUsernameResponseDto) GetResponse() GetSubscriptionByUsernameResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetSubscriptionByUsernameResponseDto) SetResponse(val GetSubscriptionByUsernameResponseDtoResponse) {
	s.Response = val
}

func (*GetSubscriptionByUsernameResponseDto) subscriptionsControllerGetSubscriptionByUsernameRes() {}

type GetSubscriptionByUsernameResponseDtoResponse struct {
	IsFound         bool                                                    `json:"isFound"`
	User            GetSubscriptionByUsernameResponseDtoResponseUser        `json:"user"`
	Links           []string                                                `json:"links"`
	SsConfLinks     GetSubscriptionByUsernameResponseDtoResponseSsConfLinks `json:"ssConfLinks"`
	SubscriptionUrl string                                                  `json:"subscriptionUrl"`
}

// GetIsFound returns the value of IsFound.
func (s *GetSubscriptionByUsernameResponseDtoResponse) GetIsFound() bool {
	return s.IsFound
}

// GetUser returns the value of User.
func (s *GetSubscriptionByUsernameResponseDtoResponse) GetUser() GetSubscriptionByUsernameResponseDtoResponseUser {
	return s.User
}

// GetLinks returns the value of Links.
func (s *GetSubscriptionByUsernameResponseDtoResponse) GetLinks() []string {
	return s.Links
}

// GetSsConfLinks returns the value of SsConfLinks.
func (s *GetSubscriptionByUsernameResponseDtoResponse) GetSsConfLinks() GetSubscriptionByUsernameResponseDtoResponseSsConfLinks {
	return s.SsConfLinks
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *GetSubscriptionByUsernameResponseDtoResponse) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// SetIsFound sets the value of IsFound.
func (s *GetSubscriptionByUsernameResponseDtoResponse) SetIsFound(val bool) {
	s.IsFound = val
}

// SetUser sets the value of User.
func (s *GetSubscriptionByUsernameResponseDtoResponse) SetUser(val GetSubscriptionByUsernameResponseDtoResponseUser) {
	s.User = val
}

// SetLinks sets the value of Links.
func (s *GetSubscriptionByUsernameResponseDtoResponse) SetLinks(val []string) {
	s.Links = val
}

// SetSsConfLinks sets the value of SsConfLinks.
func (s *GetSubscriptionByUsernameResponseDtoResponse) SetSsConfLinks(val GetSubscriptionByUsernameResponseDtoResponseSsConfLinks) {
	s.SsConfLinks = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *GetSubscriptionByUsernameResponseDtoResponse) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

type GetSubscriptionByUsernameResponseDtoResponseSsConfLinks map[string]string

func (s *GetSubscriptionByUsernameResponseDtoResponseSsConfLinks) init() GetSubscriptionByUsernameResponseDtoResponseSsConfLinks {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type GetSubscriptionByUsernameResponseDtoResponseUser struct {
	ShortUuid            string                                                               `json:"shortUuid"`
	DaysLeft             float64                                                              `json:"daysLeft"`
	TrafficUsed          string                                                               `json:"trafficUsed"`
	TrafficLimit         string                                                               `json:"trafficLimit"`
	Username             string                                                               `json:"username"`
	ExpiresAt            time.Time                                                            `json:"expiresAt"`
	IsActive             bool                                                                 `json:"isActive"`
	UserStatus           GetSubscriptionByUsernameResponseDtoResponseUserUserStatus           `json:"userStatus"`
	TrafficLimitStrategy GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy `json:"trafficLimitStrategy"`
}

// GetShortUuid returns the value of ShortUuid.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) GetShortUuid() string {
	return s.ShortUuid
}

// GetDaysLeft returns the value of DaysLeft.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) GetDaysLeft() float64 {
	return s.DaysLeft
}

// GetTrafficUsed returns the value of TrafficUsed.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) GetTrafficUsed() string {
	return s.TrafficUsed
}

// GetTrafficLimit returns the value of TrafficLimit.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) GetTrafficLimit() string {
	return s.TrafficLimit
}

// GetUsername returns the value of Username.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) GetUsername() string {
	return s.Username
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) GetExpiresAt() time.Time {
	return s.ExpiresAt
}

// GetIsActive returns the value of IsActive.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) GetIsActive() bool {
	return s.IsActive
}

// GetUserStatus returns the value of UserStatus.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) GetUserStatus() GetSubscriptionByUsernameResponseDtoResponseUserUserStatus {
	return s.UserStatus
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) GetTrafficLimitStrategy() GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// SetShortUuid sets the value of ShortUuid.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetDaysLeft sets the value of DaysLeft.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) SetDaysLeft(val float64) {
	s.DaysLeft = val
}

// SetTrafficUsed sets the value of TrafficUsed.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) SetTrafficUsed(val string) {
	s.TrafficUsed = val
}

// SetTrafficLimit sets the value of TrafficLimit.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) SetTrafficLimit(val string) {
	s.TrafficLimit = val
}

// SetUsername sets the value of Username.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) SetUsername(val string) {
	s.Username = val
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) SetExpiresAt(val time.Time) {
	s.ExpiresAt = val
}

// SetIsActive sets the value of IsActive.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) SetIsActive(val bool) {
	s.IsActive = val
}

// SetUserStatus sets the value of UserStatus.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) SetUserStatus(val GetSubscriptionByUsernameResponseDtoResponseUserUserStatus) {
	s.UserStatus = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *GetSubscriptionByUsernameResponseDtoResponseUser) SetTrafficLimitStrategy(val GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

type GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy string

const (
	GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyNORESET GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy = "NO_RESET"
	GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyDAY     GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy = "DAY"
	GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyWEEK    GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy = "WEEK"
	GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyMONTH   GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy = "MONTH"
)

// AllValues returns all GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy values.
func (GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy) AllValues() []GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy {
	return []GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy{
		GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyNORESET,
		GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyDAY,
		GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyWEEK,
		GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyDAY:
		return []byte(s), nil
	case GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategy(data) {
	case GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyNORESET:
		*s = GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyNORESET
		return nil
	case GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyDAY:
		*s = GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyDAY
		return nil
	case GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyWEEK:
		*s = GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyWEEK
		return nil
	case GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyMONTH:
		*s = GetSubscriptionByUsernameResponseDtoResponseUserTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetSubscriptionByUsernameResponseDtoResponseUserUserStatus string

const (
	GetSubscriptionByUsernameResponseDtoResponseUserUserStatusACTIVE   GetSubscriptionByUsernameResponseDtoResponseUserUserStatus = "ACTIVE"
	GetSubscriptionByUsernameResponseDtoResponseUserUserStatusDISABLED GetSubscriptionByUsernameResponseDtoResponseUserUserStatus = "DISABLED"
	GetSubscriptionByUsernameResponseDtoResponseUserUserStatusLIMITED  GetSubscriptionByUsernameResponseDtoResponseUserUserStatus = "LIMITED"
	GetSubscriptionByUsernameResponseDtoResponseUserUserStatusEXPIRED  GetSubscriptionByUsernameResponseDtoResponseUserUserStatus = "EXPIRED"
)

// AllValues returns all GetSubscriptionByUsernameResponseDtoResponseUserUserStatus values.
func (GetSubscriptionByUsernameResponseDtoResponseUserUserStatus) AllValues() []GetSubscriptionByUsernameResponseDtoResponseUserUserStatus {
	return []GetSubscriptionByUsernameResponseDtoResponseUserUserStatus{
		GetSubscriptionByUsernameResponseDtoResponseUserUserStatusACTIVE,
		GetSubscriptionByUsernameResponseDtoResponseUserUserStatusDISABLED,
		GetSubscriptionByUsernameResponseDtoResponseUserUserStatusLIMITED,
		GetSubscriptionByUsernameResponseDtoResponseUserUserStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetSubscriptionByUsernameResponseDtoResponseUserUserStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetSubscriptionByUsernameResponseDtoResponseUserUserStatusACTIVE:
		return []byte(s), nil
	case GetSubscriptionByUsernameResponseDtoResponseUserUserStatusDISABLED:
		return []byte(s), nil
	case GetSubscriptionByUsernameResponseDtoResponseUserUserStatusLIMITED:
		return []byte(s), nil
	case GetSubscriptionByUsernameResponseDtoResponseUserUserStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetSubscriptionByUsernameResponseDtoResponseUserUserStatus) UnmarshalText(data []byte) error {
	switch GetSubscriptionByUsernameResponseDtoResponseUserUserStatus(data) {
	case GetSubscriptionByUsernameResponseDtoResponseUserUserStatusACTIVE:
		*s = GetSubscriptionByUsernameResponseDtoResponseUserUserStatusACTIVE
		return nil
	case GetSubscriptionByUsernameResponseDtoResponseUserUserStatusDISABLED:
		*s = GetSubscriptionByUsernameResponseDtoResponseUserUserStatusDISABLED
		return nil
	case GetSubscriptionByUsernameResponseDtoResponseUserUserStatusLIMITED:
		*s = GetSubscriptionByUsernameResponseDtoResponseUserUserStatusLIMITED
		return nil
	case GetSubscriptionByUsernameResponseDtoResponseUserUserStatusEXPIRED:
		*s = GetSubscriptionByUsernameResponseDtoResponseUserUserStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetSubscriptionInfoResponseDto
type GetSubscriptionInfoResponseDto struct {
	Response GetSubscriptionInfoResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetSubscriptionInfoResponseDto) GetResponse() GetSubscriptionInfoResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetSubscriptionInfoResponseDto) SetResponse(val GetSubscriptionInfoResponseDtoResponse) {
	s.Response = val
}

type GetSubscriptionInfoResponseDtoResponse struct {
	IsFound         bool                                              `json:"isFound"`
	User            GetSubscriptionInfoResponseDtoResponseUser        `json:"user"`
	Links           []string                                          `json:"links"`
	SsConfLinks     GetSubscriptionInfoResponseDtoResponseSsConfLinks `json:"ssConfLinks"`
	SubscriptionUrl string                                            `json:"subscriptionUrl"`
}

// GetIsFound returns the value of IsFound.
func (s *GetSubscriptionInfoResponseDtoResponse) GetIsFound() bool {
	return s.IsFound
}

// GetUser returns the value of User.
func (s *GetSubscriptionInfoResponseDtoResponse) GetUser() GetSubscriptionInfoResponseDtoResponseUser {
	return s.User
}

// GetLinks returns the value of Links.
func (s *GetSubscriptionInfoResponseDtoResponse) GetLinks() []string {
	return s.Links
}

// GetSsConfLinks returns the value of SsConfLinks.
func (s *GetSubscriptionInfoResponseDtoResponse) GetSsConfLinks() GetSubscriptionInfoResponseDtoResponseSsConfLinks {
	return s.SsConfLinks
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *GetSubscriptionInfoResponseDtoResponse) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// SetIsFound sets the value of IsFound.
func (s *GetSubscriptionInfoResponseDtoResponse) SetIsFound(val bool) {
	s.IsFound = val
}

// SetUser sets the value of User.
func (s *GetSubscriptionInfoResponseDtoResponse) SetUser(val GetSubscriptionInfoResponseDtoResponseUser) {
	s.User = val
}

// SetLinks sets the value of Links.
func (s *GetSubscriptionInfoResponseDtoResponse) SetLinks(val []string) {
	s.Links = val
}

// SetSsConfLinks sets the value of SsConfLinks.
func (s *GetSubscriptionInfoResponseDtoResponse) SetSsConfLinks(val GetSubscriptionInfoResponseDtoResponseSsConfLinks) {
	s.SsConfLinks = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *GetSubscriptionInfoResponseDtoResponse) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

type GetSubscriptionInfoResponseDtoResponseSsConfLinks map[string]string

func (s *GetSubscriptionInfoResponseDtoResponseSsConfLinks) init() GetSubscriptionInfoResponseDtoResponseSsConfLinks {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type GetSubscriptionInfoResponseDtoResponseUser struct {
	ShortUuid            string                                                         `json:"shortUuid"`
	DaysLeft             float64                                                        `json:"daysLeft"`
	TrafficUsed          string                                                         `json:"trafficUsed"`
	TrafficLimit         string                                                         `json:"trafficLimit"`
	Username             string                                                         `json:"username"`
	ExpiresAt            time.Time                                                      `json:"expiresAt"`
	IsActive             bool                                                           `json:"isActive"`
	UserStatus           GetSubscriptionInfoResponseDtoResponseUserUserStatus           `json:"userStatus"`
	TrafficLimitStrategy GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy `json:"trafficLimitStrategy"`
}

// GetShortUuid returns the value of ShortUuid.
func (s *GetSubscriptionInfoResponseDtoResponseUser) GetShortUuid() string {
	return s.ShortUuid
}

// GetDaysLeft returns the value of DaysLeft.
func (s *GetSubscriptionInfoResponseDtoResponseUser) GetDaysLeft() float64 {
	return s.DaysLeft
}

// GetTrafficUsed returns the value of TrafficUsed.
func (s *GetSubscriptionInfoResponseDtoResponseUser) GetTrafficUsed() string {
	return s.TrafficUsed
}

// GetTrafficLimit returns the value of TrafficLimit.
func (s *GetSubscriptionInfoResponseDtoResponseUser) GetTrafficLimit() string {
	return s.TrafficLimit
}

// GetUsername returns the value of Username.
func (s *GetSubscriptionInfoResponseDtoResponseUser) GetUsername() string {
	return s.Username
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *GetSubscriptionInfoResponseDtoResponseUser) GetExpiresAt() time.Time {
	return s.ExpiresAt
}

// GetIsActive returns the value of IsActive.
func (s *GetSubscriptionInfoResponseDtoResponseUser) GetIsActive() bool {
	return s.IsActive
}

// GetUserStatus returns the value of UserStatus.
func (s *GetSubscriptionInfoResponseDtoResponseUser) GetUserStatus() GetSubscriptionInfoResponseDtoResponseUserUserStatus {
	return s.UserStatus
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *GetSubscriptionInfoResponseDtoResponseUser) GetTrafficLimitStrategy() GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// SetShortUuid sets the value of ShortUuid.
func (s *GetSubscriptionInfoResponseDtoResponseUser) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetDaysLeft sets the value of DaysLeft.
func (s *GetSubscriptionInfoResponseDtoResponseUser) SetDaysLeft(val float64) {
	s.DaysLeft = val
}

// SetTrafficUsed sets the value of TrafficUsed.
func (s *GetSubscriptionInfoResponseDtoResponseUser) SetTrafficUsed(val string) {
	s.TrafficUsed = val
}

// SetTrafficLimit sets the value of TrafficLimit.
func (s *GetSubscriptionInfoResponseDtoResponseUser) SetTrafficLimit(val string) {
	s.TrafficLimit = val
}

// SetUsername sets the value of Username.
func (s *GetSubscriptionInfoResponseDtoResponseUser) SetUsername(val string) {
	s.Username = val
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *GetSubscriptionInfoResponseDtoResponseUser) SetExpiresAt(val time.Time) {
	s.ExpiresAt = val
}

// SetIsActive sets the value of IsActive.
func (s *GetSubscriptionInfoResponseDtoResponseUser) SetIsActive(val bool) {
	s.IsActive = val
}

// SetUserStatus sets the value of UserStatus.
func (s *GetSubscriptionInfoResponseDtoResponseUser) SetUserStatus(val GetSubscriptionInfoResponseDtoResponseUserUserStatus) {
	s.UserStatus = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *GetSubscriptionInfoResponseDtoResponseUser) SetTrafficLimitStrategy(val GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

type GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy string

const (
	GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyNORESET GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy = "NO_RESET"
	GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyDAY     GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy = "DAY"
	GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyWEEK    GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy = "WEEK"
	GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyMONTH   GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy = "MONTH"
)

// AllValues returns all GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy values.
func (GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy) AllValues() []GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy {
	return []GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy{
		GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyNORESET,
		GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyDAY,
		GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyWEEK,
		GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyDAY:
		return []byte(s), nil
	case GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategy(data) {
	case GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyNORESET:
		*s = GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyNORESET
		return nil
	case GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyDAY:
		*s = GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyDAY
		return nil
	case GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyWEEK:
		*s = GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyWEEK
		return nil
	case GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyMONTH:
		*s = GetSubscriptionInfoResponseDtoResponseUserTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetSubscriptionInfoResponseDtoResponseUserUserStatus string

const (
	GetSubscriptionInfoResponseDtoResponseUserUserStatusACTIVE   GetSubscriptionInfoResponseDtoResponseUserUserStatus = "ACTIVE"
	GetSubscriptionInfoResponseDtoResponseUserUserStatusDISABLED GetSubscriptionInfoResponseDtoResponseUserUserStatus = "DISABLED"
	GetSubscriptionInfoResponseDtoResponseUserUserStatusLIMITED  GetSubscriptionInfoResponseDtoResponseUserUserStatus = "LIMITED"
	GetSubscriptionInfoResponseDtoResponseUserUserStatusEXPIRED  GetSubscriptionInfoResponseDtoResponseUserUserStatus = "EXPIRED"
)

// AllValues returns all GetSubscriptionInfoResponseDtoResponseUserUserStatus values.
func (GetSubscriptionInfoResponseDtoResponseUserUserStatus) AllValues() []GetSubscriptionInfoResponseDtoResponseUserUserStatus {
	return []GetSubscriptionInfoResponseDtoResponseUserUserStatus{
		GetSubscriptionInfoResponseDtoResponseUserUserStatusACTIVE,
		GetSubscriptionInfoResponseDtoResponseUserUserStatusDISABLED,
		GetSubscriptionInfoResponseDtoResponseUserUserStatusLIMITED,
		GetSubscriptionInfoResponseDtoResponseUserUserStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetSubscriptionInfoResponseDtoResponseUserUserStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetSubscriptionInfoResponseDtoResponseUserUserStatusACTIVE:
		return []byte(s), nil
	case GetSubscriptionInfoResponseDtoResponseUserUserStatusDISABLED:
		return []byte(s), nil
	case GetSubscriptionInfoResponseDtoResponseUserUserStatusLIMITED:
		return []byte(s), nil
	case GetSubscriptionInfoResponseDtoResponseUserUserStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetSubscriptionInfoResponseDtoResponseUserUserStatus) UnmarshalText(data []byte) error {
	switch GetSubscriptionInfoResponseDtoResponseUserUserStatus(data) {
	case GetSubscriptionInfoResponseDtoResponseUserUserStatusACTIVE:
		*s = GetSubscriptionInfoResponseDtoResponseUserUserStatusACTIVE
		return nil
	case GetSubscriptionInfoResponseDtoResponseUserUserStatusDISABLED:
		*s = GetSubscriptionInfoResponseDtoResponseUserUserStatusDISABLED
		return nil
	case GetSubscriptionInfoResponseDtoResponseUserUserStatusLIMITED:
		*s = GetSubscriptionInfoResponseDtoResponseUserUserStatusLIMITED
		return nil
	case GetSubscriptionInfoResponseDtoResponseUserUserStatusEXPIRED:
		*s = GetSubscriptionInfoResponseDtoResponseUserUserStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetSubscriptionSettingsResponseDto
type GetSubscriptionSettingsResponseDto struct {
	Response GetSubscriptionSettingsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetSubscriptionSettingsResponseDto) GetResponse() GetSubscriptionSettingsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetSubscriptionSettingsResponseDto) SetResponse(val GetSubscriptionSettingsResponseDtoResponse) {
	s.Response = val
}

type GetSubscriptionSettingsResponseDtoResponse struct {
	UUID                          uuid.UUID                                                          `json:"uuid"`
	ProfileTitle                  string                                                             `json:"profileTitle"`
	SupportLink                   string                                                             `json:"supportLink"`
	ProfileUpdateInterval         int                                                                `json:"profileUpdateInterval"`
	IsProfileWebpageUrlEnabled    bool                                                               `json:"isProfileWebpageUrlEnabled"`
	ServeJsonAtBaseSubscription   bool                                                               `json:"serveJsonAtBaseSubscription"`
	AddUsernameToBaseSubscription bool                                                               `json:"addUsernameToBaseSubscription"`
	IsShowCustomRemarks           bool                                                               `json:"isShowCustomRemarks"`
	HappAnnounce                  NilString                                                          `json:"happAnnounce"`
	HappRouting                   NilString                                                          `json:"happRouting"`
	ExpiredUsersRemarks           []string                                                           `json:"expiredUsersRemarks"`
	LimitedUsersRemarks           []string                                                           `json:"limitedUsersRemarks"`
	DisabledUsersRemarks          []string                                                           `json:"disabledUsersRemarks"`
	CustomResponseHeaders         NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders `json:"customResponseHeaders"`
	CreatedAt                     time.Time                                                          `json:"createdAt"`
	UpdatedAt                     time.Time                                                          `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProfileTitle returns the value of ProfileTitle.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetProfileTitle() string {
	return s.ProfileTitle
}

// GetSupportLink returns the value of SupportLink.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetSupportLink() string {
	return s.SupportLink
}

// GetProfileUpdateInterval returns the value of ProfileUpdateInterval.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetProfileUpdateInterval() int {
	return s.ProfileUpdateInterval
}

// GetIsProfileWebpageUrlEnabled returns the value of IsProfileWebpageUrlEnabled.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetIsProfileWebpageUrlEnabled() bool {
	return s.IsProfileWebpageUrlEnabled
}

// GetServeJsonAtBaseSubscription returns the value of ServeJsonAtBaseSubscription.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetServeJsonAtBaseSubscription() bool {
	return s.ServeJsonAtBaseSubscription
}

// GetAddUsernameToBaseSubscription returns the value of AddUsernameToBaseSubscription.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetAddUsernameToBaseSubscription() bool {
	return s.AddUsernameToBaseSubscription
}

// GetIsShowCustomRemarks returns the value of IsShowCustomRemarks.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetIsShowCustomRemarks() bool {
	return s.IsShowCustomRemarks
}

// GetHappAnnounce returns the value of HappAnnounce.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetHappAnnounce() NilString {
	return s.HappAnnounce
}

// GetHappRouting returns the value of HappRouting.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetHappRouting() NilString {
	return s.HappRouting
}

// GetExpiredUsersRemarks returns the value of ExpiredUsersRemarks.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetExpiredUsersRemarks() []string {
	return s.ExpiredUsersRemarks
}

// GetLimitedUsersRemarks returns the value of LimitedUsersRemarks.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetLimitedUsersRemarks() []string {
	return s.LimitedUsersRemarks
}

// GetDisabledUsersRemarks returns the value of DisabledUsersRemarks.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetDisabledUsersRemarks() []string {
	return s.DisabledUsersRemarks
}

// GetCustomResponseHeaders returns the value of CustomResponseHeaders.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetCustomResponseHeaders() NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders {
	return s.CustomResponseHeaders
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetSubscriptionSettingsResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProfileTitle sets the value of ProfileTitle.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetProfileTitle(val string) {
	s.ProfileTitle = val
}

// SetSupportLink sets the value of SupportLink.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetSupportLink(val string) {
	s.SupportLink = val
}

// SetProfileUpdateInterval sets the value of ProfileUpdateInterval.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetProfileUpdateInterval(val int) {
	s.ProfileUpdateInterval = val
}

// SetIsProfileWebpageUrlEnabled sets the value of IsProfileWebpageUrlEnabled.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetIsProfileWebpageUrlEnabled(val bool) {
	s.IsProfileWebpageUrlEnabled = val
}

// SetServeJsonAtBaseSubscription sets the value of ServeJsonAtBaseSubscription.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetServeJsonAtBaseSubscription(val bool) {
	s.ServeJsonAtBaseSubscription = val
}

// SetAddUsernameToBaseSubscription sets the value of AddUsernameToBaseSubscription.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetAddUsernameToBaseSubscription(val bool) {
	s.AddUsernameToBaseSubscription = val
}

// SetIsShowCustomRemarks sets the value of IsShowCustomRemarks.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetIsShowCustomRemarks(val bool) {
	s.IsShowCustomRemarks = val
}

// SetHappAnnounce sets the value of HappAnnounce.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetHappAnnounce(val NilString) {
	s.HappAnnounce = val
}

// SetHappRouting sets the value of HappRouting.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetHappRouting(val NilString) {
	s.HappRouting = val
}

// SetExpiredUsersRemarks sets the value of ExpiredUsersRemarks.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetExpiredUsersRemarks(val []string) {
	s.ExpiredUsersRemarks = val
}

// SetLimitedUsersRemarks sets the value of LimitedUsersRemarks.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetLimitedUsersRemarks(val []string) {
	s.LimitedUsersRemarks = val
}

// SetDisabledUsersRemarks sets the value of DisabledUsersRemarks.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetDisabledUsersRemarks(val []string) {
	s.DisabledUsersRemarks = val
}

// SetCustomResponseHeaders sets the value of CustomResponseHeaders.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetCustomResponseHeaders(val NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) {
	s.CustomResponseHeaders = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetSubscriptionSettingsResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type GetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders map[string]string

func (s *GetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) init() GetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/GetTemplateResponseDto
type GetTemplateResponseDto struct {
	Response GetTemplateResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetTemplateResponseDto) GetResponse() GetTemplateResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetTemplateResponseDto) SetResponse(val GetTemplateResponseDtoResponse) {
	s.Response = val
}

type GetTemplateResponseDtoResponse struct {
	UUID                uuid.UUID                                  `json:"uuid"`
	TemplateType        GetTemplateResponseDtoResponseTemplateType `json:"templateType"`
	TemplateJson        jx.Raw                                     `json:"templateJson"`
	EncodedTemplateYaml NilString                                  `json:"encodedTemplateYaml"`
}

// GetUUID returns the value of UUID.
func (s *GetTemplateResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTemplateType returns the value of TemplateType.
func (s *GetTemplateResponseDtoResponse) GetTemplateType() GetTemplateResponseDtoResponseTemplateType {
	return s.TemplateType
}

// GetTemplateJson returns the value of TemplateJson.
func (s *GetTemplateResponseDtoResponse) GetTemplateJson() jx.Raw {
	return s.TemplateJson
}

// GetEncodedTemplateYaml returns the value of EncodedTemplateYaml.
func (s *GetTemplateResponseDtoResponse) GetEncodedTemplateYaml() NilString {
	return s.EncodedTemplateYaml
}

// SetUUID sets the value of UUID.
func (s *GetTemplateResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTemplateType sets the value of TemplateType.
func (s *GetTemplateResponseDtoResponse) SetTemplateType(val GetTemplateResponseDtoResponseTemplateType) {
	s.TemplateType = val
}

// SetTemplateJson sets the value of TemplateJson.
func (s *GetTemplateResponseDtoResponse) SetTemplateJson(val jx.Raw) {
	s.TemplateJson = val
}

// SetEncodedTemplateYaml sets the value of EncodedTemplateYaml.
func (s *GetTemplateResponseDtoResponse) SetEncodedTemplateYaml(val NilString) {
	s.EncodedTemplateYaml = val
}

type GetTemplateResponseDtoResponseTemplateType string

const (
	GetTemplateResponseDtoResponseTemplateTypeSTASH         GetTemplateResponseDtoResponseTemplateType = "STASH"
	GetTemplateResponseDtoResponseTemplateTypeSINGBOX       GetTemplateResponseDtoResponseTemplateType = "SINGBOX"
	GetTemplateResponseDtoResponseTemplateTypeSINGBOXLEGACY GetTemplateResponseDtoResponseTemplateType = "SINGBOX_LEGACY"
	GetTemplateResponseDtoResponseTemplateTypeMIHOMO        GetTemplateResponseDtoResponseTemplateType = "MIHOMO"
	GetTemplateResponseDtoResponseTemplateTypeXRAYJSON      GetTemplateResponseDtoResponseTemplateType = "XRAY_JSON"
	GetTemplateResponseDtoResponseTemplateTypeCLASH         GetTemplateResponseDtoResponseTemplateType = "CLASH"
)

// AllValues returns all GetTemplateResponseDtoResponseTemplateType values.
func (GetTemplateResponseDtoResponseTemplateType) AllValues() []GetTemplateResponseDtoResponseTemplateType {
	return []GetTemplateResponseDtoResponseTemplateType{
		GetTemplateResponseDtoResponseTemplateTypeSTASH,
		GetTemplateResponseDtoResponseTemplateTypeSINGBOX,
		GetTemplateResponseDtoResponseTemplateTypeSINGBOXLEGACY,
		GetTemplateResponseDtoResponseTemplateTypeMIHOMO,
		GetTemplateResponseDtoResponseTemplateTypeXRAYJSON,
		GetTemplateResponseDtoResponseTemplateTypeCLASH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetTemplateResponseDtoResponseTemplateType) MarshalText() ([]byte, error) {
	switch s {
	case GetTemplateResponseDtoResponseTemplateTypeSTASH:
		return []byte(s), nil
	case GetTemplateResponseDtoResponseTemplateTypeSINGBOX:
		return []byte(s), nil
	case GetTemplateResponseDtoResponseTemplateTypeSINGBOXLEGACY:
		return []byte(s), nil
	case GetTemplateResponseDtoResponseTemplateTypeMIHOMO:
		return []byte(s), nil
	case GetTemplateResponseDtoResponseTemplateTypeXRAYJSON:
		return []byte(s), nil
	case GetTemplateResponseDtoResponseTemplateTypeCLASH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetTemplateResponseDtoResponseTemplateType) UnmarshalText(data []byte) error {
	switch GetTemplateResponseDtoResponseTemplateType(data) {
	case GetTemplateResponseDtoResponseTemplateTypeSTASH:
		*s = GetTemplateResponseDtoResponseTemplateTypeSTASH
		return nil
	case GetTemplateResponseDtoResponseTemplateTypeSINGBOX:
		*s = GetTemplateResponseDtoResponseTemplateTypeSINGBOX
		return nil
	case GetTemplateResponseDtoResponseTemplateTypeSINGBOXLEGACY:
		*s = GetTemplateResponseDtoResponseTemplateTypeSINGBOXLEGACY
		return nil
	case GetTemplateResponseDtoResponseTemplateTypeMIHOMO:
		*s = GetTemplateResponseDtoResponseTemplateTypeMIHOMO
		return nil
	case GetTemplateResponseDtoResponseTemplateTypeXRAYJSON:
		*s = GetTemplateResponseDtoResponseTemplateTypeXRAYJSON
		return nil
	case GetTemplateResponseDtoResponseTemplateTypeCLASH:
		*s = GetTemplateResponseDtoResponseTemplateTypeCLASH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetUserByTagResponseDto
type GetUserByTagResponseDto struct {
	Response []GetUserByTagResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetUserByTagResponseDto) GetResponse() []GetUserByTagResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetUserByTagResponseDto) SetResponse(val []GetUserByTagResponseDtoResponseItem) {
	s.Response = val
}

func (*GetUserByTagResponseDto) usersControllerGetUsersByTagRes() {}

type GetUserByTagResponseDtoResponseItem struct {
	UUID                     uuid.UUID                                    `json:"uuid"`
	SubscriptionUuid         uuid.UUID                                    `json:"subscriptionUuid"`
	ShortUuid                string                                       `json:"shortUuid"`
	Username                 string                                       `json:"username"`
	Status                   OptGetUserByTagResponseDtoResponseItemStatus `json:"status"`
	UsedTrafficBytes         float64                                      `json:"usedTrafficBytes"`
	LifetimeUsedTrafficBytes float64                                      `json:"lifetimeUsedTrafficBytes"`
	TrafficLimitBytes        OptInt                                       `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy  `json:"trafficLimitStrategy"`
	SubLastUserAgent     NilString                                                   `json:"subLastUserAgent"`
	SubLastOpenedAt      NilDateTime                                                 `json:"subLastOpenedAt"`
	ExpireAt             time.Time                                                   `json:"expireAt"`
	OnlineAt             NilDateTime                                                 `json:"onlineAt"`
	SubRevokedAt         NilDateTime                                                 `json:"subRevokedAt"`
	LastTrafficResetAt   NilDateTime                                                 `json:"lastTrafficResetAt"`
	TrojanPassword       string                                                      `json:"trojanPassword"`
	VlessUuid            uuid.UUID                                                   `json:"vlessUuid"`
	SsPassword           string                                                      `json:"ssPassword"`
	Description          NilString                                                   `json:"description"`
	Tag                  NilString                                                   `json:"tag"`
	TelegramId           NilInt                                                      `json:"telegramId"`
	Email                NilString                                                   `json:"email"`
	HwidDeviceLimit      NilInt                                                      `json:"hwidDeviceLimit"`
	CreatedAt            time.Time                                                   `json:"createdAt"`
	UpdatedAt            time.Time                                                   `json:"updatedAt"`
	ActiveUserInbounds   []GetUserByTagResponseDtoResponseItemActiveUserInboundsItem `json:"activeUserInbounds"`
	SubscriptionUrl      string                                                      `json:"subscriptionUrl"`
	LastConnectedNode    NilGetUserByTagResponseDtoResponseItemLastConnectedNode     `json:"lastConnectedNode"`
	Happ                 GetUserByTagResponseDtoResponseItemHapp                     `json:"happ"`
}

// GetUUID returns the value of UUID.
func (s *GetUserByTagResponseDtoResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetSubscriptionUuid returns the value of SubscriptionUuid.
func (s *GetUserByTagResponseDtoResponseItem) GetSubscriptionUuid() uuid.UUID {
	return s.SubscriptionUuid
}

// GetShortUuid returns the value of ShortUuid.
func (s *GetUserByTagResponseDtoResponseItem) GetShortUuid() string {
	return s.ShortUuid
}

// GetUsername returns the value of Username.
func (s *GetUserByTagResponseDtoResponseItem) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *GetUserByTagResponseDtoResponseItem) GetStatus() OptGetUserByTagResponseDtoResponseItemStatus {
	return s.Status
}

// GetUsedTrafficBytes returns the value of UsedTrafficBytes.
func (s *GetUserByTagResponseDtoResponseItem) GetUsedTrafficBytes() float64 {
	return s.UsedTrafficBytes
}

// GetLifetimeUsedTrafficBytes returns the value of LifetimeUsedTrafficBytes.
func (s *GetUserByTagResponseDtoResponseItem) GetLifetimeUsedTrafficBytes() float64 {
	return s.LifetimeUsedTrafficBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *GetUserByTagResponseDtoResponseItem) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *GetUserByTagResponseDtoResponseItem) GetTrafficLimitStrategy() OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetSubLastUserAgent returns the value of SubLastUserAgent.
func (s *GetUserByTagResponseDtoResponseItem) GetSubLastUserAgent() NilString {
	return s.SubLastUserAgent
}

// GetSubLastOpenedAt returns the value of SubLastOpenedAt.
func (s *GetUserByTagResponseDtoResponseItem) GetSubLastOpenedAt() NilDateTime {
	return s.SubLastOpenedAt
}

// GetExpireAt returns the value of ExpireAt.
func (s *GetUserByTagResponseDtoResponseItem) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetOnlineAt returns the value of OnlineAt.
func (s *GetUserByTagResponseDtoResponseItem) GetOnlineAt() NilDateTime {
	return s.OnlineAt
}

// GetSubRevokedAt returns the value of SubRevokedAt.
func (s *GetUserByTagResponseDtoResponseItem) GetSubRevokedAt() NilDateTime {
	return s.SubRevokedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *GetUserByTagResponseDtoResponseItem) GetLastTrafficResetAt() NilDateTime {
	return s.LastTrafficResetAt
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *GetUserByTagResponseDtoResponseItem) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *GetUserByTagResponseDtoResponseItem) GetVlessUuid() uuid.UUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *GetUserByTagResponseDtoResponseItem) GetSsPassword() string {
	return s.SsPassword
}

// GetDescription returns the value of Description.
func (s *GetUserByTagResponseDtoResponseItem) GetDescription() NilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *GetUserByTagResponseDtoResponseItem) GetTag() NilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *GetUserByTagResponseDtoResponseItem) GetTelegramId() NilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *GetUserByTagResponseDtoResponseItem) GetEmail() NilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *GetUserByTagResponseDtoResponseItem) GetHwidDeviceLimit() NilInt {
	return s.HwidDeviceLimit
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetUserByTagResponseDtoResponseItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetUserByTagResponseDtoResponseItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetActiveUserInbounds returns the value of ActiveUserInbounds.
func (s *GetUserByTagResponseDtoResponseItem) GetActiveUserInbounds() []GetUserByTagResponseDtoResponseItemActiveUserInboundsItem {
	return s.ActiveUserInbounds
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *GetUserByTagResponseDtoResponseItem) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetLastConnectedNode returns the value of LastConnectedNode.
func (s *GetUserByTagResponseDtoResponseItem) GetLastConnectedNode() NilGetUserByTagResponseDtoResponseItemLastConnectedNode {
	return s.LastConnectedNode
}

// GetHapp returns the value of Happ.
func (s *GetUserByTagResponseDtoResponseItem) GetHapp() GetUserByTagResponseDtoResponseItemHapp {
	return s.Happ
}

// SetUUID sets the value of UUID.
func (s *GetUserByTagResponseDtoResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetSubscriptionUuid sets the value of SubscriptionUuid.
func (s *GetUserByTagResponseDtoResponseItem) SetSubscriptionUuid(val uuid.UUID) {
	s.SubscriptionUuid = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *GetUserByTagResponseDtoResponseItem) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetUsername sets the value of Username.
func (s *GetUserByTagResponseDtoResponseItem) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *GetUserByTagResponseDtoResponseItem) SetStatus(val OptGetUserByTagResponseDtoResponseItemStatus) {
	s.Status = val
}

// SetUsedTrafficBytes sets the value of UsedTrafficBytes.
func (s *GetUserByTagResponseDtoResponseItem) SetUsedTrafficBytes(val float64) {
	s.UsedTrafficBytes = val
}

// SetLifetimeUsedTrafficBytes sets the value of LifetimeUsedTrafficBytes.
func (s *GetUserByTagResponseDtoResponseItem) SetLifetimeUsedTrafficBytes(val float64) {
	s.LifetimeUsedTrafficBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *GetUserByTagResponseDtoResponseItem) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *GetUserByTagResponseDtoResponseItem) SetTrafficLimitStrategy(val OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetSubLastUserAgent sets the value of SubLastUserAgent.
func (s *GetUserByTagResponseDtoResponseItem) SetSubLastUserAgent(val NilString) {
	s.SubLastUserAgent = val
}

// SetSubLastOpenedAt sets the value of SubLastOpenedAt.
func (s *GetUserByTagResponseDtoResponseItem) SetSubLastOpenedAt(val NilDateTime) {
	s.SubLastOpenedAt = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *GetUserByTagResponseDtoResponseItem) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetOnlineAt sets the value of OnlineAt.
func (s *GetUserByTagResponseDtoResponseItem) SetOnlineAt(val NilDateTime) {
	s.OnlineAt = val
}

// SetSubRevokedAt sets the value of SubRevokedAt.
func (s *GetUserByTagResponseDtoResponseItem) SetSubRevokedAt(val NilDateTime) {
	s.SubRevokedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *GetUserByTagResponseDtoResponseItem) SetLastTrafficResetAt(val NilDateTime) {
	s.LastTrafficResetAt = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *GetUserByTagResponseDtoResponseItem) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *GetUserByTagResponseDtoResponseItem) SetVlessUuid(val uuid.UUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *GetUserByTagResponseDtoResponseItem) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetDescription sets the value of Description.
func (s *GetUserByTagResponseDtoResponseItem) SetDescription(val NilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *GetUserByTagResponseDtoResponseItem) SetTag(val NilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *GetUserByTagResponseDtoResponseItem) SetTelegramId(val NilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *GetUserByTagResponseDtoResponseItem) SetEmail(val NilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *GetUserByTagResponseDtoResponseItem) SetHwidDeviceLimit(val NilInt) {
	s.HwidDeviceLimit = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetUserByTagResponseDtoResponseItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetUserByTagResponseDtoResponseItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetActiveUserInbounds sets the value of ActiveUserInbounds.
func (s *GetUserByTagResponseDtoResponseItem) SetActiveUserInbounds(val []GetUserByTagResponseDtoResponseItemActiveUserInboundsItem) {
	s.ActiveUserInbounds = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *GetUserByTagResponseDtoResponseItem) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetLastConnectedNode sets the value of LastConnectedNode.
func (s *GetUserByTagResponseDtoResponseItem) SetLastConnectedNode(val NilGetUserByTagResponseDtoResponseItemLastConnectedNode) {
	s.LastConnectedNode = val
}

// SetHapp sets the value of Happ.
func (s *GetUserByTagResponseDtoResponseItem) SetHapp(val GetUserByTagResponseDtoResponseItemHapp) {
	s.Happ = val
}

type GetUserByTagResponseDtoResponseItemActiveUserInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *GetUserByTagResponseDtoResponseItemActiveUserInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *GetUserByTagResponseDtoResponseItemActiveUserInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *GetUserByTagResponseDtoResponseItemActiveUserInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *GetUserByTagResponseDtoResponseItemActiveUserInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *GetUserByTagResponseDtoResponseItemActiveUserInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *GetUserByTagResponseDtoResponseItemActiveUserInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *GetUserByTagResponseDtoResponseItemActiveUserInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *GetUserByTagResponseDtoResponseItemActiveUserInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *GetUserByTagResponseDtoResponseItemActiveUserInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *GetUserByTagResponseDtoResponseItemActiveUserInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

type GetUserByTagResponseDtoResponseItemHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *GetUserByTagResponseDtoResponseItemHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *GetUserByTagResponseDtoResponseItemHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type GetUserByTagResponseDtoResponseItemLastConnectedNode struct {
	ConnectedAt time.Time `json:"connectedAt"`
	NodeName    string    `json:"nodeName"`
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *GetUserByTagResponseDtoResponseItemLastConnectedNode) GetConnectedAt() time.Time {
	return s.ConnectedAt
}

// GetNodeName returns the value of NodeName.
func (s *GetUserByTagResponseDtoResponseItemLastConnectedNode) GetNodeName() string {
	return s.NodeName
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *GetUserByTagResponseDtoResponseItemLastConnectedNode) SetConnectedAt(val time.Time) {
	s.ConnectedAt = val
}

// SetNodeName sets the value of NodeName.
func (s *GetUserByTagResponseDtoResponseItemLastConnectedNode) SetNodeName(val string) {
	s.NodeName = val
}

type GetUserByTagResponseDtoResponseItemStatus string

const (
	GetUserByTagResponseDtoResponseItemStatusACTIVE   GetUserByTagResponseDtoResponseItemStatus = "ACTIVE"
	GetUserByTagResponseDtoResponseItemStatusDISABLED GetUserByTagResponseDtoResponseItemStatus = "DISABLED"
	GetUserByTagResponseDtoResponseItemStatusLIMITED  GetUserByTagResponseDtoResponseItemStatus = "LIMITED"
	GetUserByTagResponseDtoResponseItemStatusEXPIRED  GetUserByTagResponseDtoResponseItemStatus = "EXPIRED"
)

// AllValues returns all GetUserByTagResponseDtoResponseItemStatus values.
func (GetUserByTagResponseDtoResponseItemStatus) AllValues() []GetUserByTagResponseDtoResponseItemStatus {
	return []GetUserByTagResponseDtoResponseItemStatus{
		GetUserByTagResponseDtoResponseItemStatusACTIVE,
		GetUserByTagResponseDtoResponseItemStatusDISABLED,
		GetUserByTagResponseDtoResponseItemStatusLIMITED,
		GetUserByTagResponseDtoResponseItemStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetUserByTagResponseDtoResponseItemStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetUserByTagResponseDtoResponseItemStatusACTIVE:
		return []byte(s), nil
	case GetUserByTagResponseDtoResponseItemStatusDISABLED:
		return []byte(s), nil
	case GetUserByTagResponseDtoResponseItemStatusLIMITED:
		return []byte(s), nil
	case GetUserByTagResponseDtoResponseItemStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetUserByTagResponseDtoResponseItemStatus) UnmarshalText(data []byte) error {
	switch GetUserByTagResponseDtoResponseItemStatus(data) {
	case GetUserByTagResponseDtoResponseItemStatusACTIVE:
		*s = GetUserByTagResponseDtoResponseItemStatusACTIVE
		return nil
	case GetUserByTagResponseDtoResponseItemStatusDISABLED:
		*s = GetUserByTagResponseDtoResponseItemStatusDISABLED
		return nil
	case GetUserByTagResponseDtoResponseItemStatusLIMITED:
		*s = GetUserByTagResponseDtoResponseItemStatusLIMITED
		return nil
	case GetUserByTagResponseDtoResponseItemStatusEXPIRED:
		*s = GetUserByTagResponseDtoResponseItemStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type GetUserByTagResponseDtoResponseItemTrafficLimitStrategy string

const (
	GetUserByTagResponseDtoResponseItemTrafficLimitStrategyNORESET GetUserByTagResponseDtoResponseItemTrafficLimitStrategy = "NO_RESET"
	GetUserByTagResponseDtoResponseItemTrafficLimitStrategyDAY     GetUserByTagResponseDtoResponseItemTrafficLimitStrategy = "DAY"
	GetUserByTagResponseDtoResponseItemTrafficLimitStrategyWEEK    GetUserByTagResponseDtoResponseItemTrafficLimitStrategy = "WEEK"
	GetUserByTagResponseDtoResponseItemTrafficLimitStrategyMONTH   GetUserByTagResponseDtoResponseItemTrafficLimitStrategy = "MONTH"
)

// AllValues returns all GetUserByTagResponseDtoResponseItemTrafficLimitStrategy values.
func (GetUserByTagResponseDtoResponseItemTrafficLimitStrategy) AllValues() []GetUserByTagResponseDtoResponseItemTrafficLimitStrategy {
	return []GetUserByTagResponseDtoResponseItemTrafficLimitStrategy{
		GetUserByTagResponseDtoResponseItemTrafficLimitStrategyNORESET,
		GetUserByTagResponseDtoResponseItemTrafficLimitStrategyDAY,
		GetUserByTagResponseDtoResponseItemTrafficLimitStrategyWEEK,
		GetUserByTagResponseDtoResponseItemTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetUserByTagResponseDtoResponseItemTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case GetUserByTagResponseDtoResponseItemTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case GetUserByTagResponseDtoResponseItemTrafficLimitStrategyDAY:
		return []byte(s), nil
	case GetUserByTagResponseDtoResponseItemTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case GetUserByTagResponseDtoResponseItemTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetUserByTagResponseDtoResponseItemTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch GetUserByTagResponseDtoResponseItemTrafficLimitStrategy(data) {
	case GetUserByTagResponseDtoResponseItemTrafficLimitStrategyNORESET:
		*s = GetUserByTagResponseDtoResponseItemTrafficLimitStrategyNORESET
		return nil
	case GetUserByTagResponseDtoResponseItemTrafficLimitStrategyDAY:
		*s = GetUserByTagResponseDtoResponseItemTrafficLimitStrategyDAY
		return nil
	case GetUserByTagResponseDtoResponseItemTrafficLimitStrategyWEEK:
		*s = GetUserByTagResponseDtoResponseItemTrafficLimitStrategyWEEK
		return nil
	case GetUserByTagResponseDtoResponseItemTrafficLimitStrategyMONTH:
		*s = GetUserByTagResponseDtoResponseItemTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetUserByUuidResponseDto
type GetUserByUuidResponseDto struct {
	Response GetUserByUuidResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetUserByUuidResponseDto) GetResponse() GetUserByUuidResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetUserByUuidResponseDto) SetResponse(val GetUserByUuidResponseDtoResponse) {
	s.Response = val
}

func (*GetUserByUuidResponseDto) usersControllerGetUserByUuidRes() {}

type GetUserByUuidResponseDtoResponse struct {
	UUID                     uuid.UUID                                 `json:"uuid"`
	SubscriptionUuid         uuid.UUID                                 `json:"subscriptionUuid"`
	ShortUuid                string                                    `json:"shortUuid"`
	Username                 string                                    `json:"username"`
	Status                   OptGetUserByUuidResponseDtoResponseStatus `json:"status"`
	UsedTrafficBytes         float64                                   `json:"usedTrafficBytes"`
	LifetimeUsedTrafficBytes float64                                   `json:"lifetimeUsedTrafficBytes"`
	TrafficLimitBytes        OptInt                                    `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy  `json:"trafficLimitStrategy"`
	SubLastUserAgent     NilString                                                `json:"subLastUserAgent"`
	SubLastOpenedAt      NilDateTime                                              `json:"subLastOpenedAt"`
	ExpireAt             time.Time                                                `json:"expireAt"`
	OnlineAt             NilDateTime                                              `json:"onlineAt"`
	SubRevokedAt         NilDateTime                                              `json:"subRevokedAt"`
	LastTrafficResetAt   NilDateTime                                              `json:"lastTrafficResetAt"`
	TrojanPassword       string                                                   `json:"trojanPassword"`
	VlessUuid            uuid.UUID                                                `json:"vlessUuid"`
	SsPassword           string                                                   `json:"ssPassword"`
	Description          NilString                                                `json:"description"`
	Tag                  NilString                                                `json:"tag"`
	TelegramId           NilInt                                                   `json:"telegramId"`
	Email                NilString                                                `json:"email"`
	HwidDeviceLimit      NilInt                                                   `json:"hwidDeviceLimit"`
	CreatedAt            time.Time                                                `json:"createdAt"`
	UpdatedAt            time.Time                                                `json:"updatedAt"`
	ActiveUserInbounds   []GetUserByUuidResponseDtoResponseActiveUserInboundsItem `json:"activeUserInbounds"`
	SubscriptionUrl      string                                                   `json:"subscriptionUrl"`
	LastConnectedNode    NilGetUserByUuidResponseDtoResponseLastConnectedNode     `json:"lastConnectedNode"`
	Happ                 GetUserByUuidResponseDtoResponseHapp                     `json:"happ"`
}

// GetUUID returns the value of UUID.
func (s *GetUserByUuidResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetSubscriptionUuid returns the value of SubscriptionUuid.
func (s *GetUserByUuidResponseDtoResponse) GetSubscriptionUuid() uuid.UUID {
	return s.SubscriptionUuid
}

// GetShortUuid returns the value of ShortUuid.
func (s *GetUserByUuidResponseDtoResponse) GetShortUuid() string {
	return s.ShortUuid
}

// GetUsername returns the value of Username.
func (s *GetUserByUuidResponseDtoResponse) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *GetUserByUuidResponseDtoResponse) GetStatus() OptGetUserByUuidResponseDtoResponseStatus {
	return s.Status
}

// GetUsedTrafficBytes returns the value of UsedTrafficBytes.
func (s *GetUserByUuidResponseDtoResponse) GetUsedTrafficBytes() float64 {
	return s.UsedTrafficBytes
}

// GetLifetimeUsedTrafficBytes returns the value of LifetimeUsedTrafficBytes.
func (s *GetUserByUuidResponseDtoResponse) GetLifetimeUsedTrafficBytes() float64 {
	return s.LifetimeUsedTrafficBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *GetUserByUuidResponseDtoResponse) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *GetUserByUuidResponseDtoResponse) GetTrafficLimitStrategy() OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetSubLastUserAgent returns the value of SubLastUserAgent.
func (s *GetUserByUuidResponseDtoResponse) GetSubLastUserAgent() NilString {
	return s.SubLastUserAgent
}

// GetSubLastOpenedAt returns the value of SubLastOpenedAt.
func (s *GetUserByUuidResponseDtoResponse) GetSubLastOpenedAt() NilDateTime {
	return s.SubLastOpenedAt
}

// GetExpireAt returns the value of ExpireAt.
func (s *GetUserByUuidResponseDtoResponse) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetOnlineAt returns the value of OnlineAt.
func (s *GetUserByUuidResponseDtoResponse) GetOnlineAt() NilDateTime {
	return s.OnlineAt
}

// GetSubRevokedAt returns the value of SubRevokedAt.
func (s *GetUserByUuidResponseDtoResponse) GetSubRevokedAt() NilDateTime {
	return s.SubRevokedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *GetUserByUuidResponseDtoResponse) GetLastTrafficResetAt() NilDateTime {
	return s.LastTrafficResetAt
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *GetUserByUuidResponseDtoResponse) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *GetUserByUuidResponseDtoResponse) GetVlessUuid() uuid.UUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *GetUserByUuidResponseDtoResponse) GetSsPassword() string {
	return s.SsPassword
}

// GetDescription returns the value of Description.
func (s *GetUserByUuidResponseDtoResponse) GetDescription() NilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *GetUserByUuidResponseDtoResponse) GetTag() NilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *GetUserByUuidResponseDtoResponse) GetTelegramId() NilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *GetUserByUuidResponseDtoResponse) GetEmail() NilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *GetUserByUuidResponseDtoResponse) GetHwidDeviceLimit() NilInt {
	return s.HwidDeviceLimit
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetUserByUuidResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetUserByUuidResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetActiveUserInbounds returns the value of ActiveUserInbounds.
func (s *GetUserByUuidResponseDtoResponse) GetActiveUserInbounds() []GetUserByUuidResponseDtoResponseActiveUserInboundsItem {
	return s.ActiveUserInbounds
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *GetUserByUuidResponseDtoResponse) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetLastConnectedNode returns the value of LastConnectedNode.
func (s *GetUserByUuidResponseDtoResponse) GetLastConnectedNode() NilGetUserByUuidResponseDtoResponseLastConnectedNode {
	return s.LastConnectedNode
}

// GetHapp returns the value of Happ.
func (s *GetUserByUuidResponseDtoResponse) GetHapp() GetUserByUuidResponseDtoResponseHapp {
	return s.Happ
}

// SetUUID sets the value of UUID.
func (s *GetUserByUuidResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetSubscriptionUuid sets the value of SubscriptionUuid.
func (s *GetUserByUuidResponseDtoResponse) SetSubscriptionUuid(val uuid.UUID) {
	s.SubscriptionUuid = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *GetUserByUuidResponseDtoResponse) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetUsername sets the value of Username.
func (s *GetUserByUuidResponseDtoResponse) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *GetUserByUuidResponseDtoResponse) SetStatus(val OptGetUserByUuidResponseDtoResponseStatus) {
	s.Status = val
}

// SetUsedTrafficBytes sets the value of UsedTrafficBytes.
func (s *GetUserByUuidResponseDtoResponse) SetUsedTrafficBytes(val float64) {
	s.UsedTrafficBytes = val
}

// SetLifetimeUsedTrafficBytes sets the value of LifetimeUsedTrafficBytes.
func (s *GetUserByUuidResponseDtoResponse) SetLifetimeUsedTrafficBytes(val float64) {
	s.LifetimeUsedTrafficBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *GetUserByUuidResponseDtoResponse) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *GetUserByUuidResponseDtoResponse) SetTrafficLimitStrategy(val OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetSubLastUserAgent sets the value of SubLastUserAgent.
func (s *GetUserByUuidResponseDtoResponse) SetSubLastUserAgent(val NilString) {
	s.SubLastUserAgent = val
}

// SetSubLastOpenedAt sets the value of SubLastOpenedAt.
func (s *GetUserByUuidResponseDtoResponse) SetSubLastOpenedAt(val NilDateTime) {
	s.SubLastOpenedAt = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *GetUserByUuidResponseDtoResponse) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetOnlineAt sets the value of OnlineAt.
func (s *GetUserByUuidResponseDtoResponse) SetOnlineAt(val NilDateTime) {
	s.OnlineAt = val
}

// SetSubRevokedAt sets the value of SubRevokedAt.
func (s *GetUserByUuidResponseDtoResponse) SetSubRevokedAt(val NilDateTime) {
	s.SubRevokedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *GetUserByUuidResponseDtoResponse) SetLastTrafficResetAt(val NilDateTime) {
	s.LastTrafficResetAt = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *GetUserByUuidResponseDtoResponse) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *GetUserByUuidResponseDtoResponse) SetVlessUuid(val uuid.UUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *GetUserByUuidResponseDtoResponse) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetDescription sets the value of Description.
func (s *GetUserByUuidResponseDtoResponse) SetDescription(val NilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *GetUserByUuidResponseDtoResponse) SetTag(val NilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *GetUserByUuidResponseDtoResponse) SetTelegramId(val NilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *GetUserByUuidResponseDtoResponse) SetEmail(val NilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *GetUserByUuidResponseDtoResponse) SetHwidDeviceLimit(val NilInt) {
	s.HwidDeviceLimit = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetUserByUuidResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetUserByUuidResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetActiveUserInbounds sets the value of ActiveUserInbounds.
func (s *GetUserByUuidResponseDtoResponse) SetActiveUserInbounds(val []GetUserByUuidResponseDtoResponseActiveUserInboundsItem) {
	s.ActiveUserInbounds = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *GetUserByUuidResponseDtoResponse) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetLastConnectedNode sets the value of LastConnectedNode.
func (s *GetUserByUuidResponseDtoResponse) SetLastConnectedNode(val NilGetUserByUuidResponseDtoResponseLastConnectedNode) {
	s.LastConnectedNode = val
}

// SetHapp sets the value of Happ.
func (s *GetUserByUuidResponseDtoResponse) SetHapp(val GetUserByUuidResponseDtoResponseHapp) {
	s.Happ = val
}

type GetUserByUuidResponseDtoResponseActiveUserInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *GetUserByUuidResponseDtoResponseActiveUserInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *GetUserByUuidResponseDtoResponseActiveUserInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *GetUserByUuidResponseDtoResponseActiveUserInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *GetUserByUuidResponseDtoResponseActiveUserInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *GetUserByUuidResponseDtoResponseActiveUserInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *GetUserByUuidResponseDtoResponseActiveUserInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *GetUserByUuidResponseDtoResponseActiveUserInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *GetUserByUuidResponseDtoResponseActiveUserInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *GetUserByUuidResponseDtoResponseActiveUserInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *GetUserByUuidResponseDtoResponseActiveUserInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

type GetUserByUuidResponseDtoResponseHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *GetUserByUuidResponseDtoResponseHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *GetUserByUuidResponseDtoResponseHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type GetUserByUuidResponseDtoResponseLastConnectedNode struct {
	ConnectedAt time.Time `json:"connectedAt"`
	NodeName    string    `json:"nodeName"`
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *GetUserByUuidResponseDtoResponseLastConnectedNode) GetConnectedAt() time.Time {
	return s.ConnectedAt
}

// GetNodeName returns the value of NodeName.
func (s *GetUserByUuidResponseDtoResponseLastConnectedNode) GetNodeName() string {
	return s.NodeName
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *GetUserByUuidResponseDtoResponseLastConnectedNode) SetConnectedAt(val time.Time) {
	s.ConnectedAt = val
}

// SetNodeName sets the value of NodeName.
func (s *GetUserByUuidResponseDtoResponseLastConnectedNode) SetNodeName(val string) {
	s.NodeName = val
}

type GetUserByUuidResponseDtoResponseStatus string

const (
	GetUserByUuidResponseDtoResponseStatusACTIVE   GetUserByUuidResponseDtoResponseStatus = "ACTIVE"
	GetUserByUuidResponseDtoResponseStatusDISABLED GetUserByUuidResponseDtoResponseStatus = "DISABLED"
	GetUserByUuidResponseDtoResponseStatusLIMITED  GetUserByUuidResponseDtoResponseStatus = "LIMITED"
	GetUserByUuidResponseDtoResponseStatusEXPIRED  GetUserByUuidResponseDtoResponseStatus = "EXPIRED"
)

// AllValues returns all GetUserByUuidResponseDtoResponseStatus values.
func (GetUserByUuidResponseDtoResponseStatus) AllValues() []GetUserByUuidResponseDtoResponseStatus {
	return []GetUserByUuidResponseDtoResponseStatus{
		GetUserByUuidResponseDtoResponseStatusACTIVE,
		GetUserByUuidResponseDtoResponseStatusDISABLED,
		GetUserByUuidResponseDtoResponseStatusLIMITED,
		GetUserByUuidResponseDtoResponseStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetUserByUuidResponseDtoResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetUserByUuidResponseDtoResponseStatusACTIVE:
		return []byte(s), nil
	case GetUserByUuidResponseDtoResponseStatusDISABLED:
		return []byte(s), nil
	case GetUserByUuidResponseDtoResponseStatusLIMITED:
		return []byte(s), nil
	case GetUserByUuidResponseDtoResponseStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetUserByUuidResponseDtoResponseStatus) UnmarshalText(data []byte) error {
	switch GetUserByUuidResponseDtoResponseStatus(data) {
	case GetUserByUuidResponseDtoResponseStatusACTIVE:
		*s = GetUserByUuidResponseDtoResponseStatusACTIVE
		return nil
	case GetUserByUuidResponseDtoResponseStatusDISABLED:
		*s = GetUserByUuidResponseDtoResponseStatusDISABLED
		return nil
	case GetUserByUuidResponseDtoResponseStatusLIMITED:
		*s = GetUserByUuidResponseDtoResponseStatusLIMITED
		return nil
	case GetUserByUuidResponseDtoResponseStatusEXPIRED:
		*s = GetUserByUuidResponseDtoResponseStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type GetUserByUuidResponseDtoResponseTrafficLimitStrategy string

const (
	GetUserByUuidResponseDtoResponseTrafficLimitStrategyNORESET GetUserByUuidResponseDtoResponseTrafficLimitStrategy = "NO_RESET"
	GetUserByUuidResponseDtoResponseTrafficLimitStrategyDAY     GetUserByUuidResponseDtoResponseTrafficLimitStrategy = "DAY"
	GetUserByUuidResponseDtoResponseTrafficLimitStrategyWEEK    GetUserByUuidResponseDtoResponseTrafficLimitStrategy = "WEEK"
	GetUserByUuidResponseDtoResponseTrafficLimitStrategyMONTH   GetUserByUuidResponseDtoResponseTrafficLimitStrategy = "MONTH"
)

// AllValues returns all GetUserByUuidResponseDtoResponseTrafficLimitStrategy values.
func (GetUserByUuidResponseDtoResponseTrafficLimitStrategy) AllValues() []GetUserByUuidResponseDtoResponseTrafficLimitStrategy {
	return []GetUserByUuidResponseDtoResponseTrafficLimitStrategy{
		GetUserByUuidResponseDtoResponseTrafficLimitStrategyNORESET,
		GetUserByUuidResponseDtoResponseTrafficLimitStrategyDAY,
		GetUserByUuidResponseDtoResponseTrafficLimitStrategyWEEK,
		GetUserByUuidResponseDtoResponseTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetUserByUuidResponseDtoResponseTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case GetUserByUuidResponseDtoResponseTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case GetUserByUuidResponseDtoResponseTrafficLimitStrategyDAY:
		return []byte(s), nil
	case GetUserByUuidResponseDtoResponseTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case GetUserByUuidResponseDtoResponseTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetUserByUuidResponseDtoResponseTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch GetUserByUuidResponseDtoResponseTrafficLimitStrategy(data) {
	case GetUserByUuidResponseDtoResponseTrafficLimitStrategyNORESET:
		*s = GetUserByUuidResponseDtoResponseTrafficLimitStrategyNORESET
		return nil
	case GetUserByUuidResponseDtoResponseTrafficLimitStrategyDAY:
		*s = GetUserByUuidResponseDtoResponseTrafficLimitStrategyDAY
		return nil
	case GetUserByUuidResponseDtoResponseTrafficLimitStrategyWEEK:
		*s = GetUserByUuidResponseDtoResponseTrafficLimitStrategyWEEK
		return nil
	case GetUserByUuidResponseDtoResponseTrafficLimitStrategyMONTH:
		*s = GetUserByUuidResponseDtoResponseTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GetUserHwidDevicesResponseDto
type GetUserHwidDevicesResponseDto struct {
	Response []GetUserHwidDevicesResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetUserHwidDevicesResponseDto) GetResponse() []GetUserHwidDevicesResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetUserHwidDevicesResponseDto) SetResponse(val []GetUserHwidDevicesResponseDtoResponseItem) {
	s.Response = val
}

type GetUserHwidDevicesResponseDtoResponseItem struct {
	Hwid        string    `json:"hwid"`
	UserUuid    uuid.UUID `json:"userUuid"`
	Platform    NilString `json:"platform"`
	OsVersion   NilString `json:"osVersion"`
	DeviceModel NilString `json:"deviceModel"`
	UserAgent   NilString `json:"userAgent"`
	CreatedAt   time.Time `json:"createdAt"`
	UpdatedAt   time.Time `json:"updatedAt"`
}

// GetHwid returns the value of Hwid.
func (s *GetUserHwidDevicesResponseDtoResponseItem) GetHwid() string {
	return s.Hwid
}

// GetUserUuid returns the value of UserUuid.
func (s *GetUserHwidDevicesResponseDtoResponseItem) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetPlatform returns the value of Platform.
func (s *GetUserHwidDevicesResponseDtoResponseItem) GetPlatform() NilString {
	return s.Platform
}

// GetOsVersion returns the value of OsVersion.
func (s *GetUserHwidDevicesResponseDtoResponseItem) GetOsVersion() NilString {
	return s.OsVersion
}

// GetDeviceModel returns the value of DeviceModel.
func (s *GetUserHwidDevicesResponseDtoResponseItem) GetDeviceModel() NilString {
	return s.DeviceModel
}

// GetUserAgent returns the value of UserAgent.
func (s *GetUserHwidDevicesResponseDtoResponseItem) GetUserAgent() NilString {
	return s.UserAgent
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetUserHwidDevicesResponseDtoResponseItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetUserHwidDevicesResponseDtoResponseItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetHwid sets the value of Hwid.
func (s *GetUserHwidDevicesResponseDtoResponseItem) SetHwid(val string) {
	s.Hwid = val
}

// SetUserUuid sets the value of UserUuid.
func (s *GetUserHwidDevicesResponseDtoResponseItem) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetPlatform sets the value of Platform.
func (s *GetUserHwidDevicesResponseDtoResponseItem) SetPlatform(val NilString) {
	s.Platform = val
}

// SetOsVersion sets the value of OsVersion.
func (s *GetUserHwidDevicesResponseDtoResponseItem) SetOsVersion(val NilString) {
	s.OsVersion = val
}

// SetDeviceModel sets the value of DeviceModel.
func (s *GetUserHwidDevicesResponseDtoResponseItem) SetDeviceModel(val NilString) {
	s.DeviceModel = val
}

// SetUserAgent sets the value of UserAgent.
func (s *GetUserHwidDevicesResponseDtoResponseItem) SetUserAgent(val NilString) {
	s.UserAgent = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetUserHwidDevicesResponseDtoResponseItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetUserHwidDevicesResponseDtoResponseItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/GetUserUsageByRangeResponseDto
type GetUserUsageByRangeResponseDto struct {
	Response []GetUserUsageByRangeResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *GetUserUsageByRangeResponseDto) GetResponse() []GetUserUsageByRangeResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *GetUserUsageByRangeResponseDto) SetResponse(val []GetUserUsageByRangeResponseDtoResponseItem) {
	s.Response = val
}

func (*GetUserUsageByRangeResponseDto) usersStatsControllerGetUserUsageByRangeRes() {}

type GetUserUsageByRangeResponseDtoResponseItem struct {
	UserUuid uuid.UUID `json:"userUuid"`
	NodeUuid uuid.UUID `json:"nodeUuid"`
	NodeName string    `json:"nodeName"`
	Total    float64   `json:"total"`
	Date     string    `json:"date"`
}

// GetUserUuid returns the value of UserUuid.
func (s *GetUserUsageByRangeResponseDtoResponseItem) GetUserUuid() uuid.UUID {
	return s.UserUuid
}

// GetNodeUuid returns the value of NodeUuid.
func (s *GetUserUsageByRangeResponseDtoResponseItem) GetNodeUuid() uuid.UUID {
	return s.NodeUuid
}

// GetNodeName returns the value of NodeName.
func (s *GetUserUsageByRangeResponseDtoResponseItem) GetNodeName() string {
	return s.NodeName
}

// GetTotal returns the value of Total.
func (s *GetUserUsageByRangeResponseDtoResponseItem) GetTotal() float64 {
	return s.Total
}

// GetDate returns the value of Date.
func (s *GetUserUsageByRangeResponseDtoResponseItem) GetDate() string {
	return s.Date
}

// SetUserUuid sets the value of UserUuid.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetUserUuid(val uuid.UUID) {
	s.UserUuid = val
}

// SetNodeUuid sets the value of NodeUuid.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetNodeUuid(val uuid.UUID) {
	s.NodeUuid = val
}

// SetNodeName sets the value of NodeName.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetNodeName(val string) {
	s.NodeName = val
}

// SetTotal sets the value of Total.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetTotal(val float64) {
	s.Total = val
}

// SetDate sets the value of Date.
func (s *GetUserUsageByRangeResponseDtoResponseItem) SetDate(val string) {
	s.Date = val
}

// HostsControllerDeleteHostNotFound is response for HostsControllerDeleteHost operation.
type HostsControllerDeleteHostNotFound struct{}

func (*HostsControllerDeleteHostNotFound) hostsControllerDeleteHostRes() {}

// Ref: #/components/schemas/LoginRequestDto
type LoginRequestDto struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

// GetUsername returns the value of Username.
func (s *LoginRequestDto) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *LoginRequestDto) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *LoginRequestDto) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *LoginRequestDto) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/LoginResponseDto
type LoginResponseDto struct {
	Response LoginResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *LoginResponseDto) GetResponse() LoginResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *LoginResponseDto) SetResponse(val LoginResponseDtoResponse) {
	s.Response = val
}

type LoginResponseDtoResponse struct {
	AccessToken string `json:"accessToken"`
}

// GetAccessToken returns the value of AccessToken.
func (s *LoginResponseDtoResponse) GetAccessToken() string {
	return s.AccessToken
}

// SetAccessToken sets the value of AccessToken.
func (s *LoginResponseDtoResponse) SetAccessToken(val string) {
	s.AccessToken = val
}

// LoginResponseDtoStatusCode wraps LoginResponseDto with StatusCode.
type LoginResponseDtoStatusCode struct {
	StatusCode int
	Response   LoginResponseDto
}

// GetStatusCode returns the value of StatusCode.
func (s *LoginResponseDtoStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *LoginResponseDtoStatusCode) GetResponse() LoginResponseDto {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *LoginResponseDtoStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *LoginResponseDtoStatusCode) SetResponse(val LoginResponseDto) {
	s.Response = val
}

func (*LoginResponseDtoStatusCode) authControllerLoginRes() {}

// NewNilActivateAllInboundsResponseDtoResponseLastConnectedNode returns new NilActivateAllInboundsResponseDtoResponseLastConnectedNode with value set to v.
func NewNilActivateAllInboundsResponseDtoResponseLastConnectedNode(v ActivateAllInboundsResponseDtoResponseLastConnectedNode) NilActivateAllInboundsResponseDtoResponseLastConnectedNode {
	return NilActivateAllInboundsResponseDtoResponseLastConnectedNode{
		Value: v,
	}
}

// NilActivateAllInboundsResponseDtoResponseLastConnectedNode is nullable ActivateAllInboundsResponseDtoResponseLastConnectedNode.
type NilActivateAllInboundsResponseDtoResponseLastConnectedNode struct {
	Value ActivateAllInboundsResponseDtoResponseLastConnectedNode
	Null  bool
}

// SetTo sets value to v.
func (o *NilActivateAllInboundsResponseDtoResponseLastConnectedNode) SetTo(v ActivateAllInboundsResponseDtoResponseLastConnectedNode) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilActivateAllInboundsResponseDtoResponseLastConnectedNode) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilActivateAllInboundsResponseDtoResponseLastConnectedNode) SetToNull() {
	o.Null = true
	var v ActivateAllInboundsResponseDtoResponseLastConnectedNode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilActivateAllInboundsResponseDtoResponseLastConnectedNode) Get() (v ActivateAllInboundsResponseDtoResponseLastConnectedNode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilActivateAllInboundsResponseDtoResponseLastConnectedNode) Or(d ActivateAllInboundsResponseDtoResponseLastConnectedNode) ActivateAllInboundsResponseDtoResponseLastConnectedNode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilDateTime returns new NilDateTime with value set to v.
func NewNilDateTime(v time.Time) NilDateTime {
	return NilDateTime{
		Value: v,
	}
}

// NilDateTime is nullable time.Time.
type NilDateTime struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilDateTime) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilDateTime) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilDateTime) SetToNull() {
	o.Null = true
	var v time.Time
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilDateTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilDisableUserResponseDtoResponseLastConnectedNode returns new NilDisableUserResponseDtoResponseLastConnectedNode with value set to v.
func NewNilDisableUserResponseDtoResponseLastConnectedNode(v DisableUserResponseDtoResponseLastConnectedNode) NilDisableUserResponseDtoResponseLastConnectedNode {
	return NilDisableUserResponseDtoResponseLastConnectedNode{
		Value: v,
	}
}

// NilDisableUserResponseDtoResponseLastConnectedNode is nullable DisableUserResponseDtoResponseLastConnectedNode.
type NilDisableUserResponseDtoResponseLastConnectedNode struct {
	Value DisableUserResponseDtoResponseLastConnectedNode
	Null  bool
}

// SetTo sets value to v.
func (o *NilDisableUserResponseDtoResponseLastConnectedNode) SetTo(v DisableUserResponseDtoResponseLastConnectedNode) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilDisableUserResponseDtoResponseLastConnectedNode) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilDisableUserResponseDtoResponseLastConnectedNode) SetToNull() {
	o.Null = true
	var v DisableUserResponseDtoResponseLastConnectedNode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilDisableUserResponseDtoResponseLastConnectedNode) Get() (v DisableUserResponseDtoResponseLastConnectedNode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilDisableUserResponseDtoResponseLastConnectedNode) Or(d DisableUserResponseDtoResponseLastConnectedNode) DisableUserResponseDtoResponseLastConnectedNode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilEnableUserResponseDtoResponseLastConnectedNode returns new NilEnableUserResponseDtoResponseLastConnectedNode with value set to v.
func NewNilEnableUserResponseDtoResponseLastConnectedNode(v EnableUserResponseDtoResponseLastConnectedNode) NilEnableUserResponseDtoResponseLastConnectedNode {
	return NilEnableUserResponseDtoResponseLastConnectedNode{
		Value: v,
	}
}

// NilEnableUserResponseDtoResponseLastConnectedNode is nullable EnableUserResponseDtoResponseLastConnectedNode.
type NilEnableUserResponseDtoResponseLastConnectedNode struct {
	Value EnableUserResponseDtoResponseLastConnectedNode
	Null  bool
}

// SetTo sets value to v.
func (o *NilEnableUserResponseDtoResponseLastConnectedNode) SetTo(v EnableUserResponseDtoResponseLastConnectedNode) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilEnableUserResponseDtoResponseLastConnectedNode) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilEnableUserResponseDtoResponseLastConnectedNode) SetToNull() {
	o.Null = true
	var v EnableUserResponseDtoResponseLastConnectedNode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilEnableUserResponseDtoResponseLastConnectedNode) Get() (v EnableUserResponseDtoResponseLastConnectedNode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilEnableUserResponseDtoResponseLastConnectedNode) Or(d EnableUserResponseDtoResponseLastConnectedNode) EnableUserResponseDtoResponseLastConnectedNode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilFloat64 returns new NilFloat64 with value set to v.
func NewNilFloat64(v float64) NilFloat64 {
	return NilFloat64{
		Value: v,
	}
}

// NilFloat64 is nullable float64.
type NilFloat64 struct {
	Value float64
	Null  bool
}

// SetTo sets value to v.
func (o *NilFloat64) SetTo(v float64) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilFloat64) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilFloat64) SetToNull() {
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilGetStatusResponseDtoResponseTgAuth returns new NilGetStatusResponseDtoResponseTgAuth with value set to v.
func NewNilGetStatusResponseDtoResponseTgAuth(v GetStatusResponseDtoResponseTgAuth) NilGetStatusResponseDtoResponseTgAuth {
	return NilGetStatusResponseDtoResponseTgAuth{
		Value: v,
	}
}

// NilGetStatusResponseDtoResponseTgAuth is nullable GetStatusResponseDtoResponseTgAuth.
type NilGetStatusResponseDtoResponseTgAuth struct {
	Value GetStatusResponseDtoResponseTgAuth
	Null  bool
}

// SetTo sets value to v.
func (o *NilGetStatusResponseDtoResponseTgAuth) SetTo(v GetStatusResponseDtoResponseTgAuth) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilGetStatusResponseDtoResponseTgAuth) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilGetStatusResponseDtoResponseTgAuth) SetToNull() {
	o.Null = true
	var v GetStatusResponseDtoResponseTgAuth
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilGetStatusResponseDtoResponseTgAuth) Get() (v GetStatusResponseDtoResponseTgAuth, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilGetStatusResponseDtoResponseTgAuth) Or(d GetStatusResponseDtoResponseTgAuth) GetStatusResponseDtoResponseTgAuth {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders returns new NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders with value set to v.
func NewNilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders(v GetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders {
	return NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders{
		Value: v,
	}
}

// NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders is nullable GetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders.
type NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders struct {
	Value GetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders
	Null  bool
}

// SetTo sets value to v.
func (o *NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) SetTo(v GetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) IsNull() bool {
	return o.Null
}

// SetToNull sets value to null.
func (o *NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) SetToNull() {
	o.Null = true
	var v GetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) Get() (v GetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilGetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) Or(d GetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) GetSubscriptionSettingsResponseDtoResponseCustomResponseHeaders {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilGetUserByTagResponseDtoResponseItemLastConnectedNode returns new NilGetUserByTagResponseDtoResponseItemLastConnectedNode with value set to v.
func NewNilGetUserByTagResponseDtoResponseItemLastConnectedNode(v GetUserByTagResponseDtoResponseItemLastConnectedNode) NilGetUserByTagResponseDtoResponseItemLastConnectedNode {
	return NilGetUserByTagResponseDtoResponseItemLastConnectedNode{
		Value: v,
	}
}

// NilGetUserByTagResponseDtoResponseItemLastConnectedNode is nullable GetUserByTagResponseDtoResponseItemLastConnectedNode.
type NilGetUserByTagResponseDtoResponseItemLastConnectedNode struct {
	Value GetUserByTagResponseDtoResponseItemLastConnectedNode
	Null  bool
}

// SetTo sets value to v.
func (o *NilGetUserByTagResponseDtoResponseItemLastConnectedNode) SetTo(v GetUserByTagResponseDtoResponseItemLastConnectedNode) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilGetUserByTagResponseDtoResponseItemLastConnectedNode) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilGetUserByTagResponseDtoResponseItemLastConnectedNode) SetToNull() {
	o.Null = true
	var v GetUserByTagResponseDtoResponseItemLastConnectedNode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilGetUserByTagResponseDtoResponseItemLastConnectedNode) Get() (v GetUserByTagResponseDtoResponseItemLastConnectedNode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilGetUserByTagResponseDtoResponseItemLastConnectedNode) Or(d GetUserByTagResponseDtoResponseItemLastConnectedNode) GetUserByTagResponseDtoResponseItemLastConnectedNode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilGetUserByUuidResponseDtoResponseLastConnectedNode returns new NilGetUserByUuidResponseDtoResponseLastConnectedNode with value set to v.
func NewNilGetUserByUuidResponseDtoResponseLastConnectedNode(v GetUserByUuidResponseDtoResponseLastConnectedNode) NilGetUserByUuidResponseDtoResponseLastConnectedNode {
	return NilGetUserByUuidResponseDtoResponseLastConnectedNode{
		Value: v,
	}
}

// NilGetUserByUuidResponseDtoResponseLastConnectedNode is nullable GetUserByUuidResponseDtoResponseLastConnectedNode.
type NilGetUserByUuidResponseDtoResponseLastConnectedNode struct {
	Value GetUserByUuidResponseDtoResponseLastConnectedNode
	Null  bool
}

// SetTo sets value to v.
func (o *NilGetUserByUuidResponseDtoResponseLastConnectedNode) SetTo(v GetUserByUuidResponseDtoResponseLastConnectedNode) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilGetUserByUuidResponseDtoResponseLastConnectedNode) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilGetUserByUuidResponseDtoResponseLastConnectedNode) SetToNull() {
	o.Null = true
	var v GetUserByUuidResponseDtoResponseLastConnectedNode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilGetUserByUuidResponseDtoResponseLastConnectedNode) Get() (v GetUserByUuidResponseDtoResponseLastConnectedNode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilGetUserByUuidResponseDtoResponseLastConnectedNode) Or(d GetUserByUuidResponseDtoResponseLastConnectedNode) GetUserByUuidResponseDtoResponseLastConnectedNode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilInt returns new NilInt with value set to v.
func NewNilInt(v int) NilInt {
	return NilInt{
		Value: v,
	}
}

// NilInt is nullable int.
type NilInt struct {
	Value int
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt) SetTo(v int) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilInt) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilInt) SetToNull() {
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilResetUserTrafficResponseDtoResponseLastConnectedNode returns new NilResetUserTrafficResponseDtoResponseLastConnectedNode with value set to v.
func NewNilResetUserTrafficResponseDtoResponseLastConnectedNode(v ResetUserTrafficResponseDtoResponseLastConnectedNode) NilResetUserTrafficResponseDtoResponseLastConnectedNode {
	return NilResetUserTrafficResponseDtoResponseLastConnectedNode{
		Value: v,
	}
}

// NilResetUserTrafficResponseDtoResponseLastConnectedNode is nullable ResetUserTrafficResponseDtoResponseLastConnectedNode.
type NilResetUserTrafficResponseDtoResponseLastConnectedNode struct {
	Value ResetUserTrafficResponseDtoResponseLastConnectedNode
	Null  bool
}

// SetTo sets value to v.
func (o *NilResetUserTrafficResponseDtoResponseLastConnectedNode) SetTo(v ResetUserTrafficResponseDtoResponseLastConnectedNode) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilResetUserTrafficResponseDtoResponseLastConnectedNode) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilResetUserTrafficResponseDtoResponseLastConnectedNode) SetToNull() {
	o.Null = true
	var v ResetUserTrafficResponseDtoResponseLastConnectedNode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilResetUserTrafficResponseDtoResponseLastConnectedNode) Get() (v ResetUserTrafficResponseDtoResponseLastConnectedNode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilResetUserTrafficResponseDtoResponseLastConnectedNode) Or(d ResetUserTrafficResponseDtoResponseLastConnectedNode) ResetUserTrafficResponseDtoResponseLastConnectedNode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode returns new NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode with value set to v.
func NewNilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode(v RevokeUserSubscriptionResponseDtoResponseLastConnectedNode) NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode {
	return NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode{
		Value: v,
	}
}

// NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode is nullable RevokeUserSubscriptionResponseDtoResponseLastConnectedNode.
type NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode struct {
	Value RevokeUserSubscriptionResponseDtoResponseLastConnectedNode
	Null  bool
}

// SetTo sets value to v.
func (o *NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode) SetTo(v RevokeUserSubscriptionResponseDtoResponseLastConnectedNode) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode) SetToNull() {
	o.Null = true
	var v RevokeUserSubscriptionResponseDtoResponseLastConnectedNode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode) Get() (v RevokeUserSubscriptionResponseDtoResponseLastConnectedNode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode) Or(d RevokeUserSubscriptionResponseDtoResponseLastConnectedNode) RevokeUserSubscriptionResponseDtoResponseLastConnectedNode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders returns new NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders with value set to v.
func NewNilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders(v UpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders {
	return NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders{
		Value: v,
	}
}

// NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders is nullable UpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders.
type NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders struct {
	Value UpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders
	Null  bool
}

// SetTo sets value to v.
func (o *NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) SetTo(v UpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) IsNull() bool {
	return o.Null
}

// SetToNull sets value to null.
func (o *NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) SetToNull() {
	o.Null = true
	var v UpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) Get() (v UpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) Or(d UpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) UpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUserDtoLastConnectedNode returns new NilUserDtoLastConnectedNode with value set to v.
func NewNilUserDtoLastConnectedNode(v UserDtoLastConnectedNode) NilUserDtoLastConnectedNode {
	return NilUserDtoLastConnectedNode{
		Value: v,
	}
}

// NilUserDtoLastConnectedNode is nullable UserDtoLastConnectedNode.
type NilUserDtoLastConnectedNode struct {
	Value UserDtoLastConnectedNode
	Null  bool
}

// SetTo sets value to v.
func (o *NilUserDtoLastConnectedNode) SetTo(v UserDtoLastConnectedNode) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilUserDtoLastConnectedNode) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilUserDtoLastConnectedNode) SetToNull() {
	o.Null = true
	var v UserDtoLastConnectedNode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilUserDtoLastConnectedNode) Get() (v UserDtoLastConnectedNode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUserDtoLastConnectedNode) Or(d UserDtoLastConnectedNode) UserDtoLastConnectedNode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptActivateAllInboundsResponseDtoResponseStatus returns new OptActivateAllInboundsResponseDtoResponseStatus with value set to v.
func NewOptActivateAllInboundsResponseDtoResponseStatus(v ActivateAllInboundsResponseDtoResponseStatus) OptActivateAllInboundsResponseDtoResponseStatus {
	return OptActivateAllInboundsResponseDtoResponseStatus{
		Value: v,
		Set:   true,
	}
}

// OptActivateAllInboundsResponseDtoResponseStatus is optional ActivateAllInboundsResponseDtoResponseStatus.
type OptActivateAllInboundsResponseDtoResponseStatus struct {
	Value ActivateAllInboundsResponseDtoResponseStatus
	Set   bool
}

// IsSet returns true if OptActivateAllInboundsResponseDtoResponseStatus was set.
func (o OptActivateAllInboundsResponseDtoResponseStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptActivateAllInboundsResponseDtoResponseStatus) Reset() {
	var v ActivateAllInboundsResponseDtoResponseStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptActivateAllInboundsResponseDtoResponseStatus) SetTo(v ActivateAllInboundsResponseDtoResponseStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptActivateAllInboundsResponseDtoResponseStatus) Get() (v ActivateAllInboundsResponseDtoResponseStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptActivateAllInboundsResponseDtoResponseStatus) Or(d ActivateAllInboundsResponseDtoResponseStatus) ActivateAllInboundsResponseDtoResponseStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy returns new OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy with value set to v.
func NewOptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy(v ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy) OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy {
	return OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy is optional ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy.
type OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy struct {
	Value ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy was set.
func (o OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy) Reset() {
	var v ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy) SetTo(v ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy) Get() (v ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptActivateAllInboundsResponseDtoResponseTrafficLimitStrategy) Or(d ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy) ActivateAllInboundsResponseDtoResponseTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkAllUpdateUsersRequestDtoStatus returns new OptBulkAllUpdateUsersRequestDtoStatus with value set to v.
func NewOptBulkAllUpdateUsersRequestDtoStatus(v BulkAllUpdateUsersRequestDtoStatus) OptBulkAllUpdateUsersRequestDtoStatus {
	return OptBulkAllUpdateUsersRequestDtoStatus{
		Value: v,
		Set:   true,
	}
}

// OptBulkAllUpdateUsersRequestDtoStatus is optional BulkAllUpdateUsersRequestDtoStatus.
type OptBulkAllUpdateUsersRequestDtoStatus struct {
	Value BulkAllUpdateUsersRequestDtoStatus
	Set   bool
}

// IsSet returns true if OptBulkAllUpdateUsersRequestDtoStatus was set.
func (o OptBulkAllUpdateUsersRequestDtoStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkAllUpdateUsersRequestDtoStatus) Reset() {
	var v BulkAllUpdateUsersRequestDtoStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkAllUpdateUsersRequestDtoStatus) SetTo(v BulkAllUpdateUsersRequestDtoStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkAllUpdateUsersRequestDtoStatus) Get() (v BulkAllUpdateUsersRequestDtoStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkAllUpdateUsersRequestDtoStatus) Or(d BulkAllUpdateUsersRequestDtoStatus) BulkAllUpdateUsersRequestDtoStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy returns new OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy with value set to v.
func NewOptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy(v BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy {
	return OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy is optional BulkAllUpdateUsersRequestDtoTrafficLimitStrategy.
type OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy struct {
	Value BulkAllUpdateUsersRequestDtoTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy was set.
func (o OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) Reset() {
	var v BulkAllUpdateUsersRequestDtoTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) SetTo(v BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) Get() (v BulkAllUpdateUsersRequestDtoTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkAllUpdateUsersRequestDtoTrafficLimitStrategy) Or(d BulkAllUpdateUsersRequestDtoTrafficLimitStrategy) BulkAllUpdateUsersRequestDtoTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkDeleteHostsResponseDtoResponseItemSecurityLayer returns new OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer with value set to v.
func NewOptBulkDeleteHostsResponseDtoResponseItemSecurityLayer(v BulkDeleteHostsResponseDtoResponseItemSecurityLayer) OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer {
	return OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer is optional BulkDeleteHostsResponseDtoResponseItemSecurityLayer.
type OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer struct {
	Value BulkDeleteHostsResponseDtoResponseItemSecurityLayer
	Set   bool
}

// IsSet returns true if OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer was set.
func (o OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer) Reset() {
	var v BulkDeleteHostsResponseDtoResponseItemSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer) SetTo(v BulkDeleteHostsResponseDtoResponseItemSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer) Get() (v BulkDeleteHostsResponseDtoResponseItemSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkDeleteHostsResponseDtoResponseItemSecurityLayer) Or(d BulkDeleteHostsResponseDtoResponseItemSecurityLayer) BulkDeleteHostsResponseDtoResponseItemSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkDeleteUsersByStatusRequestDtoStatus returns new OptBulkDeleteUsersByStatusRequestDtoStatus with value set to v.
func NewOptBulkDeleteUsersByStatusRequestDtoStatus(v BulkDeleteUsersByStatusRequestDtoStatus) OptBulkDeleteUsersByStatusRequestDtoStatus {
	return OptBulkDeleteUsersByStatusRequestDtoStatus{
		Value: v,
		Set:   true,
	}
}

// OptBulkDeleteUsersByStatusRequestDtoStatus is optional BulkDeleteUsersByStatusRequestDtoStatus.
type OptBulkDeleteUsersByStatusRequestDtoStatus struct {
	Value BulkDeleteUsersByStatusRequestDtoStatus
	Set   bool
}

// IsSet returns true if OptBulkDeleteUsersByStatusRequestDtoStatus was set.
func (o OptBulkDeleteUsersByStatusRequestDtoStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkDeleteUsersByStatusRequestDtoStatus) Reset() {
	var v BulkDeleteUsersByStatusRequestDtoStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkDeleteUsersByStatusRequestDtoStatus) SetTo(v BulkDeleteUsersByStatusRequestDtoStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkDeleteUsersByStatusRequestDtoStatus) Get() (v BulkDeleteUsersByStatusRequestDtoStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkDeleteUsersByStatusRequestDtoStatus) Or(d BulkDeleteUsersByStatusRequestDtoStatus) BulkDeleteUsersByStatusRequestDtoStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkDisableHostsResponseDtoResponseItemSecurityLayer returns new OptBulkDisableHostsResponseDtoResponseItemSecurityLayer with value set to v.
func NewOptBulkDisableHostsResponseDtoResponseItemSecurityLayer(v BulkDisableHostsResponseDtoResponseItemSecurityLayer) OptBulkDisableHostsResponseDtoResponseItemSecurityLayer {
	return OptBulkDisableHostsResponseDtoResponseItemSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptBulkDisableHostsResponseDtoResponseItemSecurityLayer is optional BulkDisableHostsResponseDtoResponseItemSecurityLayer.
type OptBulkDisableHostsResponseDtoResponseItemSecurityLayer struct {
	Value BulkDisableHostsResponseDtoResponseItemSecurityLayer
	Set   bool
}

// IsSet returns true if OptBulkDisableHostsResponseDtoResponseItemSecurityLayer was set.
func (o OptBulkDisableHostsResponseDtoResponseItemSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkDisableHostsResponseDtoResponseItemSecurityLayer) Reset() {
	var v BulkDisableHostsResponseDtoResponseItemSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkDisableHostsResponseDtoResponseItemSecurityLayer) SetTo(v BulkDisableHostsResponseDtoResponseItemSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkDisableHostsResponseDtoResponseItemSecurityLayer) Get() (v BulkDisableHostsResponseDtoResponseItemSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkDisableHostsResponseDtoResponseItemSecurityLayer) Or(d BulkDisableHostsResponseDtoResponseItemSecurityLayer) BulkDisableHostsResponseDtoResponseItemSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkEnableHostsResponseDtoResponseItemSecurityLayer returns new OptBulkEnableHostsResponseDtoResponseItemSecurityLayer with value set to v.
func NewOptBulkEnableHostsResponseDtoResponseItemSecurityLayer(v BulkEnableHostsResponseDtoResponseItemSecurityLayer) OptBulkEnableHostsResponseDtoResponseItemSecurityLayer {
	return OptBulkEnableHostsResponseDtoResponseItemSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptBulkEnableHostsResponseDtoResponseItemSecurityLayer is optional BulkEnableHostsResponseDtoResponseItemSecurityLayer.
type OptBulkEnableHostsResponseDtoResponseItemSecurityLayer struct {
	Value BulkEnableHostsResponseDtoResponseItemSecurityLayer
	Set   bool
}

// IsSet returns true if OptBulkEnableHostsResponseDtoResponseItemSecurityLayer was set.
func (o OptBulkEnableHostsResponseDtoResponseItemSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkEnableHostsResponseDtoResponseItemSecurityLayer) Reset() {
	var v BulkEnableHostsResponseDtoResponseItemSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkEnableHostsResponseDtoResponseItemSecurityLayer) SetTo(v BulkEnableHostsResponseDtoResponseItemSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkEnableHostsResponseDtoResponseItemSecurityLayer) Get() (v BulkEnableHostsResponseDtoResponseItemSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkEnableHostsResponseDtoResponseItemSecurityLayer) Or(d BulkEnableHostsResponseDtoResponseItemSecurityLayer) BulkEnableHostsResponseDtoResponseItemSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkUpdateUsersRequestDtoFieldsStatus returns new OptBulkUpdateUsersRequestDtoFieldsStatus with value set to v.
func NewOptBulkUpdateUsersRequestDtoFieldsStatus(v BulkUpdateUsersRequestDtoFieldsStatus) OptBulkUpdateUsersRequestDtoFieldsStatus {
	return OptBulkUpdateUsersRequestDtoFieldsStatus{
		Value: v,
		Set:   true,
	}
}

// OptBulkUpdateUsersRequestDtoFieldsStatus is optional BulkUpdateUsersRequestDtoFieldsStatus.
type OptBulkUpdateUsersRequestDtoFieldsStatus struct {
	Value BulkUpdateUsersRequestDtoFieldsStatus
	Set   bool
}

// IsSet returns true if OptBulkUpdateUsersRequestDtoFieldsStatus was set.
func (o OptBulkUpdateUsersRequestDtoFieldsStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkUpdateUsersRequestDtoFieldsStatus) Reset() {
	var v BulkUpdateUsersRequestDtoFieldsStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkUpdateUsersRequestDtoFieldsStatus) SetTo(v BulkUpdateUsersRequestDtoFieldsStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkUpdateUsersRequestDtoFieldsStatus) Get() (v BulkUpdateUsersRequestDtoFieldsStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkUpdateUsersRequestDtoFieldsStatus) Or(d BulkUpdateUsersRequestDtoFieldsStatus) BulkUpdateUsersRequestDtoFieldsStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy returns new OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy with value set to v.
func NewOptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy(v BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy {
	return OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy is optional BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy.
type OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy struct {
	Value BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy was set.
func (o OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) Reset() {
	var v BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) SetTo(v BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) Get() (v BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) Or(d BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy) BulkUpdateUsersRequestDtoFieldsTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateHostRequestDtoSecurityLayer returns new OptCreateHostRequestDtoSecurityLayer with value set to v.
func NewOptCreateHostRequestDtoSecurityLayer(v CreateHostRequestDtoSecurityLayer) OptCreateHostRequestDtoSecurityLayer {
	return OptCreateHostRequestDtoSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptCreateHostRequestDtoSecurityLayer is optional CreateHostRequestDtoSecurityLayer.
type OptCreateHostRequestDtoSecurityLayer struct {
	Value CreateHostRequestDtoSecurityLayer
	Set   bool
}

// IsSet returns true if OptCreateHostRequestDtoSecurityLayer was set.
func (o OptCreateHostRequestDtoSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateHostRequestDtoSecurityLayer) Reset() {
	var v CreateHostRequestDtoSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateHostRequestDtoSecurityLayer) SetTo(v CreateHostRequestDtoSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateHostRequestDtoSecurityLayer) Get() (v CreateHostRequestDtoSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateHostRequestDtoSecurityLayer) Or(d CreateHostRequestDtoSecurityLayer) CreateHostRequestDtoSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateHostResponseDtoResponseSecurityLayer returns new OptCreateHostResponseDtoResponseSecurityLayer with value set to v.
func NewOptCreateHostResponseDtoResponseSecurityLayer(v CreateHostResponseDtoResponseSecurityLayer) OptCreateHostResponseDtoResponseSecurityLayer {
	return OptCreateHostResponseDtoResponseSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptCreateHostResponseDtoResponseSecurityLayer is optional CreateHostResponseDtoResponseSecurityLayer.
type OptCreateHostResponseDtoResponseSecurityLayer struct {
	Value CreateHostResponseDtoResponseSecurityLayer
	Set   bool
}

// IsSet returns true if OptCreateHostResponseDtoResponseSecurityLayer was set.
func (o OptCreateHostResponseDtoResponseSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateHostResponseDtoResponseSecurityLayer) Reset() {
	var v CreateHostResponseDtoResponseSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateHostResponseDtoResponseSecurityLayer) SetTo(v CreateHostResponseDtoResponseSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateHostResponseDtoResponseSecurityLayer) Get() (v CreateHostResponseDtoResponseSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateHostResponseDtoResponseSecurityLayer) Or(d CreateHostResponseDtoResponseSecurityLayer) CreateHostResponseDtoResponseSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateUserRequestDtoStatus returns new OptCreateUserRequestDtoStatus with value set to v.
func NewOptCreateUserRequestDtoStatus(v CreateUserRequestDtoStatus) OptCreateUserRequestDtoStatus {
	return OptCreateUserRequestDtoStatus{
		Value: v,
		Set:   true,
	}
}

// OptCreateUserRequestDtoStatus is optional CreateUserRequestDtoStatus.
type OptCreateUserRequestDtoStatus struct {
	Value CreateUserRequestDtoStatus
	Set   bool
}

// IsSet returns true if OptCreateUserRequestDtoStatus was set.
func (o OptCreateUserRequestDtoStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateUserRequestDtoStatus) Reset() {
	var v CreateUserRequestDtoStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateUserRequestDtoStatus) SetTo(v CreateUserRequestDtoStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateUserRequestDtoStatus) Get() (v CreateUserRequestDtoStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateUserRequestDtoStatus) Or(d CreateUserRequestDtoStatus) CreateUserRequestDtoStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDisableUserResponseDtoResponseStatus returns new OptDisableUserResponseDtoResponseStatus with value set to v.
func NewOptDisableUserResponseDtoResponseStatus(v DisableUserResponseDtoResponseStatus) OptDisableUserResponseDtoResponseStatus {
	return OptDisableUserResponseDtoResponseStatus{
		Value: v,
		Set:   true,
	}
}

// OptDisableUserResponseDtoResponseStatus is optional DisableUserResponseDtoResponseStatus.
type OptDisableUserResponseDtoResponseStatus struct {
	Value DisableUserResponseDtoResponseStatus
	Set   bool
}

// IsSet returns true if OptDisableUserResponseDtoResponseStatus was set.
func (o OptDisableUserResponseDtoResponseStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDisableUserResponseDtoResponseStatus) Reset() {
	var v DisableUserResponseDtoResponseStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDisableUserResponseDtoResponseStatus) SetTo(v DisableUserResponseDtoResponseStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDisableUserResponseDtoResponseStatus) Get() (v DisableUserResponseDtoResponseStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDisableUserResponseDtoResponseStatus) Or(d DisableUserResponseDtoResponseStatus) DisableUserResponseDtoResponseStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDisableUserResponseDtoResponseTrafficLimitStrategy returns new OptDisableUserResponseDtoResponseTrafficLimitStrategy with value set to v.
func NewOptDisableUserResponseDtoResponseTrafficLimitStrategy(v DisableUserResponseDtoResponseTrafficLimitStrategy) OptDisableUserResponseDtoResponseTrafficLimitStrategy {
	return OptDisableUserResponseDtoResponseTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptDisableUserResponseDtoResponseTrafficLimitStrategy is optional DisableUserResponseDtoResponseTrafficLimitStrategy.
type OptDisableUserResponseDtoResponseTrafficLimitStrategy struct {
	Value DisableUserResponseDtoResponseTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptDisableUserResponseDtoResponseTrafficLimitStrategy was set.
func (o OptDisableUserResponseDtoResponseTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDisableUserResponseDtoResponseTrafficLimitStrategy) Reset() {
	var v DisableUserResponseDtoResponseTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDisableUserResponseDtoResponseTrafficLimitStrategy) SetTo(v DisableUserResponseDtoResponseTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDisableUserResponseDtoResponseTrafficLimitStrategy) Get() (v DisableUserResponseDtoResponseTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDisableUserResponseDtoResponseTrafficLimitStrategy) Or(d DisableUserResponseDtoResponseTrafficLimitStrategy) DisableUserResponseDtoResponseTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEnableUserResponseDtoResponseStatus returns new OptEnableUserResponseDtoResponseStatus with value set to v.
func NewOptEnableUserResponseDtoResponseStatus(v EnableUserResponseDtoResponseStatus) OptEnableUserResponseDtoResponseStatus {
	return OptEnableUserResponseDtoResponseStatus{
		Value: v,
		Set:   true,
	}
}

// OptEnableUserResponseDtoResponseStatus is optional EnableUserResponseDtoResponseStatus.
type OptEnableUserResponseDtoResponseStatus struct {
	Value EnableUserResponseDtoResponseStatus
	Set   bool
}

// IsSet returns true if OptEnableUserResponseDtoResponseStatus was set.
func (o OptEnableUserResponseDtoResponseStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEnableUserResponseDtoResponseStatus) Reset() {
	var v EnableUserResponseDtoResponseStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnableUserResponseDtoResponseStatus) SetTo(v EnableUserResponseDtoResponseStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnableUserResponseDtoResponseStatus) Get() (v EnableUserResponseDtoResponseStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEnableUserResponseDtoResponseStatus) Or(d EnableUserResponseDtoResponseStatus) EnableUserResponseDtoResponseStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEnableUserResponseDtoResponseTrafficLimitStrategy returns new OptEnableUserResponseDtoResponseTrafficLimitStrategy with value set to v.
func NewOptEnableUserResponseDtoResponseTrafficLimitStrategy(v EnableUserResponseDtoResponseTrafficLimitStrategy) OptEnableUserResponseDtoResponseTrafficLimitStrategy {
	return OptEnableUserResponseDtoResponseTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptEnableUserResponseDtoResponseTrafficLimitStrategy is optional EnableUserResponseDtoResponseTrafficLimitStrategy.
type OptEnableUserResponseDtoResponseTrafficLimitStrategy struct {
	Value EnableUserResponseDtoResponseTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptEnableUserResponseDtoResponseTrafficLimitStrategy was set.
func (o OptEnableUserResponseDtoResponseTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEnableUserResponseDtoResponseTrafficLimitStrategy) Reset() {
	var v EnableUserResponseDtoResponseTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnableUserResponseDtoResponseTrafficLimitStrategy) SetTo(v EnableUserResponseDtoResponseTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnableUserResponseDtoResponseTrafficLimitStrategy) Get() (v EnableUserResponseDtoResponseTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEnableUserResponseDtoResponseTrafficLimitStrategy) Or(d EnableUserResponseDtoResponseTrafficLimitStrategy) EnableUserResponseDtoResponseTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAllHostsResponseDtoResponseItemSecurityLayer returns new OptGetAllHostsResponseDtoResponseItemSecurityLayer with value set to v.
func NewOptGetAllHostsResponseDtoResponseItemSecurityLayer(v GetAllHostsResponseDtoResponseItemSecurityLayer) OptGetAllHostsResponseDtoResponseItemSecurityLayer {
	return OptGetAllHostsResponseDtoResponseItemSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptGetAllHostsResponseDtoResponseItemSecurityLayer is optional GetAllHostsResponseDtoResponseItemSecurityLayer.
type OptGetAllHostsResponseDtoResponseItemSecurityLayer struct {
	Value GetAllHostsResponseDtoResponseItemSecurityLayer
	Set   bool
}

// IsSet returns true if OptGetAllHostsResponseDtoResponseItemSecurityLayer was set.
func (o OptGetAllHostsResponseDtoResponseItemSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAllHostsResponseDtoResponseItemSecurityLayer) Reset() {
	var v GetAllHostsResponseDtoResponseItemSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAllHostsResponseDtoResponseItemSecurityLayer) SetTo(v GetAllHostsResponseDtoResponseItemSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAllHostsResponseDtoResponseItemSecurityLayer) Get() (v GetAllHostsResponseDtoResponseItemSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAllHostsResponseDtoResponseItemSecurityLayer) Or(d GetAllHostsResponseDtoResponseItemSecurityLayer) GetAllHostsResponseDtoResponseItemSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetOneHostResponseDtoResponseSecurityLayer returns new OptGetOneHostResponseDtoResponseSecurityLayer with value set to v.
func NewOptGetOneHostResponseDtoResponseSecurityLayer(v GetOneHostResponseDtoResponseSecurityLayer) OptGetOneHostResponseDtoResponseSecurityLayer {
	return OptGetOneHostResponseDtoResponseSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptGetOneHostResponseDtoResponseSecurityLayer is optional GetOneHostResponseDtoResponseSecurityLayer.
type OptGetOneHostResponseDtoResponseSecurityLayer struct {
	Value GetOneHostResponseDtoResponseSecurityLayer
	Set   bool
}

// IsSet returns true if OptGetOneHostResponseDtoResponseSecurityLayer was set.
func (o OptGetOneHostResponseDtoResponseSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetOneHostResponseDtoResponseSecurityLayer) Reset() {
	var v GetOneHostResponseDtoResponseSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetOneHostResponseDtoResponseSecurityLayer) SetTo(v GetOneHostResponseDtoResponseSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetOneHostResponseDtoResponseSecurityLayer) Get() (v GetOneHostResponseDtoResponseSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetOneHostResponseDtoResponseSecurityLayer) Or(d GetOneHostResponseDtoResponseSecurityLayer) GetOneHostResponseDtoResponseSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetUserByTagResponseDtoResponseItemStatus returns new OptGetUserByTagResponseDtoResponseItemStatus with value set to v.
func NewOptGetUserByTagResponseDtoResponseItemStatus(v GetUserByTagResponseDtoResponseItemStatus) OptGetUserByTagResponseDtoResponseItemStatus {
	return OptGetUserByTagResponseDtoResponseItemStatus{
		Value: v,
		Set:   true,
	}
}

// OptGetUserByTagResponseDtoResponseItemStatus is optional GetUserByTagResponseDtoResponseItemStatus.
type OptGetUserByTagResponseDtoResponseItemStatus struct {
	Value GetUserByTagResponseDtoResponseItemStatus
	Set   bool
}

// IsSet returns true if OptGetUserByTagResponseDtoResponseItemStatus was set.
func (o OptGetUserByTagResponseDtoResponseItemStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetUserByTagResponseDtoResponseItemStatus) Reset() {
	var v GetUserByTagResponseDtoResponseItemStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetUserByTagResponseDtoResponseItemStatus) SetTo(v GetUserByTagResponseDtoResponseItemStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetUserByTagResponseDtoResponseItemStatus) Get() (v GetUserByTagResponseDtoResponseItemStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetUserByTagResponseDtoResponseItemStatus) Or(d GetUserByTagResponseDtoResponseItemStatus) GetUserByTagResponseDtoResponseItemStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy returns new OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy with value set to v.
func NewOptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy(v GetUserByTagResponseDtoResponseItemTrafficLimitStrategy) OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy {
	return OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy is optional GetUserByTagResponseDtoResponseItemTrafficLimitStrategy.
type OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy struct {
	Value GetUserByTagResponseDtoResponseItemTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy was set.
func (o OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy) Reset() {
	var v GetUserByTagResponseDtoResponseItemTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy) SetTo(v GetUserByTagResponseDtoResponseItemTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy) Get() (v GetUserByTagResponseDtoResponseItemTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetUserByTagResponseDtoResponseItemTrafficLimitStrategy) Or(d GetUserByTagResponseDtoResponseItemTrafficLimitStrategy) GetUserByTagResponseDtoResponseItemTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetUserByUuidResponseDtoResponseStatus returns new OptGetUserByUuidResponseDtoResponseStatus with value set to v.
func NewOptGetUserByUuidResponseDtoResponseStatus(v GetUserByUuidResponseDtoResponseStatus) OptGetUserByUuidResponseDtoResponseStatus {
	return OptGetUserByUuidResponseDtoResponseStatus{
		Value: v,
		Set:   true,
	}
}

// OptGetUserByUuidResponseDtoResponseStatus is optional GetUserByUuidResponseDtoResponseStatus.
type OptGetUserByUuidResponseDtoResponseStatus struct {
	Value GetUserByUuidResponseDtoResponseStatus
	Set   bool
}

// IsSet returns true if OptGetUserByUuidResponseDtoResponseStatus was set.
func (o OptGetUserByUuidResponseDtoResponseStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetUserByUuidResponseDtoResponseStatus) Reset() {
	var v GetUserByUuidResponseDtoResponseStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetUserByUuidResponseDtoResponseStatus) SetTo(v GetUserByUuidResponseDtoResponseStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetUserByUuidResponseDtoResponseStatus) Get() (v GetUserByUuidResponseDtoResponseStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetUserByUuidResponseDtoResponseStatus) Or(d GetUserByUuidResponseDtoResponseStatus) GetUserByUuidResponseDtoResponseStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetUserByUuidResponseDtoResponseTrafficLimitStrategy returns new OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy with value set to v.
func NewOptGetUserByUuidResponseDtoResponseTrafficLimitStrategy(v GetUserByUuidResponseDtoResponseTrafficLimitStrategy) OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy {
	return OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy is optional GetUserByUuidResponseDtoResponseTrafficLimitStrategy.
type OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy struct {
	Value GetUserByUuidResponseDtoResponseTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy was set.
func (o OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy) Reset() {
	var v GetUserByUuidResponseDtoResponseTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy) SetTo(v GetUserByUuidResponseDtoResponseTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy) Get() (v GetUserByUuidResponseDtoResponseTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetUserByUuidResponseDtoResponseTrafficLimitStrategy) Or(d GetUserByUuidResponseDtoResponseTrafficLimitStrategy) GetUserByUuidResponseDtoResponseTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateHostRequestDtoAlpn returns new OptNilCreateHostRequestDtoAlpn with value set to v.
func NewOptNilCreateHostRequestDtoAlpn(v CreateHostRequestDtoAlpn) OptNilCreateHostRequestDtoAlpn {
	return OptNilCreateHostRequestDtoAlpn{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateHostRequestDtoAlpn is optional nullable CreateHostRequestDtoAlpn.
type OptNilCreateHostRequestDtoAlpn struct {
	Value CreateHostRequestDtoAlpn
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateHostRequestDtoAlpn was set.
func (o OptNilCreateHostRequestDtoAlpn) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateHostRequestDtoAlpn) Reset() {
	var v CreateHostRequestDtoAlpn
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateHostRequestDtoAlpn) SetTo(v CreateHostRequestDtoAlpn) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateHostRequestDtoAlpn) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateHostRequestDtoAlpn) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateHostRequestDtoAlpn
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateHostRequestDtoAlpn) Get() (v CreateHostRequestDtoAlpn, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateHostRequestDtoAlpn) Or(d CreateHostRequestDtoAlpn) CreateHostRequestDtoAlpn {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateHostRequestDtoFingerprint returns new OptNilCreateHostRequestDtoFingerprint with value set to v.
func NewOptNilCreateHostRequestDtoFingerprint(v CreateHostRequestDtoFingerprint) OptNilCreateHostRequestDtoFingerprint {
	return OptNilCreateHostRequestDtoFingerprint{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateHostRequestDtoFingerprint is optional nullable CreateHostRequestDtoFingerprint.
type OptNilCreateHostRequestDtoFingerprint struct {
	Value CreateHostRequestDtoFingerprint
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateHostRequestDtoFingerprint was set.
func (o OptNilCreateHostRequestDtoFingerprint) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateHostRequestDtoFingerprint) Reset() {
	var v CreateHostRequestDtoFingerprint
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateHostRequestDtoFingerprint) SetTo(v CreateHostRequestDtoFingerprint) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateHostRequestDtoFingerprint) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateHostRequestDtoFingerprint) SetToNull() {
	o.Set = true
	o.Null = true
	var v CreateHostRequestDtoFingerprint
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateHostRequestDtoFingerprint) Get() (v CreateHostRequestDtoFingerprint, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateHostRequestDtoFingerprint) Or(d CreateHostRequestDtoFingerprint) CreateHostRequestDtoFingerprint {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilInt) SetToNull() {
	o.Set = true
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpdateHostRequestDtoAlpn returns new OptNilUpdateHostRequestDtoAlpn with value set to v.
func NewOptNilUpdateHostRequestDtoAlpn(v UpdateHostRequestDtoAlpn) OptNilUpdateHostRequestDtoAlpn {
	return OptNilUpdateHostRequestDtoAlpn{
		Value: v,
		Set:   true,
	}
}

// OptNilUpdateHostRequestDtoAlpn is optional nullable UpdateHostRequestDtoAlpn.
type OptNilUpdateHostRequestDtoAlpn struct {
	Value UpdateHostRequestDtoAlpn
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpdateHostRequestDtoAlpn was set.
func (o OptNilUpdateHostRequestDtoAlpn) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpdateHostRequestDtoAlpn) Reset() {
	var v UpdateHostRequestDtoAlpn
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpdateHostRequestDtoAlpn) SetTo(v UpdateHostRequestDtoAlpn) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUpdateHostRequestDtoAlpn) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUpdateHostRequestDtoAlpn) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpdateHostRequestDtoAlpn
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpdateHostRequestDtoAlpn) Get() (v UpdateHostRequestDtoAlpn, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpdateHostRequestDtoAlpn) Or(d UpdateHostRequestDtoAlpn) UpdateHostRequestDtoAlpn {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpdateHostRequestDtoFingerprint returns new OptNilUpdateHostRequestDtoFingerprint with value set to v.
func NewOptNilUpdateHostRequestDtoFingerprint(v UpdateHostRequestDtoFingerprint) OptNilUpdateHostRequestDtoFingerprint {
	return OptNilUpdateHostRequestDtoFingerprint{
		Value: v,
		Set:   true,
	}
}

// OptNilUpdateHostRequestDtoFingerprint is optional nullable UpdateHostRequestDtoFingerprint.
type OptNilUpdateHostRequestDtoFingerprint struct {
	Value UpdateHostRequestDtoFingerprint
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpdateHostRequestDtoFingerprint was set.
func (o OptNilUpdateHostRequestDtoFingerprint) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpdateHostRequestDtoFingerprint) Reset() {
	var v UpdateHostRequestDtoFingerprint
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpdateHostRequestDtoFingerprint) SetTo(v UpdateHostRequestDtoFingerprint) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUpdateHostRequestDtoFingerprint) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUpdateHostRequestDtoFingerprint) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpdateHostRequestDtoFingerprint
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpdateHostRequestDtoFingerprint) Get() (v UpdateHostRequestDtoFingerprint, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpdateHostRequestDtoFingerprint) Or(d UpdateHostRequestDtoFingerprint) UpdateHostRequestDtoFingerprint {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptResetUserTrafficResponseDtoResponseStatus returns new OptResetUserTrafficResponseDtoResponseStatus with value set to v.
func NewOptResetUserTrafficResponseDtoResponseStatus(v ResetUserTrafficResponseDtoResponseStatus) OptResetUserTrafficResponseDtoResponseStatus {
	return OptResetUserTrafficResponseDtoResponseStatus{
		Value: v,
		Set:   true,
	}
}

// OptResetUserTrafficResponseDtoResponseStatus is optional ResetUserTrafficResponseDtoResponseStatus.
type OptResetUserTrafficResponseDtoResponseStatus struct {
	Value ResetUserTrafficResponseDtoResponseStatus
	Set   bool
}

// IsSet returns true if OptResetUserTrafficResponseDtoResponseStatus was set.
func (o OptResetUserTrafficResponseDtoResponseStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptResetUserTrafficResponseDtoResponseStatus) Reset() {
	var v ResetUserTrafficResponseDtoResponseStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptResetUserTrafficResponseDtoResponseStatus) SetTo(v ResetUserTrafficResponseDtoResponseStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptResetUserTrafficResponseDtoResponseStatus) Get() (v ResetUserTrafficResponseDtoResponseStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptResetUserTrafficResponseDtoResponseStatus) Or(d ResetUserTrafficResponseDtoResponseStatus) ResetUserTrafficResponseDtoResponseStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptResetUserTrafficResponseDtoResponseTrafficLimitStrategy returns new OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy with value set to v.
func NewOptResetUserTrafficResponseDtoResponseTrafficLimitStrategy(v ResetUserTrafficResponseDtoResponseTrafficLimitStrategy) OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy {
	return OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy is optional ResetUserTrafficResponseDtoResponseTrafficLimitStrategy.
type OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy struct {
	Value ResetUserTrafficResponseDtoResponseTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy was set.
func (o OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy) Reset() {
	var v ResetUserTrafficResponseDtoResponseTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy) SetTo(v ResetUserTrafficResponseDtoResponseTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy) Get() (v ResetUserTrafficResponseDtoResponseTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy) Or(d ResetUserTrafficResponseDtoResponseTrafficLimitStrategy) ResetUserTrafficResponseDtoResponseTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRevokeUserSubscriptionResponseDtoResponseStatus returns new OptRevokeUserSubscriptionResponseDtoResponseStatus with value set to v.
func NewOptRevokeUserSubscriptionResponseDtoResponseStatus(v RevokeUserSubscriptionResponseDtoResponseStatus) OptRevokeUserSubscriptionResponseDtoResponseStatus {
	return OptRevokeUserSubscriptionResponseDtoResponseStatus{
		Value: v,
		Set:   true,
	}
}

// OptRevokeUserSubscriptionResponseDtoResponseStatus is optional RevokeUserSubscriptionResponseDtoResponseStatus.
type OptRevokeUserSubscriptionResponseDtoResponseStatus struct {
	Value RevokeUserSubscriptionResponseDtoResponseStatus
	Set   bool
}

// IsSet returns true if OptRevokeUserSubscriptionResponseDtoResponseStatus was set.
func (o OptRevokeUserSubscriptionResponseDtoResponseStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRevokeUserSubscriptionResponseDtoResponseStatus) Reset() {
	var v RevokeUserSubscriptionResponseDtoResponseStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRevokeUserSubscriptionResponseDtoResponseStatus) SetTo(v RevokeUserSubscriptionResponseDtoResponseStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRevokeUserSubscriptionResponseDtoResponseStatus) Get() (v RevokeUserSubscriptionResponseDtoResponseStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRevokeUserSubscriptionResponseDtoResponseStatus) Or(d RevokeUserSubscriptionResponseDtoResponseStatus) RevokeUserSubscriptionResponseDtoResponseStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy returns new OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy with value set to v.
func NewOptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy(v RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy {
	return OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy is optional RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy.
type OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy struct {
	Value RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy was set.
func (o OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) Reset() {
	var v RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) SetTo(v RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) Get() (v RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) Or(d RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer returns new OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer with value set to v.
func NewOptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer(v SetInboundToManyHostsResponseDtoResponseItemSecurityLayer) OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer {
	return OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer is optional SetInboundToManyHostsResponseDtoResponseItemSecurityLayer.
type OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer struct {
	Value SetInboundToManyHostsResponseDtoResponseItemSecurityLayer
	Set   bool
}

// IsSet returns true if OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer was set.
func (o OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer) Reset() {
	var v SetInboundToManyHostsResponseDtoResponseItemSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer) SetTo(v SetInboundToManyHostsResponseDtoResponseItemSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer) Get() (v SetInboundToManyHostsResponseDtoResponseItemSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer) Or(d SetInboundToManyHostsResponseDtoResponseItemSecurityLayer) SetInboundToManyHostsResponseDtoResponseItemSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSetPortToManyHostsResponseDtoResponseItemSecurityLayer returns new OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer with value set to v.
func NewOptSetPortToManyHostsResponseDtoResponseItemSecurityLayer(v SetPortToManyHostsResponseDtoResponseItemSecurityLayer) OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer {
	return OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer is optional SetPortToManyHostsResponseDtoResponseItemSecurityLayer.
type OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer struct {
	Value SetPortToManyHostsResponseDtoResponseItemSecurityLayer
	Set   bool
}

// IsSet returns true if OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer was set.
func (o OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer) Reset() {
	var v SetPortToManyHostsResponseDtoResponseItemSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer) SetTo(v SetPortToManyHostsResponseDtoResponseItemSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer) Get() (v SetPortToManyHostsResponseDtoResponseItemSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer) Or(d SetPortToManyHostsResponseDtoResponseItemSecurityLayer) SetPortToManyHostsResponseDtoResponseItemSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateHostRequestDtoSecurityLayer returns new OptUpdateHostRequestDtoSecurityLayer with value set to v.
func NewOptUpdateHostRequestDtoSecurityLayer(v UpdateHostRequestDtoSecurityLayer) OptUpdateHostRequestDtoSecurityLayer {
	return OptUpdateHostRequestDtoSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptUpdateHostRequestDtoSecurityLayer is optional UpdateHostRequestDtoSecurityLayer.
type OptUpdateHostRequestDtoSecurityLayer struct {
	Value UpdateHostRequestDtoSecurityLayer
	Set   bool
}

// IsSet returns true if OptUpdateHostRequestDtoSecurityLayer was set.
func (o OptUpdateHostRequestDtoSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateHostRequestDtoSecurityLayer) Reset() {
	var v UpdateHostRequestDtoSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateHostRequestDtoSecurityLayer) SetTo(v UpdateHostRequestDtoSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateHostRequestDtoSecurityLayer) Get() (v UpdateHostRequestDtoSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateHostRequestDtoSecurityLayer) Or(d UpdateHostRequestDtoSecurityLayer) UpdateHostRequestDtoSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateHostResponseDtoResponseSecurityLayer returns new OptUpdateHostResponseDtoResponseSecurityLayer with value set to v.
func NewOptUpdateHostResponseDtoResponseSecurityLayer(v UpdateHostResponseDtoResponseSecurityLayer) OptUpdateHostResponseDtoResponseSecurityLayer {
	return OptUpdateHostResponseDtoResponseSecurityLayer{
		Value: v,
		Set:   true,
	}
}

// OptUpdateHostResponseDtoResponseSecurityLayer is optional UpdateHostResponseDtoResponseSecurityLayer.
type OptUpdateHostResponseDtoResponseSecurityLayer struct {
	Value UpdateHostResponseDtoResponseSecurityLayer
	Set   bool
}

// IsSet returns true if OptUpdateHostResponseDtoResponseSecurityLayer was set.
func (o OptUpdateHostResponseDtoResponseSecurityLayer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateHostResponseDtoResponseSecurityLayer) Reset() {
	var v UpdateHostResponseDtoResponseSecurityLayer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateHostResponseDtoResponseSecurityLayer) SetTo(v UpdateHostResponseDtoResponseSecurityLayer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateHostResponseDtoResponseSecurityLayer) Get() (v UpdateHostResponseDtoResponseSecurityLayer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateHostResponseDtoResponseSecurityLayer) Or(d UpdateHostResponseDtoResponseSecurityLayer) UpdateHostResponseDtoResponseSecurityLayer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders returns new OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders with value set to v.
func NewOptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders(v UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders {
	return OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders is optional UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders.
type OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders struct {
	Value UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders
	Set   bool
}

// IsSet returns true if OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders was set.
func (o OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) Reset() {
	var v UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) SetTo(v UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) Get() (v UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) Or(d UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserRequestDtoStatus returns new OptUpdateUserRequestDtoStatus with value set to v.
func NewOptUpdateUserRequestDtoStatus(v UpdateUserRequestDtoStatus) OptUpdateUserRequestDtoStatus {
	return OptUpdateUserRequestDtoStatus{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserRequestDtoStatus is optional UpdateUserRequestDtoStatus.
type OptUpdateUserRequestDtoStatus struct {
	Value UpdateUserRequestDtoStatus
	Set   bool
}

// IsSet returns true if OptUpdateUserRequestDtoStatus was set.
func (o OptUpdateUserRequestDtoStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserRequestDtoStatus) Reset() {
	var v UpdateUserRequestDtoStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserRequestDtoStatus) SetTo(v UpdateUserRequestDtoStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserRequestDtoStatus) Get() (v UpdateUserRequestDtoStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserRequestDtoStatus) Or(d UpdateUserRequestDtoStatus) UpdateUserRequestDtoStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserRequestDtoTrafficLimitStrategy returns new OptUpdateUserRequestDtoTrafficLimitStrategy with value set to v.
func NewOptUpdateUserRequestDtoTrafficLimitStrategy(v UpdateUserRequestDtoTrafficLimitStrategy) OptUpdateUserRequestDtoTrafficLimitStrategy {
	return OptUpdateUserRequestDtoTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserRequestDtoTrafficLimitStrategy is optional UpdateUserRequestDtoTrafficLimitStrategy.
type OptUpdateUserRequestDtoTrafficLimitStrategy struct {
	Value UpdateUserRequestDtoTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptUpdateUserRequestDtoTrafficLimitStrategy was set.
func (o OptUpdateUserRequestDtoTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserRequestDtoTrafficLimitStrategy) Reset() {
	var v UpdateUserRequestDtoTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserRequestDtoTrafficLimitStrategy) SetTo(v UpdateUserRequestDtoTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserRequestDtoTrafficLimitStrategy) Get() (v UpdateUserRequestDtoTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserRequestDtoTrafficLimitStrategy) Or(d UpdateUserRequestDtoTrafficLimitStrategy) UpdateUserRequestDtoTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserDtoStatus returns new OptUserDtoStatus with value set to v.
func NewOptUserDtoStatus(v UserDtoStatus) OptUserDtoStatus {
	return OptUserDtoStatus{
		Value: v,
		Set:   true,
	}
}

// OptUserDtoStatus is optional UserDtoStatus.
type OptUserDtoStatus struct {
	Value UserDtoStatus
	Set   bool
}

// IsSet returns true if OptUserDtoStatus was set.
func (o OptUserDtoStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserDtoStatus) Reset() {
	var v UserDtoStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserDtoStatus) SetTo(v UserDtoStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserDtoStatus) Get() (v UserDtoStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserDtoStatus) Or(d UserDtoStatus) UserDtoStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserDtoTrafficLimitStrategy returns new OptUserDtoTrafficLimitStrategy with value set to v.
func NewOptUserDtoTrafficLimitStrategy(v UserDtoTrafficLimitStrategy) OptUserDtoTrafficLimitStrategy {
	return OptUserDtoTrafficLimitStrategy{
		Value: v,
		Set:   true,
	}
}

// OptUserDtoTrafficLimitStrategy is optional UserDtoTrafficLimitStrategy.
type OptUserDtoTrafficLimitStrategy struct {
	Value UserDtoTrafficLimitStrategy
	Set   bool
}

// IsSet returns true if OptUserDtoTrafficLimitStrategy was set.
func (o OptUserDtoTrafficLimitStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserDtoTrafficLimitStrategy) Reset() {
	var v UserDtoTrafficLimitStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserDtoTrafficLimitStrategy) SetTo(v UserDtoTrafficLimitStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserDtoTrafficLimitStrategy) Get() (v UserDtoTrafficLimitStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserDtoTrafficLimitStrategy) Or(d UserDtoTrafficLimitStrategy) UserDtoTrafficLimitStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/RegisterRequestDto
type RegisterRequestDto struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

// GetUsername returns the value of Username.
func (s *RegisterRequestDto) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *RegisterRequestDto) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *RegisterRequestDto) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *RegisterRequestDto) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/RegisterResponseDto
type RegisterResponseDto struct {
	Response RegisterResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *RegisterResponseDto) GetResponse() RegisterResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *RegisterResponseDto) SetResponse(val RegisterResponseDtoResponse) {
	s.Response = val
}

type RegisterResponseDtoResponse struct {
	AccessToken string `json:"accessToken"`
}

// GetAccessToken returns the value of AccessToken.
func (s *RegisterResponseDtoResponse) GetAccessToken() string {
	return s.AccessToken
}

// SetAccessToken sets the value of AccessToken.
func (s *RegisterResponseDtoResponse) SetAccessToken(val string) {
	s.AccessToken = val
}

// RegisterResponseDtoStatusCode wraps RegisterResponseDto with StatusCode.
type RegisterResponseDtoStatusCode struct {
	StatusCode int
	Response   RegisterResponseDto
}

// GetStatusCode returns the value of StatusCode.
func (s *RegisterResponseDtoStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *RegisterResponseDtoStatusCode) GetResponse() RegisterResponseDto {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *RegisterResponseDtoStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *RegisterResponseDtoStatusCode) SetResponse(val RegisterResponseDto) {
	s.Response = val
}

func (*RegisterResponseDtoStatusCode) authControllerRegisterRes() {}

// Ref: #/components/schemas/RemoveInboundFromNodesRequestDto
type RemoveInboundFromNodesRequestDto struct {
	InboundUuid uuid.UUID `json:"inboundUuid"`
}

// GetInboundUuid returns the value of InboundUuid.
func (s *RemoveInboundFromNodesRequestDto) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// SetInboundUuid sets the value of InboundUuid.
func (s *RemoveInboundFromNodesRequestDto) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// Ref: #/components/schemas/RemoveInboundFromNodesResponseDto
type RemoveInboundFromNodesResponseDto struct {
	Response RemoveInboundFromNodesResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *RemoveInboundFromNodesResponseDto) GetResponse() RemoveInboundFromNodesResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *RemoveInboundFromNodesResponseDto) SetResponse(val RemoveInboundFromNodesResponseDtoResponse) {
	s.Response = val
}

type RemoveInboundFromNodesResponseDtoResponse struct {
	IsSuccess bool `json:"isSuccess"`
}

// GetIsSuccess returns the value of IsSuccess.
func (s *RemoveInboundFromNodesResponseDtoResponse) GetIsSuccess() bool {
	return s.IsSuccess
}

// SetIsSuccess sets the value of IsSuccess.
func (s *RemoveInboundFromNodesResponseDtoResponse) SetIsSuccess(val bool) {
	s.IsSuccess = val
}

// Ref: #/components/schemas/RemoveInboundFromUsersRequestDto
type RemoveInboundFromUsersRequestDto struct {
	InboundUuid uuid.UUID `json:"inboundUuid"`
}

// GetInboundUuid returns the value of InboundUuid.
func (s *RemoveInboundFromUsersRequestDto) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// SetInboundUuid sets the value of InboundUuid.
func (s *RemoveInboundFromUsersRequestDto) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// Ref: #/components/schemas/RemoveInboundFromUsersResponseDto
type RemoveInboundFromUsersResponseDto struct {
	Response RemoveInboundFromUsersResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *RemoveInboundFromUsersResponseDto) GetResponse() RemoveInboundFromUsersResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *RemoveInboundFromUsersResponseDto) SetResponse(val RemoveInboundFromUsersResponseDtoResponse) {
	s.Response = val
}

type RemoveInboundFromUsersResponseDtoResponse struct {
	IsSuccess bool `json:"isSuccess"`
}

// GetIsSuccess returns the value of IsSuccess.
func (s *RemoveInboundFromUsersResponseDtoResponse) GetIsSuccess() bool {
	return s.IsSuccess
}

// SetIsSuccess sets the value of IsSuccess.
func (s *RemoveInboundFromUsersResponseDtoResponse) SetIsSuccess(val bool) {
	s.IsSuccess = val
}

// Ref: #/components/schemas/ReorderHostRequestDto
type ReorderHostRequestDto struct {
	Hosts []ReorderHostRequestDtoHostsItem `json:"hosts"`
}

// GetHosts returns the value of Hosts.
func (s *ReorderHostRequestDto) GetHosts() []ReorderHostRequestDtoHostsItem {
	return s.Hosts
}

// SetHosts sets the value of Hosts.
func (s *ReorderHostRequestDto) SetHosts(val []ReorderHostRequestDtoHostsItem) {
	s.Hosts = val
}

type ReorderHostRequestDtoHostsItem struct {
	ViewPosition int       `json:"viewPosition"`
	UUID         uuid.UUID `json:"uuid"`
}

// GetViewPosition returns the value of ViewPosition.
func (s *ReorderHostRequestDtoHostsItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetUUID returns the value of UUID.
func (s *ReorderHostRequestDtoHostsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// SetViewPosition sets the value of ViewPosition.
func (s *ReorderHostRequestDtoHostsItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetUUID sets the value of UUID.
func (s *ReorderHostRequestDtoHostsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// Ref: #/components/schemas/ReorderHostResponseDto
type ReorderHostResponseDto struct {
	Response ReorderHostResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *ReorderHostResponseDto) GetResponse() ReorderHostResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *ReorderHostResponseDto) SetResponse(val ReorderHostResponseDtoResponse) {
	s.Response = val
}

type ReorderHostResponseDtoResponse struct {
	IsUpdated bool `json:"isUpdated"`
}

// GetIsUpdated returns the value of IsUpdated.
func (s *ReorderHostResponseDtoResponse) GetIsUpdated() bool {
	return s.IsUpdated
}

// SetIsUpdated sets the value of IsUpdated.
func (s *ReorderHostResponseDtoResponse) SetIsUpdated(val bool) {
	s.IsUpdated = val
}

// Ref: #/components/schemas/ReorderNodeRequestDto
type ReorderNodeRequestDto struct {
	Nodes []ReorderNodeRequestDtoNodesItem `json:"nodes"`
}

// GetNodes returns the value of Nodes.
func (s *ReorderNodeRequestDto) GetNodes() []ReorderNodeRequestDtoNodesItem {
	return s.Nodes
}

// SetNodes sets the value of Nodes.
func (s *ReorderNodeRequestDto) SetNodes(val []ReorderNodeRequestDtoNodesItem) {
	s.Nodes = val
}

type ReorderNodeRequestDtoNodesItem struct {
	ViewPosition int       `json:"viewPosition"`
	UUID         uuid.UUID `json:"uuid"`
}

// GetViewPosition returns the value of ViewPosition.
func (s *ReorderNodeRequestDtoNodesItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetUUID returns the value of UUID.
func (s *ReorderNodeRequestDtoNodesItem) GetUUID() uuid.UUID {
	return s.UUID
}

// SetViewPosition sets the value of ViewPosition.
func (s *ReorderNodeRequestDtoNodesItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetUUID sets the value of UUID.
func (s *ReorderNodeRequestDtoNodesItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// Ref: #/components/schemas/ReorderNodeResponseDto
type ReorderNodeResponseDto struct {
	Response []ReorderNodeResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *ReorderNodeResponseDto) GetResponse() []ReorderNodeResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *ReorderNodeResponseDto) SetResponse(val []ReorderNodeResponseDtoResponseItem) {
	s.Response = val
}

type ReorderNodeResponseDtoResponseItem struct {
	UUID                    uuid.UUID                                                `json:"uuid"`
	Name                    string                                                   `json:"name"`
	Address                 string                                                   `json:"address"`
	Port                    NilInt                                                   `json:"port"`
	IsConnected             bool                                                     `json:"isConnected"`
	IsDisabled              bool                                                     `json:"isDisabled"`
	IsConnecting            bool                                                     `json:"isConnecting"`
	IsNodeOnline            bool                                                     `json:"isNodeOnline"`
	IsXrayRunning           bool                                                     `json:"isXrayRunning"`
	LastStatusChange        NilDateTime                                              `json:"lastStatusChange"`
	LastStatusMessage       NilString                                                `json:"lastStatusMessage"`
	XrayVersion             NilString                                                `json:"xrayVersion"`
	XrayUptime              string                                                   `json:"xrayUptime"`
	IsTrafficTrackingActive bool                                                     `json:"isTrafficTrackingActive"`
	TrafficResetDay         NilInt                                                   `json:"trafficResetDay"`
	TrafficLimitBytes       NilFloat64                                               `json:"trafficLimitBytes"`
	TrafficUsedBytes        NilFloat64                                               `json:"trafficUsedBytes"`
	NotifyPercent           NilInt                                                   `json:"notifyPercent"`
	UsersOnline             NilInt                                                   `json:"usersOnline"`
	ViewPosition            int                                                      `json:"viewPosition"`
	CountryCode             string                                                   `json:"countryCode"`
	ConsumptionMultiplier   float64                                                  `json:"consumptionMultiplier"`
	CpuCount                NilInt                                                   `json:"cpuCount"`
	CpuModel                NilString                                                `json:"cpuModel"`
	TotalRam                NilString                                                `json:"totalRam"`
	CreatedAt               time.Time                                                `json:"createdAt"`
	UpdatedAt               time.Time                                                `json:"updatedAt"`
	ExcludedInbounds        []ReorderNodeResponseDtoResponseItemExcludedInboundsItem `json:"excludedInbounds"`
}

// GetUUID returns the value of UUID.
func (s *ReorderNodeResponseDtoResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *ReorderNodeResponseDtoResponseItem) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *ReorderNodeResponseDtoResponseItem) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *ReorderNodeResponseDtoResponseItem) GetPort() NilInt {
	return s.Port
}

// GetIsConnected returns the value of IsConnected.
func (s *ReorderNodeResponseDtoResponseItem) GetIsConnected() bool {
	return s.IsConnected
}

// GetIsDisabled returns the value of IsDisabled.
func (s *ReorderNodeResponseDtoResponseItem) GetIsDisabled() bool {
	return s.IsDisabled
}

// GetIsConnecting returns the value of IsConnecting.
func (s *ReorderNodeResponseDtoResponseItem) GetIsConnecting() bool {
	return s.IsConnecting
}

// GetIsNodeOnline returns the value of IsNodeOnline.
func (s *ReorderNodeResponseDtoResponseItem) GetIsNodeOnline() bool {
	return s.IsNodeOnline
}

// GetIsXrayRunning returns the value of IsXrayRunning.
func (s *ReorderNodeResponseDtoResponseItem) GetIsXrayRunning() bool {
	return s.IsXrayRunning
}

// GetLastStatusChange returns the value of LastStatusChange.
func (s *ReorderNodeResponseDtoResponseItem) GetLastStatusChange() NilDateTime {
	return s.LastStatusChange
}

// GetLastStatusMessage returns the value of LastStatusMessage.
func (s *ReorderNodeResponseDtoResponseItem) GetLastStatusMessage() NilString {
	return s.LastStatusMessage
}

// GetXrayVersion returns the value of XrayVersion.
func (s *ReorderNodeResponseDtoResponseItem) GetXrayVersion() NilString {
	return s.XrayVersion
}

// GetXrayUptime returns the value of XrayUptime.
func (s *ReorderNodeResponseDtoResponseItem) GetXrayUptime() string {
	return s.XrayUptime
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *ReorderNodeResponseDtoResponseItem) GetIsTrafficTrackingActive() bool {
	return s.IsTrafficTrackingActive
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *ReorderNodeResponseDtoResponseItem) GetTrafficResetDay() NilInt {
	return s.TrafficResetDay
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *ReorderNodeResponseDtoResponseItem) GetTrafficLimitBytes() NilFloat64 {
	return s.TrafficLimitBytes
}

// GetTrafficUsedBytes returns the value of TrafficUsedBytes.
func (s *ReorderNodeResponseDtoResponseItem) GetTrafficUsedBytes() NilFloat64 {
	return s.TrafficUsedBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *ReorderNodeResponseDtoResponseItem) GetNotifyPercent() NilInt {
	return s.NotifyPercent
}

// GetUsersOnline returns the value of UsersOnline.
func (s *ReorderNodeResponseDtoResponseItem) GetUsersOnline() NilInt {
	return s.UsersOnline
}

// GetViewPosition returns the value of ViewPosition.
func (s *ReorderNodeResponseDtoResponseItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetCountryCode returns the value of CountryCode.
func (s *ReorderNodeResponseDtoResponseItem) GetCountryCode() string {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *ReorderNodeResponseDtoResponseItem) GetConsumptionMultiplier() float64 {
	return s.ConsumptionMultiplier
}

// GetCpuCount returns the value of CpuCount.
func (s *ReorderNodeResponseDtoResponseItem) GetCpuCount() NilInt {
	return s.CpuCount
}

// GetCpuModel returns the value of CpuModel.
func (s *ReorderNodeResponseDtoResponseItem) GetCpuModel() NilString {
	return s.CpuModel
}

// GetTotalRam returns the value of TotalRam.
func (s *ReorderNodeResponseDtoResponseItem) GetTotalRam() NilString {
	return s.TotalRam
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ReorderNodeResponseDtoResponseItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ReorderNodeResponseDtoResponseItem) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetExcludedInbounds returns the value of ExcludedInbounds.
func (s *ReorderNodeResponseDtoResponseItem) GetExcludedInbounds() []ReorderNodeResponseDtoResponseItemExcludedInboundsItem {
	return s.ExcludedInbounds
}

// SetUUID sets the value of UUID.
func (s *ReorderNodeResponseDtoResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *ReorderNodeResponseDtoResponseItem) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *ReorderNodeResponseDtoResponseItem) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *ReorderNodeResponseDtoResponseItem) SetPort(val NilInt) {
	s.Port = val
}

// SetIsConnected sets the value of IsConnected.
func (s *ReorderNodeResponseDtoResponseItem) SetIsConnected(val bool) {
	s.IsConnected = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *ReorderNodeResponseDtoResponseItem) SetIsDisabled(val bool) {
	s.IsDisabled = val
}

// SetIsConnecting sets the value of IsConnecting.
func (s *ReorderNodeResponseDtoResponseItem) SetIsConnecting(val bool) {
	s.IsConnecting = val
}

// SetIsNodeOnline sets the value of IsNodeOnline.
func (s *ReorderNodeResponseDtoResponseItem) SetIsNodeOnline(val bool) {
	s.IsNodeOnline = val
}

// SetIsXrayRunning sets the value of IsXrayRunning.
func (s *ReorderNodeResponseDtoResponseItem) SetIsXrayRunning(val bool) {
	s.IsXrayRunning = val
}

// SetLastStatusChange sets the value of LastStatusChange.
func (s *ReorderNodeResponseDtoResponseItem) SetLastStatusChange(val NilDateTime) {
	s.LastStatusChange = val
}

// SetLastStatusMessage sets the value of LastStatusMessage.
func (s *ReorderNodeResponseDtoResponseItem) SetLastStatusMessage(val NilString) {
	s.LastStatusMessage = val
}

// SetXrayVersion sets the value of XrayVersion.
func (s *ReorderNodeResponseDtoResponseItem) SetXrayVersion(val NilString) {
	s.XrayVersion = val
}

// SetXrayUptime sets the value of XrayUptime.
func (s *ReorderNodeResponseDtoResponseItem) SetXrayUptime(val string) {
	s.XrayUptime = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *ReorderNodeResponseDtoResponseItem) SetIsTrafficTrackingActive(val bool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *ReorderNodeResponseDtoResponseItem) SetTrafficResetDay(val NilInt) {
	s.TrafficResetDay = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *ReorderNodeResponseDtoResponseItem) SetTrafficLimitBytes(val NilFloat64) {
	s.TrafficLimitBytes = val
}

// SetTrafficUsedBytes sets the value of TrafficUsedBytes.
func (s *ReorderNodeResponseDtoResponseItem) SetTrafficUsedBytes(val NilFloat64) {
	s.TrafficUsedBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *ReorderNodeResponseDtoResponseItem) SetNotifyPercent(val NilInt) {
	s.NotifyPercent = val
}

// SetUsersOnline sets the value of UsersOnline.
func (s *ReorderNodeResponseDtoResponseItem) SetUsersOnline(val NilInt) {
	s.UsersOnline = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *ReorderNodeResponseDtoResponseItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetCountryCode sets the value of CountryCode.
func (s *ReorderNodeResponseDtoResponseItem) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *ReorderNodeResponseDtoResponseItem) SetConsumptionMultiplier(val float64) {
	s.ConsumptionMultiplier = val
}

// SetCpuCount sets the value of CpuCount.
func (s *ReorderNodeResponseDtoResponseItem) SetCpuCount(val NilInt) {
	s.CpuCount = val
}

// SetCpuModel sets the value of CpuModel.
func (s *ReorderNodeResponseDtoResponseItem) SetCpuModel(val NilString) {
	s.CpuModel = val
}

// SetTotalRam sets the value of TotalRam.
func (s *ReorderNodeResponseDtoResponseItem) SetTotalRam(val NilString) {
	s.TotalRam = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ReorderNodeResponseDtoResponseItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ReorderNodeResponseDtoResponseItem) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetExcludedInbounds sets the value of ExcludedInbounds.
func (s *ReorderNodeResponseDtoResponseItem) SetExcludedInbounds(val []ReorderNodeResponseDtoResponseItemExcludedInboundsItem) {
	s.ExcludedInbounds = val
}

type ReorderNodeResponseDtoResponseItemExcludedInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *ReorderNodeResponseDtoResponseItemExcludedInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *ReorderNodeResponseDtoResponseItemExcludedInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *ReorderNodeResponseDtoResponseItemExcludedInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *ReorderNodeResponseDtoResponseItemExcludedInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *ReorderNodeResponseDtoResponseItemExcludedInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *ReorderNodeResponseDtoResponseItemExcludedInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *ReorderNodeResponseDtoResponseItemExcludedInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *ReorderNodeResponseDtoResponseItemExcludedInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *ReorderNodeResponseDtoResponseItemExcludedInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *ReorderNodeResponseDtoResponseItemExcludedInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// Ref: #/components/schemas/ResetUserTrafficResponseDto
type ResetUserTrafficResponseDto struct {
	Response ResetUserTrafficResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *ResetUserTrafficResponseDto) GetResponse() ResetUserTrafficResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *ResetUserTrafficResponseDto) SetResponse(val ResetUserTrafficResponseDtoResponse) {
	s.Response = val
}

func (*ResetUserTrafficResponseDto) usersControllerResetUserTrafficRes() {}

type ResetUserTrafficResponseDtoResponse struct {
	UUID                     uuid.UUID                                    `json:"uuid"`
	SubscriptionUuid         uuid.UUID                                    `json:"subscriptionUuid"`
	ShortUuid                string                                       `json:"shortUuid"`
	Username                 string                                       `json:"username"`
	Status                   OptResetUserTrafficResponseDtoResponseStatus `json:"status"`
	UsedTrafficBytes         float64                                      `json:"usedTrafficBytes"`
	LifetimeUsedTrafficBytes float64                                      `json:"lifetimeUsedTrafficBytes"`
	TrafficLimitBytes        OptInt                                       `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy  `json:"trafficLimitStrategy"`
	SubLastUserAgent     NilString                                                   `json:"subLastUserAgent"`
	SubLastOpenedAt      NilDateTime                                                 `json:"subLastOpenedAt"`
	ExpireAt             time.Time                                                   `json:"expireAt"`
	OnlineAt             NilDateTime                                                 `json:"onlineAt"`
	SubRevokedAt         NilDateTime                                                 `json:"subRevokedAt"`
	LastTrafficResetAt   NilDateTime                                                 `json:"lastTrafficResetAt"`
	TrojanPassword       string                                                      `json:"trojanPassword"`
	VlessUuid            uuid.UUID                                                   `json:"vlessUuid"`
	SsPassword           string                                                      `json:"ssPassword"`
	Description          NilString                                                   `json:"description"`
	Tag                  NilString                                                   `json:"tag"`
	TelegramId           NilInt                                                      `json:"telegramId"`
	Email                NilString                                                   `json:"email"`
	HwidDeviceLimit      NilInt                                                      `json:"hwidDeviceLimit"`
	CreatedAt            time.Time                                                   `json:"createdAt"`
	UpdatedAt            time.Time                                                   `json:"updatedAt"`
	ActiveUserInbounds   []ResetUserTrafficResponseDtoResponseActiveUserInboundsItem `json:"activeUserInbounds"`
	SubscriptionUrl      string                                                      `json:"subscriptionUrl"`
	LastConnectedNode    NilResetUserTrafficResponseDtoResponseLastConnectedNode     `json:"lastConnectedNode"`
	Happ                 ResetUserTrafficResponseDtoResponseHapp                     `json:"happ"`
}

// GetUUID returns the value of UUID.
func (s *ResetUserTrafficResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetSubscriptionUuid returns the value of SubscriptionUuid.
func (s *ResetUserTrafficResponseDtoResponse) GetSubscriptionUuid() uuid.UUID {
	return s.SubscriptionUuid
}

// GetShortUuid returns the value of ShortUuid.
func (s *ResetUserTrafficResponseDtoResponse) GetShortUuid() string {
	return s.ShortUuid
}

// GetUsername returns the value of Username.
func (s *ResetUserTrafficResponseDtoResponse) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *ResetUserTrafficResponseDtoResponse) GetStatus() OptResetUserTrafficResponseDtoResponseStatus {
	return s.Status
}

// GetUsedTrafficBytes returns the value of UsedTrafficBytes.
func (s *ResetUserTrafficResponseDtoResponse) GetUsedTrafficBytes() float64 {
	return s.UsedTrafficBytes
}

// GetLifetimeUsedTrafficBytes returns the value of LifetimeUsedTrafficBytes.
func (s *ResetUserTrafficResponseDtoResponse) GetLifetimeUsedTrafficBytes() float64 {
	return s.LifetimeUsedTrafficBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *ResetUserTrafficResponseDtoResponse) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *ResetUserTrafficResponseDtoResponse) GetTrafficLimitStrategy() OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetSubLastUserAgent returns the value of SubLastUserAgent.
func (s *ResetUserTrafficResponseDtoResponse) GetSubLastUserAgent() NilString {
	return s.SubLastUserAgent
}

// GetSubLastOpenedAt returns the value of SubLastOpenedAt.
func (s *ResetUserTrafficResponseDtoResponse) GetSubLastOpenedAt() NilDateTime {
	return s.SubLastOpenedAt
}

// GetExpireAt returns the value of ExpireAt.
func (s *ResetUserTrafficResponseDtoResponse) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetOnlineAt returns the value of OnlineAt.
func (s *ResetUserTrafficResponseDtoResponse) GetOnlineAt() NilDateTime {
	return s.OnlineAt
}

// GetSubRevokedAt returns the value of SubRevokedAt.
func (s *ResetUserTrafficResponseDtoResponse) GetSubRevokedAt() NilDateTime {
	return s.SubRevokedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *ResetUserTrafficResponseDtoResponse) GetLastTrafficResetAt() NilDateTime {
	return s.LastTrafficResetAt
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *ResetUserTrafficResponseDtoResponse) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *ResetUserTrafficResponseDtoResponse) GetVlessUuid() uuid.UUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *ResetUserTrafficResponseDtoResponse) GetSsPassword() string {
	return s.SsPassword
}

// GetDescription returns the value of Description.
func (s *ResetUserTrafficResponseDtoResponse) GetDescription() NilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *ResetUserTrafficResponseDtoResponse) GetTag() NilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *ResetUserTrafficResponseDtoResponse) GetTelegramId() NilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *ResetUserTrafficResponseDtoResponse) GetEmail() NilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *ResetUserTrafficResponseDtoResponse) GetHwidDeviceLimit() NilInt {
	return s.HwidDeviceLimit
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ResetUserTrafficResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ResetUserTrafficResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetActiveUserInbounds returns the value of ActiveUserInbounds.
func (s *ResetUserTrafficResponseDtoResponse) GetActiveUserInbounds() []ResetUserTrafficResponseDtoResponseActiveUserInboundsItem {
	return s.ActiveUserInbounds
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *ResetUserTrafficResponseDtoResponse) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetLastConnectedNode returns the value of LastConnectedNode.
func (s *ResetUserTrafficResponseDtoResponse) GetLastConnectedNode() NilResetUserTrafficResponseDtoResponseLastConnectedNode {
	return s.LastConnectedNode
}

// GetHapp returns the value of Happ.
func (s *ResetUserTrafficResponseDtoResponse) GetHapp() ResetUserTrafficResponseDtoResponseHapp {
	return s.Happ
}

// SetUUID sets the value of UUID.
func (s *ResetUserTrafficResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetSubscriptionUuid sets the value of SubscriptionUuid.
func (s *ResetUserTrafficResponseDtoResponse) SetSubscriptionUuid(val uuid.UUID) {
	s.SubscriptionUuid = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *ResetUserTrafficResponseDtoResponse) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetUsername sets the value of Username.
func (s *ResetUserTrafficResponseDtoResponse) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *ResetUserTrafficResponseDtoResponse) SetStatus(val OptResetUserTrafficResponseDtoResponseStatus) {
	s.Status = val
}

// SetUsedTrafficBytes sets the value of UsedTrafficBytes.
func (s *ResetUserTrafficResponseDtoResponse) SetUsedTrafficBytes(val float64) {
	s.UsedTrafficBytes = val
}

// SetLifetimeUsedTrafficBytes sets the value of LifetimeUsedTrafficBytes.
func (s *ResetUserTrafficResponseDtoResponse) SetLifetimeUsedTrafficBytes(val float64) {
	s.LifetimeUsedTrafficBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *ResetUserTrafficResponseDtoResponse) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *ResetUserTrafficResponseDtoResponse) SetTrafficLimitStrategy(val OptResetUserTrafficResponseDtoResponseTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetSubLastUserAgent sets the value of SubLastUserAgent.
func (s *ResetUserTrafficResponseDtoResponse) SetSubLastUserAgent(val NilString) {
	s.SubLastUserAgent = val
}

// SetSubLastOpenedAt sets the value of SubLastOpenedAt.
func (s *ResetUserTrafficResponseDtoResponse) SetSubLastOpenedAt(val NilDateTime) {
	s.SubLastOpenedAt = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *ResetUserTrafficResponseDtoResponse) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetOnlineAt sets the value of OnlineAt.
func (s *ResetUserTrafficResponseDtoResponse) SetOnlineAt(val NilDateTime) {
	s.OnlineAt = val
}

// SetSubRevokedAt sets the value of SubRevokedAt.
func (s *ResetUserTrafficResponseDtoResponse) SetSubRevokedAt(val NilDateTime) {
	s.SubRevokedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *ResetUserTrafficResponseDtoResponse) SetLastTrafficResetAt(val NilDateTime) {
	s.LastTrafficResetAt = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *ResetUserTrafficResponseDtoResponse) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *ResetUserTrafficResponseDtoResponse) SetVlessUuid(val uuid.UUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *ResetUserTrafficResponseDtoResponse) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetDescription sets the value of Description.
func (s *ResetUserTrafficResponseDtoResponse) SetDescription(val NilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *ResetUserTrafficResponseDtoResponse) SetTag(val NilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *ResetUserTrafficResponseDtoResponse) SetTelegramId(val NilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *ResetUserTrafficResponseDtoResponse) SetEmail(val NilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *ResetUserTrafficResponseDtoResponse) SetHwidDeviceLimit(val NilInt) {
	s.HwidDeviceLimit = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ResetUserTrafficResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ResetUserTrafficResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetActiveUserInbounds sets the value of ActiveUserInbounds.
func (s *ResetUserTrafficResponseDtoResponse) SetActiveUserInbounds(val []ResetUserTrafficResponseDtoResponseActiveUserInboundsItem) {
	s.ActiveUserInbounds = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *ResetUserTrafficResponseDtoResponse) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetLastConnectedNode sets the value of LastConnectedNode.
func (s *ResetUserTrafficResponseDtoResponse) SetLastConnectedNode(val NilResetUserTrafficResponseDtoResponseLastConnectedNode) {
	s.LastConnectedNode = val
}

// SetHapp sets the value of Happ.
func (s *ResetUserTrafficResponseDtoResponse) SetHapp(val ResetUserTrafficResponseDtoResponseHapp) {
	s.Happ = val
}

type ResetUserTrafficResponseDtoResponseActiveUserInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *ResetUserTrafficResponseDtoResponseActiveUserInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *ResetUserTrafficResponseDtoResponseActiveUserInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *ResetUserTrafficResponseDtoResponseActiveUserInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *ResetUserTrafficResponseDtoResponseActiveUserInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *ResetUserTrafficResponseDtoResponseActiveUserInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *ResetUserTrafficResponseDtoResponseActiveUserInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *ResetUserTrafficResponseDtoResponseActiveUserInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *ResetUserTrafficResponseDtoResponseActiveUserInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *ResetUserTrafficResponseDtoResponseActiveUserInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *ResetUserTrafficResponseDtoResponseActiveUserInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

type ResetUserTrafficResponseDtoResponseHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *ResetUserTrafficResponseDtoResponseHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *ResetUserTrafficResponseDtoResponseHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type ResetUserTrafficResponseDtoResponseLastConnectedNode struct {
	ConnectedAt time.Time `json:"connectedAt"`
	NodeName    string    `json:"nodeName"`
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *ResetUserTrafficResponseDtoResponseLastConnectedNode) GetConnectedAt() time.Time {
	return s.ConnectedAt
}

// GetNodeName returns the value of NodeName.
func (s *ResetUserTrafficResponseDtoResponseLastConnectedNode) GetNodeName() string {
	return s.NodeName
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *ResetUserTrafficResponseDtoResponseLastConnectedNode) SetConnectedAt(val time.Time) {
	s.ConnectedAt = val
}

// SetNodeName sets the value of NodeName.
func (s *ResetUserTrafficResponseDtoResponseLastConnectedNode) SetNodeName(val string) {
	s.NodeName = val
}

type ResetUserTrafficResponseDtoResponseStatus string

const (
	ResetUserTrafficResponseDtoResponseStatusACTIVE   ResetUserTrafficResponseDtoResponseStatus = "ACTIVE"
	ResetUserTrafficResponseDtoResponseStatusDISABLED ResetUserTrafficResponseDtoResponseStatus = "DISABLED"
	ResetUserTrafficResponseDtoResponseStatusLIMITED  ResetUserTrafficResponseDtoResponseStatus = "LIMITED"
	ResetUserTrafficResponseDtoResponseStatusEXPIRED  ResetUserTrafficResponseDtoResponseStatus = "EXPIRED"
)

// AllValues returns all ResetUserTrafficResponseDtoResponseStatus values.
func (ResetUserTrafficResponseDtoResponseStatus) AllValues() []ResetUserTrafficResponseDtoResponseStatus {
	return []ResetUserTrafficResponseDtoResponseStatus{
		ResetUserTrafficResponseDtoResponseStatusACTIVE,
		ResetUserTrafficResponseDtoResponseStatusDISABLED,
		ResetUserTrafficResponseDtoResponseStatusLIMITED,
		ResetUserTrafficResponseDtoResponseStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ResetUserTrafficResponseDtoResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case ResetUserTrafficResponseDtoResponseStatusACTIVE:
		return []byte(s), nil
	case ResetUserTrafficResponseDtoResponseStatusDISABLED:
		return []byte(s), nil
	case ResetUserTrafficResponseDtoResponseStatusLIMITED:
		return []byte(s), nil
	case ResetUserTrafficResponseDtoResponseStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ResetUserTrafficResponseDtoResponseStatus) UnmarshalText(data []byte) error {
	switch ResetUserTrafficResponseDtoResponseStatus(data) {
	case ResetUserTrafficResponseDtoResponseStatusACTIVE:
		*s = ResetUserTrafficResponseDtoResponseStatusACTIVE
		return nil
	case ResetUserTrafficResponseDtoResponseStatusDISABLED:
		*s = ResetUserTrafficResponseDtoResponseStatusDISABLED
		return nil
	case ResetUserTrafficResponseDtoResponseStatusLIMITED:
		*s = ResetUserTrafficResponseDtoResponseStatusLIMITED
		return nil
	case ResetUserTrafficResponseDtoResponseStatusEXPIRED:
		*s = ResetUserTrafficResponseDtoResponseStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type ResetUserTrafficResponseDtoResponseTrafficLimitStrategy string

const (
	ResetUserTrafficResponseDtoResponseTrafficLimitStrategyNORESET ResetUserTrafficResponseDtoResponseTrafficLimitStrategy = "NO_RESET"
	ResetUserTrafficResponseDtoResponseTrafficLimitStrategyDAY     ResetUserTrafficResponseDtoResponseTrafficLimitStrategy = "DAY"
	ResetUserTrafficResponseDtoResponseTrafficLimitStrategyWEEK    ResetUserTrafficResponseDtoResponseTrafficLimitStrategy = "WEEK"
	ResetUserTrafficResponseDtoResponseTrafficLimitStrategyMONTH   ResetUserTrafficResponseDtoResponseTrafficLimitStrategy = "MONTH"
)

// AllValues returns all ResetUserTrafficResponseDtoResponseTrafficLimitStrategy values.
func (ResetUserTrafficResponseDtoResponseTrafficLimitStrategy) AllValues() []ResetUserTrafficResponseDtoResponseTrafficLimitStrategy {
	return []ResetUserTrafficResponseDtoResponseTrafficLimitStrategy{
		ResetUserTrafficResponseDtoResponseTrafficLimitStrategyNORESET,
		ResetUserTrafficResponseDtoResponseTrafficLimitStrategyDAY,
		ResetUserTrafficResponseDtoResponseTrafficLimitStrategyWEEK,
		ResetUserTrafficResponseDtoResponseTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ResetUserTrafficResponseDtoResponseTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case ResetUserTrafficResponseDtoResponseTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case ResetUserTrafficResponseDtoResponseTrafficLimitStrategyDAY:
		return []byte(s), nil
	case ResetUserTrafficResponseDtoResponseTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case ResetUserTrafficResponseDtoResponseTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ResetUserTrafficResponseDtoResponseTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch ResetUserTrafficResponseDtoResponseTrafficLimitStrategy(data) {
	case ResetUserTrafficResponseDtoResponseTrafficLimitStrategyNORESET:
		*s = ResetUserTrafficResponseDtoResponseTrafficLimitStrategyNORESET
		return nil
	case ResetUserTrafficResponseDtoResponseTrafficLimitStrategyDAY:
		*s = ResetUserTrafficResponseDtoResponseTrafficLimitStrategyDAY
		return nil
	case ResetUserTrafficResponseDtoResponseTrafficLimitStrategyWEEK:
		*s = ResetUserTrafficResponseDtoResponseTrafficLimitStrategyWEEK
		return nil
	case ResetUserTrafficResponseDtoResponseTrafficLimitStrategyMONTH:
		*s = ResetUserTrafficResponseDtoResponseTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/RestartAllNodesResponseDto
type RestartAllNodesResponseDto struct {
	Response RestartAllNodesResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *RestartAllNodesResponseDto) GetResponse() RestartAllNodesResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *RestartAllNodesResponseDto) SetResponse(val RestartAllNodesResponseDtoResponse) {
	s.Response = val
}

type RestartAllNodesResponseDtoResponse struct {
	EventSent bool `json:"eventSent"`
}

// GetEventSent returns the value of EventSent.
func (s *RestartAllNodesResponseDtoResponse) GetEventSent() bool {
	return s.EventSent
}

// SetEventSent sets the value of EventSent.
func (s *RestartAllNodesResponseDtoResponse) SetEventSent(val bool) {
	s.EventSent = val
}

// Ref: #/components/schemas/RestartNodeResponseDto
type RestartNodeResponseDto struct {
	Response RestartNodeResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *RestartNodeResponseDto) GetResponse() RestartNodeResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *RestartNodeResponseDto) SetResponse(val RestartNodeResponseDtoResponse) {
	s.Response = val
}

type RestartNodeResponseDtoResponse struct {
	EventSent bool `json:"eventSent"`
}

// GetEventSent returns the value of EventSent.
func (s *RestartNodeResponseDtoResponse) GetEventSent() bool {
	return s.EventSent
}

// SetEventSent sets the value of EventSent.
func (s *RestartNodeResponseDtoResponse) SetEventSent(val bool) {
	s.EventSent = val
}

// Ref: #/components/schemas/RevokeUserSubscriptionResponseDto
type RevokeUserSubscriptionResponseDto struct {
	Response RevokeUserSubscriptionResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *RevokeUserSubscriptionResponseDto) GetResponse() RevokeUserSubscriptionResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *RevokeUserSubscriptionResponseDto) SetResponse(val RevokeUserSubscriptionResponseDtoResponse) {
	s.Response = val
}

func (*RevokeUserSubscriptionResponseDto) usersControllerRevokeUserSubscriptionRes() {}

type RevokeUserSubscriptionResponseDtoResponse struct {
	UUID                     uuid.UUID                                          `json:"uuid"`
	SubscriptionUuid         uuid.UUID                                          `json:"subscriptionUuid"`
	ShortUuid                string                                             `json:"shortUuid"`
	Username                 string                                             `json:"username"`
	Status                   OptRevokeUserSubscriptionResponseDtoResponseStatus `json:"status"`
	UsedTrafficBytes         float64                                            `json:"usedTrafficBytes"`
	LifetimeUsedTrafficBytes float64                                            `json:"lifetimeUsedTrafficBytes"`
	TrafficLimitBytes        OptInt                                             `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy  `json:"trafficLimitStrategy"`
	SubLastUserAgent     NilString                                                         `json:"subLastUserAgent"`
	SubLastOpenedAt      NilDateTime                                                       `json:"subLastOpenedAt"`
	ExpireAt             time.Time                                                         `json:"expireAt"`
	OnlineAt             NilDateTime                                                       `json:"onlineAt"`
	SubRevokedAt         NilDateTime                                                       `json:"subRevokedAt"`
	LastTrafficResetAt   NilDateTime                                                       `json:"lastTrafficResetAt"`
	TrojanPassword       string                                                            `json:"trojanPassword"`
	VlessUuid            uuid.UUID                                                         `json:"vlessUuid"`
	SsPassword           string                                                            `json:"ssPassword"`
	Description          NilString                                                         `json:"description"`
	Tag                  NilString                                                         `json:"tag"`
	TelegramId           NilInt                                                            `json:"telegramId"`
	Email                NilString                                                         `json:"email"`
	HwidDeviceLimit      NilInt                                                            `json:"hwidDeviceLimit"`
	CreatedAt            time.Time                                                         `json:"createdAt"`
	UpdatedAt            time.Time                                                         `json:"updatedAt"`
	ActiveUserInbounds   []RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem `json:"activeUserInbounds"`
	SubscriptionUrl      string                                                            `json:"subscriptionUrl"`
	LastConnectedNode    NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode     `json:"lastConnectedNode"`
	Happ                 RevokeUserSubscriptionResponseDtoResponseHapp                     `json:"happ"`
}

// GetUUID returns the value of UUID.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetSubscriptionUuid returns the value of SubscriptionUuid.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetSubscriptionUuid() uuid.UUID {
	return s.SubscriptionUuid
}

// GetShortUuid returns the value of ShortUuid.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetShortUuid() string {
	return s.ShortUuid
}

// GetUsername returns the value of Username.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetStatus() OptRevokeUserSubscriptionResponseDtoResponseStatus {
	return s.Status
}

// GetUsedTrafficBytes returns the value of UsedTrafficBytes.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetUsedTrafficBytes() float64 {
	return s.UsedTrafficBytes
}

// GetLifetimeUsedTrafficBytes returns the value of LifetimeUsedTrafficBytes.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetLifetimeUsedTrafficBytes() float64 {
	return s.LifetimeUsedTrafficBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetTrafficLimitStrategy() OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetSubLastUserAgent returns the value of SubLastUserAgent.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetSubLastUserAgent() NilString {
	return s.SubLastUserAgent
}

// GetSubLastOpenedAt returns the value of SubLastOpenedAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetSubLastOpenedAt() NilDateTime {
	return s.SubLastOpenedAt
}

// GetExpireAt returns the value of ExpireAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetOnlineAt returns the value of OnlineAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetOnlineAt() NilDateTime {
	return s.OnlineAt
}

// GetSubRevokedAt returns the value of SubRevokedAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetSubRevokedAt() NilDateTime {
	return s.SubRevokedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetLastTrafficResetAt() NilDateTime {
	return s.LastTrafficResetAt
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetVlessUuid() uuid.UUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetSsPassword() string {
	return s.SsPassword
}

// GetDescription returns the value of Description.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetDescription() NilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetTag() NilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetTelegramId() NilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetEmail() NilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetHwidDeviceLimit() NilInt {
	return s.HwidDeviceLimit
}

// GetCreatedAt returns the value of CreatedAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetActiveUserInbounds returns the value of ActiveUserInbounds.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetActiveUserInbounds() []RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem {
	return s.ActiveUserInbounds
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetLastConnectedNode returns the value of LastConnectedNode.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetLastConnectedNode() NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode {
	return s.LastConnectedNode
}

// GetHapp returns the value of Happ.
func (s *RevokeUserSubscriptionResponseDtoResponse) GetHapp() RevokeUserSubscriptionResponseDtoResponseHapp {
	return s.Happ
}

// SetUUID sets the value of UUID.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetSubscriptionUuid sets the value of SubscriptionUuid.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetSubscriptionUuid(val uuid.UUID) {
	s.SubscriptionUuid = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetUsername sets the value of Username.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetStatus(val OptRevokeUserSubscriptionResponseDtoResponseStatus) {
	s.Status = val
}

// SetUsedTrafficBytes sets the value of UsedTrafficBytes.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetUsedTrafficBytes(val float64) {
	s.UsedTrafficBytes = val
}

// SetLifetimeUsedTrafficBytes sets the value of LifetimeUsedTrafficBytes.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetLifetimeUsedTrafficBytes(val float64) {
	s.LifetimeUsedTrafficBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetTrafficLimitStrategy(val OptRevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetSubLastUserAgent sets the value of SubLastUserAgent.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetSubLastUserAgent(val NilString) {
	s.SubLastUserAgent = val
}

// SetSubLastOpenedAt sets the value of SubLastOpenedAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetSubLastOpenedAt(val NilDateTime) {
	s.SubLastOpenedAt = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetOnlineAt sets the value of OnlineAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetOnlineAt(val NilDateTime) {
	s.OnlineAt = val
}

// SetSubRevokedAt sets the value of SubRevokedAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetSubRevokedAt(val NilDateTime) {
	s.SubRevokedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetLastTrafficResetAt(val NilDateTime) {
	s.LastTrafficResetAt = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetVlessUuid(val uuid.UUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetDescription sets the value of Description.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetDescription(val NilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetTag(val NilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetTelegramId(val NilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetEmail(val NilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetHwidDeviceLimit(val NilInt) {
	s.HwidDeviceLimit = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetActiveUserInbounds sets the value of ActiveUserInbounds.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetActiveUserInbounds(val []RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem) {
	s.ActiveUserInbounds = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetLastConnectedNode sets the value of LastConnectedNode.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetLastConnectedNode(val NilRevokeUserSubscriptionResponseDtoResponseLastConnectedNode) {
	s.LastConnectedNode = val
}

// SetHapp sets the value of Happ.
func (s *RevokeUserSubscriptionResponseDtoResponse) SetHapp(val RevokeUserSubscriptionResponseDtoResponseHapp) {
	s.Happ = val
}

type RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *RevokeUserSubscriptionResponseDtoResponseActiveUserInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

type RevokeUserSubscriptionResponseDtoResponseHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *RevokeUserSubscriptionResponseDtoResponseHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *RevokeUserSubscriptionResponseDtoResponseHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type RevokeUserSubscriptionResponseDtoResponseLastConnectedNode struct {
	ConnectedAt time.Time `json:"connectedAt"`
	NodeName    string    `json:"nodeName"`
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *RevokeUserSubscriptionResponseDtoResponseLastConnectedNode) GetConnectedAt() time.Time {
	return s.ConnectedAt
}

// GetNodeName returns the value of NodeName.
func (s *RevokeUserSubscriptionResponseDtoResponseLastConnectedNode) GetNodeName() string {
	return s.NodeName
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *RevokeUserSubscriptionResponseDtoResponseLastConnectedNode) SetConnectedAt(val time.Time) {
	s.ConnectedAt = val
}

// SetNodeName sets the value of NodeName.
func (s *RevokeUserSubscriptionResponseDtoResponseLastConnectedNode) SetNodeName(val string) {
	s.NodeName = val
}

type RevokeUserSubscriptionResponseDtoResponseStatus string

const (
	RevokeUserSubscriptionResponseDtoResponseStatusACTIVE   RevokeUserSubscriptionResponseDtoResponseStatus = "ACTIVE"
	RevokeUserSubscriptionResponseDtoResponseStatusDISABLED RevokeUserSubscriptionResponseDtoResponseStatus = "DISABLED"
	RevokeUserSubscriptionResponseDtoResponseStatusLIMITED  RevokeUserSubscriptionResponseDtoResponseStatus = "LIMITED"
	RevokeUserSubscriptionResponseDtoResponseStatusEXPIRED  RevokeUserSubscriptionResponseDtoResponseStatus = "EXPIRED"
)

// AllValues returns all RevokeUserSubscriptionResponseDtoResponseStatus values.
func (RevokeUserSubscriptionResponseDtoResponseStatus) AllValues() []RevokeUserSubscriptionResponseDtoResponseStatus {
	return []RevokeUserSubscriptionResponseDtoResponseStatus{
		RevokeUserSubscriptionResponseDtoResponseStatusACTIVE,
		RevokeUserSubscriptionResponseDtoResponseStatusDISABLED,
		RevokeUserSubscriptionResponseDtoResponseStatusLIMITED,
		RevokeUserSubscriptionResponseDtoResponseStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RevokeUserSubscriptionResponseDtoResponseStatus) MarshalText() ([]byte, error) {
	switch s {
	case RevokeUserSubscriptionResponseDtoResponseStatusACTIVE:
		return []byte(s), nil
	case RevokeUserSubscriptionResponseDtoResponseStatusDISABLED:
		return []byte(s), nil
	case RevokeUserSubscriptionResponseDtoResponseStatusLIMITED:
		return []byte(s), nil
	case RevokeUserSubscriptionResponseDtoResponseStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RevokeUserSubscriptionResponseDtoResponseStatus) UnmarshalText(data []byte) error {
	switch RevokeUserSubscriptionResponseDtoResponseStatus(data) {
	case RevokeUserSubscriptionResponseDtoResponseStatusACTIVE:
		*s = RevokeUserSubscriptionResponseDtoResponseStatusACTIVE
		return nil
	case RevokeUserSubscriptionResponseDtoResponseStatusDISABLED:
		*s = RevokeUserSubscriptionResponseDtoResponseStatusDISABLED
		return nil
	case RevokeUserSubscriptionResponseDtoResponseStatusLIMITED:
		*s = RevokeUserSubscriptionResponseDtoResponseStatusLIMITED
		return nil
	case RevokeUserSubscriptionResponseDtoResponseStatusEXPIRED:
		*s = RevokeUserSubscriptionResponseDtoResponseStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy string

const (
	RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyNORESET RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy = "NO_RESET"
	RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyDAY     RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy = "DAY"
	RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyWEEK    RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy = "WEEK"
	RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyMONTH   RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy = "MONTH"
)

// AllValues returns all RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy values.
func (RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) AllValues() []RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy {
	return []RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy{
		RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyNORESET,
		RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyDAY,
		RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyWEEK,
		RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyDAY:
		return []byte(s), nil
	case RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategy(data) {
	case RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyNORESET:
		*s = RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyNORESET
		return nil
	case RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyDAY:
		*s = RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyDAY
		return nil
	case RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyWEEK:
		*s = RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyWEEK
		return nil
	case RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyMONTH:
		*s = RevokeUserSubscriptionResponseDtoResponseTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/SetInboundToManyHostsRequestDto
type SetInboundToManyHostsRequestDto struct {
	Uuids       []uuid.UUID `json:"uuids"`
	InboundUuid uuid.UUID   `json:"inboundUuid"`
}

// GetUuids returns the value of Uuids.
func (s *SetInboundToManyHostsRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// GetInboundUuid returns the value of InboundUuid.
func (s *SetInboundToManyHostsRequestDto) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// SetUuids sets the value of Uuids.
func (s *SetInboundToManyHostsRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// SetInboundUuid sets the value of InboundUuid.
func (s *SetInboundToManyHostsRequestDto) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// Ref: #/components/schemas/SetInboundToManyHostsResponseDto
type SetInboundToManyHostsResponseDto struct {
	Response []SetInboundToManyHostsResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *SetInboundToManyHostsResponseDto) GetResponse() []SetInboundToManyHostsResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *SetInboundToManyHostsResponseDto) SetResponse(val []SetInboundToManyHostsResponseDtoResponseItem) {
	s.Response = val
}

type SetInboundToManyHostsResponseDtoResponseItem struct {
	UUID             uuid.UUID                                                    `json:"uuid"`
	InboundUuid      uuid.UUID                                                    `json:"inboundUuid"`
	ViewPosition     int                                                          `json:"viewPosition"`
	Remark           string                                                       `json:"remark"`
	Address          string                                                       `json:"address"`
	Port             int                                                          `json:"port"`
	Path             NilString                                                    `json:"path"`
	Sni              NilString                                                    `json:"sni"`
	Host             NilString                                                    `json:"host"`
	Alpn             NilString                                                    `json:"alpn"`
	Fingerprint      NilString                                                    `json:"fingerprint"`
	AllowInsecure    OptBool                                                      `json:"allowInsecure"`
	IsDisabled       OptBool                                                      `json:"isDisabled"`
	SecurityLayer    OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer `json:"securityLayer"`
	XHttpExtraParams jx.Raw                                                       `json:"xHttpExtraParams"`
}

// GetUUID returns the value of UUID.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetInboundUuid returns the value of InboundUuid.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// GetViewPosition returns the value of ViewPosition.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetRemark returns the value of Remark.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetPath() NilString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetSni() NilString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetHost() NilString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetAlpn() NilString {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetFingerprint() NilString {
	return s.Fingerprint
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetIsDisabled returns the value of IsDisabled.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetSecurityLayer() OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *SetInboundToManyHostsResponseDtoResponseItem) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// SetUUID sets the value of UUID.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetInboundUuid sets the value of InboundUuid.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetRemark sets the value of Remark.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetPath(val NilString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetSni(val NilString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetHost(val NilString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetAlpn(val NilString) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetFingerprint(val NilString) {
	s.Fingerprint = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetSecurityLayer(val OptSetInboundToManyHostsResponseDtoResponseItemSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *SetInboundToManyHostsResponseDtoResponseItem) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

type SetInboundToManyHostsResponseDtoResponseItemSecurityLayer string

const (
	SetInboundToManyHostsResponseDtoResponseItemSecurityLayerDEFAULT SetInboundToManyHostsResponseDtoResponseItemSecurityLayer = "DEFAULT"
	SetInboundToManyHostsResponseDtoResponseItemSecurityLayerTLS     SetInboundToManyHostsResponseDtoResponseItemSecurityLayer = "TLS"
	SetInboundToManyHostsResponseDtoResponseItemSecurityLayerNONE    SetInboundToManyHostsResponseDtoResponseItemSecurityLayer = "NONE"
)

// AllValues returns all SetInboundToManyHostsResponseDtoResponseItemSecurityLayer values.
func (SetInboundToManyHostsResponseDtoResponseItemSecurityLayer) AllValues() []SetInboundToManyHostsResponseDtoResponseItemSecurityLayer {
	return []SetInboundToManyHostsResponseDtoResponseItemSecurityLayer{
		SetInboundToManyHostsResponseDtoResponseItemSecurityLayerDEFAULT,
		SetInboundToManyHostsResponseDtoResponseItemSecurityLayerTLS,
		SetInboundToManyHostsResponseDtoResponseItemSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SetInboundToManyHostsResponseDtoResponseItemSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case SetInboundToManyHostsResponseDtoResponseItemSecurityLayerDEFAULT:
		return []byte(s), nil
	case SetInboundToManyHostsResponseDtoResponseItemSecurityLayerTLS:
		return []byte(s), nil
	case SetInboundToManyHostsResponseDtoResponseItemSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SetInboundToManyHostsResponseDtoResponseItemSecurityLayer) UnmarshalText(data []byte) error {
	switch SetInboundToManyHostsResponseDtoResponseItemSecurityLayer(data) {
	case SetInboundToManyHostsResponseDtoResponseItemSecurityLayerDEFAULT:
		*s = SetInboundToManyHostsResponseDtoResponseItemSecurityLayerDEFAULT
		return nil
	case SetInboundToManyHostsResponseDtoResponseItemSecurityLayerTLS:
		*s = SetInboundToManyHostsResponseDtoResponseItemSecurityLayerTLS
		return nil
	case SetInboundToManyHostsResponseDtoResponseItemSecurityLayerNONE:
		*s = SetInboundToManyHostsResponseDtoResponseItemSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/SetPortToManyHostsRequestDto
type SetPortToManyHostsRequestDto struct {
	Uuids []uuid.UUID `json:"uuids"`
	Port  int         `json:"port"`
}

// GetUuids returns the value of Uuids.
func (s *SetPortToManyHostsRequestDto) GetUuids() []uuid.UUID {
	return s.Uuids
}

// GetPort returns the value of Port.
func (s *SetPortToManyHostsRequestDto) GetPort() int {
	return s.Port
}

// SetUuids sets the value of Uuids.
func (s *SetPortToManyHostsRequestDto) SetUuids(val []uuid.UUID) {
	s.Uuids = val
}

// SetPort sets the value of Port.
func (s *SetPortToManyHostsRequestDto) SetPort(val int) {
	s.Port = val
}

// Ref: #/components/schemas/SetPortToManyHostsResponseDto
type SetPortToManyHostsResponseDto struct {
	Response []SetPortToManyHostsResponseDtoResponseItem `json:"response"`
}

// GetResponse returns the value of Response.
func (s *SetPortToManyHostsResponseDto) GetResponse() []SetPortToManyHostsResponseDtoResponseItem {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *SetPortToManyHostsResponseDto) SetResponse(val []SetPortToManyHostsResponseDtoResponseItem) {
	s.Response = val
}

type SetPortToManyHostsResponseDtoResponseItem struct {
	UUID             uuid.UUID                                                 `json:"uuid"`
	InboundUuid      uuid.UUID                                                 `json:"inboundUuid"`
	ViewPosition     int                                                       `json:"viewPosition"`
	Remark           string                                                    `json:"remark"`
	Address          string                                                    `json:"address"`
	Port             int                                                       `json:"port"`
	Path             NilString                                                 `json:"path"`
	Sni              NilString                                                 `json:"sni"`
	Host             NilString                                                 `json:"host"`
	Alpn             NilString                                                 `json:"alpn"`
	Fingerprint      NilString                                                 `json:"fingerprint"`
	AllowInsecure    OptBool                                                   `json:"allowInsecure"`
	IsDisabled       OptBool                                                   `json:"isDisabled"`
	SecurityLayer    OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer `json:"securityLayer"`
	XHttpExtraParams jx.Raw                                                    `json:"xHttpExtraParams"`
}

// GetUUID returns the value of UUID.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetInboundUuid returns the value of InboundUuid.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// GetViewPosition returns the value of ViewPosition.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetViewPosition() int {
	return s.ViewPosition
}

// GetRemark returns the value of Remark.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetPath() NilString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetSni() NilString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetHost() NilString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetAlpn() NilString {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetFingerprint() NilString {
	return s.Fingerprint
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetIsDisabled returns the value of IsDisabled.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetSecurityLayer() OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *SetPortToManyHostsResponseDtoResponseItem) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// SetUUID sets the value of UUID.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetInboundUuid sets the value of InboundUuid.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetRemark sets the value of Remark.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetPath(val NilString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetSni(val NilString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetHost(val NilString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetAlpn(val NilString) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetFingerprint(val NilString) {
	s.Fingerprint = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetSecurityLayer(val OptSetPortToManyHostsResponseDtoResponseItemSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *SetPortToManyHostsResponseDtoResponseItem) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

type SetPortToManyHostsResponseDtoResponseItemSecurityLayer string

const (
	SetPortToManyHostsResponseDtoResponseItemSecurityLayerDEFAULT SetPortToManyHostsResponseDtoResponseItemSecurityLayer = "DEFAULT"
	SetPortToManyHostsResponseDtoResponseItemSecurityLayerTLS     SetPortToManyHostsResponseDtoResponseItemSecurityLayer = "TLS"
	SetPortToManyHostsResponseDtoResponseItemSecurityLayerNONE    SetPortToManyHostsResponseDtoResponseItemSecurityLayer = "NONE"
)

// AllValues returns all SetPortToManyHostsResponseDtoResponseItemSecurityLayer values.
func (SetPortToManyHostsResponseDtoResponseItemSecurityLayer) AllValues() []SetPortToManyHostsResponseDtoResponseItemSecurityLayer {
	return []SetPortToManyHostsResponseDtoResponseItemSecurityLayer{
		SetPortToManyHostsResponseDtoResponseItemSecurityLayerDEFAULT,
		SetPortToManyHostsResponseDtoResponseItemSecurityLayerTLS,
		SetPortToManyHostsResponseDtoResponseItemSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SetPortToManyHostsResponseDtoResponseItemSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case SetPortToManyHostsResponseDtoResponseItemSecurityLayerDEFAULT:
		return []byte(s), nil
	case SetPortToManyHostsResponseDtoResponseItemSecurityLayerTLS:
		return []byte(s), nil
	case SetPortToManyHostsResponseDtoResponseItemSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SetPortToManyHostsResponseDtoResponseItemSecurityLayer) UnmarshalText(data []byte) error {
	switch SetPortToManyHostsResponseDtoResponseItemSecurityLayer(data) {
	case SetPortToManyHostsResponseDtoResponseItemSecurityLayerDEFAULT:
		*s = SetPortToManyHostsResponseDtoResponseItemSecurityLayerDEFAULT
		return nil
	case SetPortToManyHostsResponseDtoResponseItemSecurityLayerTLS:
		*s = SetPortToManyHostsResponseDtoResponseItemSecurityLayerTLS
		return nil
	case SetPortToManyHostsResponseDtoResponseItemSecurityLayerNONE:
		*s = SetPortToManyHostsResponseDtoResponseItemSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SubscriptionControllerGetSubscriptionByClientTypeClientType string

const (
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeStash         SubscriptionControllerGetSubscriptionByClientTypeClientType = "stash"
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingbox       SubscriptionControllerGetSubscriptionByClientTypeClientType = "singbox"
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingboxLegacy SubscriptionControllerGetSubscriptionByClientTypeClientType = "singbox-legacy"
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeMihomo        SubscriptionControllerGetSubscriptionByClientTypeClientType = "mihomo"
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeJSON          SubscriptionControllerGetSubscriptionByClientTypeClientType = "json"
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeV2rayJSON     SubscriptionControllerGetSubscriptionByClientTypeClientType = "v2ray-json"
	SubscriptionControllerGetSubscriptionByClientTypeClientTypeClash         SubscriptionControllerGetSubscriptionByClientTypeClientType = "clash"
)

// AllValues returns all SubscriptionControllerGetSubscriptionByClientTypeClientType values.
func (SubscriptionControllerGetSubscriptionByClientTypeClientType) AllValues() []SubscriptionControllerGetSubscriptionByClientTypeClientType {
	return []SubscriptionControllerGetSubscriptionByClientTypeClientType{
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeStash,
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingbox,
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingboxLegacy,
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeMihomo,
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeJSON,
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeV2rayJSON,
		SubscriptionControllerGetSubscriptionByClientTypeClientTypeClash,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionControllerGetSubscriptionByClientTypeClientType) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeStash:
		return []byte(s), nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingbox:
		return []byte(s), nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingboxLegacy:
		return []byte(s), nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeMihomo:
		return []byte(s), nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeJSON:
		return []byte(s), nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeV2rayJSON:
		return []byte(s), nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeClash:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionControllerGetSubscriptionByClientTypeClientType) UnmarshalText(data []byte) error {
	switch SubscriptionControllerGetSubscriptionByClientTypeClientType(data) {
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeStash:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeStash
		return nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingbox:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingbox
		return nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingboxLegacy:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeSingboxLegacy
		return nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeMihomo:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeMihomo
		return nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeJSON:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeJSON
		return nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeV2rayJSON:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeV2rayJSON
		return nil
	case SubscriptionControllerGetSubscriptionByClientTypeClientTypeClash:
		*s = SubscriptionControllerGetSubscriptionByClientTypeClientTypeClash
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// SubscriptionControllerGetSubscriptionByClientTypeOK is response for SubscriptionControllerGetSubscriptionByClientType operation.
type SubscriptionControllerGetSubscriptionByClientTypeOK struct{}

// SubscriptionControllerGetSubscriptionOK is response for SubscriptionControllerGetSubscription operation.
type SubscriptionControllerGetSubscriptionOK struct{}

// SubscriptionControllerGetSubscriptionWithTypeOK is response for SubscriptionControllerGetSubscriptionWithType operation.
type SubscriptionControllerGetSubscriptionWithTypeOK struct{}

type SubscriptionTemplateControllerGetTemplateTemplateType string

const (
	SubscriptionTemplateControllerGetTemplateTemplateTypeSTASH         SubscriptionTemplateControllerGetTemplateTemplateType = "STASH"
	SubscriptionTemplateControllerGetTemplateTemplateTypeSINGBOX       SubscriptionTemplateControllerGetTemplateTemplateType = "SINGBOX"
	SubscriptionTemplateControllerGetTemplateTemplateTypeSINGBOXLEGACY SubscriptionTemplateControllerGetTemplateTemplateType = "SINGBOX_LEGACY"
	SubscriptionTemplateControllerGetTemplateTemplateTypeMIHOMO        SubscriptionTemplateControllerGetTemplateTemplateType = "MIHOMO"
	SubscriptionTemplateControllerGetTemplateTemplateTypeXRAYJSON      SubscriptionTemplateControllerGetTemplateTemplateType = "XRAY_JSON"
	SubscriptionTemplateControllerGetTemplateTemplateTypeCLASH         SubscriptionTemplateControllerGetTemplateTemplateType = "CLASH"
)

// AllValues returns all SubscriptionTemplateControllerGetTemplateTemplateType values.
func (SubscriptionTemplateControllerGetTemplateTemplateType) AllValues() []SubscriptionTemplateControllerGetTemplateTemplateType {
	return []SubscriptionTemplateControllerGetTemplateTemplateType{
		SubscriptionTemplateControllerGetTemplateTemplateTypeSTASH,
		SubscriptionTemplateControllerGetTemplateTemplateTypeSINGBOX,
		SubscriptionTemplateControllerGetTemplateTemplateTypeSINGBOXLEGACY,
		SubscriptionTemplateControllerGetTemplateTemplateTypeMIHOMO,
		SubscriptionTemplateControllerGetTemplateTemplateTypeXRAYJSON,
		SubscriptionTemplateControllerGetTemplateTemplateTypeCLASH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionTemplateControllerGetTemplateTemplateType) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionTemplateControllerGetTemplateTemplateTypeSTASH:
		return []byte(s), nil
	case SubscriptionTemplateControllerGetTemplateTemplateTypeSINGBOX:
		return []byte(s), nil
	case SubscriptionTemplateControllerGetTemplateTemplateTypeSINGBOXLEGACY:
		return []byte(s), nil
	case SubscriptionTemplateControllerGetTemplateTemplateTypeMIHOMO:
		return []byte(s), nil
	case SubscriptionTemplateControllerGetTemplateTemplateTypeXRAYJSON:
		return []byte(s), nil
	case SubscriptionTemplateControllerGetTemplateTemplateTypeCLASH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionTemplateControllerGetTemplateTemplateType) UnmarshalText(data []byte) error {
	switch SubscriptionTemplateControllerGetTemplateTemplateType(data) {
	case SubscriptionTemplateControllerGetTemplateTemplateTypeSTASH:
		*s = SubscriptionTemplateControllerGetTemplateTemplateTypeSTASH
		return nil
	case SubscriptionTemplateControllerGetTemplateTemplateTypeSINGBOX:
		*s = SubscriptionTemplateControllerGetTemplateTemplateTypeSINGBOX
		return nil
	case SubscriptionTemplateControllerGetTemplateTemplateTypeSINGBOXLEGACY:
		*s = SubscriptionTemplateControllerGetTemplateTemplateTypeSINGBOXLEGACY
		return nil
	case SubscriptionTemplateControllerGetTemplateTemplateTypeMIHOMO:
		*s = SubscriptionTemplateControllerGetTemplateTemplateTypeMIHOMO
		return nil
	case SubscriptionTemplateControllerGetTemplateTemplateTypeXRAYJSON:
		*s = SubscriptionTemplateControllerGetTemplateTemplateTypeXRAYJSON
		return nil
	case SubscriptionTemplateControllerGetTemplateTemplateTypeCLASH:
		*s = SubscriptionTemplateControllerGetTemplateTemplateTypeCLASH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SubscriptionsControllerGetSubscriptionByUsernameNotFound struct {
	Timestamp OptDateTime `json:"timestamp"`
	Path      OptString   `json:"path"`
	Message   OptString   `json:"message"`
	ErrorCode OptString   `json:"errorCode"`
}

// GetTimestamp returns the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) GetTimestamp() OptDateTime {
	return s.Timestamp
}

// GetPath returns the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) GetPath() OptString {
	return s.Path
}

// GetMessage returns the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) GetMessage() OptString {
	return s.Message
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) GetErrorCode() OptString {
	return s.ErrorCode
}

// SetTimestamp sets the value of Timestamp.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) SetTimestamp(val OptDateTime) {
	s.Timestamp = val
}

// SetPath sets the value of Path.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) SetPath(val OptString) {
	s.Path = val
}

// SetMessage sets the value of Message.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) SetMessage(val OptString) {
	s.Message = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionsControllerGetSubscriptionByUsernameNotFound) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

func (*SubscriptionsControllerGetSubscriptionByUsernameNotFound) subscriptionsControllerGetSubscriptionByUsernameRes() {
}

// Ref: #/components/schemas/TelegramCallbackRequestDto
type TelegramCallbackRequestDto struct {
	ID        float64   `json:"id"`
	FirstName string    `json:"first_name"`
	LastName  OptString `json:"last_name"`
	Username  OptString `json:"username"`
	PhotoURL  OptString `json:"photo_url"`
	AuthDate  float64   `json:"auth_date"`
	Hash      string    `json:"hash"`
}

// GetID returns the value of ID.
func (s *TelegramCallbackRequestDto) GetID() float64 {
	return s.ID
}

// GetFirstName returns the value of FirstName.
func (s *TelegramCallbackRequestDto) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *TelegramCallbackRequestDto) GetLastName() OptString {
	return s.LastName
}

// GetUsername returns the value of Username.
func (s *TelegramCallbackRequestDto) GetUsername() OptString {
	return s.Username
}

// GetPhotoURL returns the value of PhotoURL.
func (s *TelegramCallbackRequestDto) GetPhotoURL() OptString {
	return s.PhotoURL
}

// GetAuthDate returns the value of AuthDate.
func (s *TelegramCallbackRequestDto) GetAuthDate() float64 {
	return s.AuthDate
}

// GetHash returns the value of Hash.
func (s *TelegramCallbackRequestDto) GetHash() string {
	return s.Hash
}

// SetID sets the value of ID.
func (s *TelegramCallbackRequestDto) SetID(val float64) {
	s.ID = val
}

// SetFirstName sets the value of FirstName.
func (s *TelegramCallbackRequestDto) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *TelegramCallbackRequestDto) SetLastName(val OptString) {
	s.LastName = val
}

// SetUsername sets the value of Username.
func (s *TelegramCallbackRequestDto) SetUsername(val OptString) {
	s.Username = val
}

// SetPhotoURL sets the value of PhotoURL.
func (s *TelegramCallbackRequestDto) SetPhotoURL(val OptString) {
	s.PhotoURL = val
}

// SetAuthDate sets the value of AuthDate.
func (s *TelegramCallbackRequestDto) SetAuthDate(val float64) {
	s.AuthDate = val
}

// SetHash sets the value of Hash.
func (s *TelegramCallbackRequestDto) SetHash(val string) {
	s.Hash = val
}

// Ref: #/components/schemas/TelegramCallbackResponseDto
type TelegramCallbackResponseDto struct {
	Response TelegramCallbackResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *TelegramCallbackResponseDto) GetResponse() TelegramCallbackResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *TelegramCallbackResponseDto) SetResponse(val TelegramCallbackResponseDtoResponse) {
	s.Response = val
}

type TelegramCallbackResponseDtoResponse struct {
	AccessToken string `json:"accessToken"`
}

// GetAccessToken returns the value of AccessToken.
func (s *TelegramCallbackResponseDtoResponse) GetAccessToken() string {
	return s.AccessToken
}

// SetAccessToken sets the value of AccessToken.
func (s *TelegramCallbackResponseDtoResponse) SetAccessToken(val string) {
	s.AccessToken = val
}

// TelegramCallbackResponseDtoStatusCode wraps TelegramCallbackResponseDto with StatusCode.
type TelegramCallbackResponseDtoStatusCode struct {
	StatusCode int
	Response   TelegramCallbackResponseDto
}

// GetStatusCode returns the value of StatusCode.
func (s *TelegramCallbackResponseDtoStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *TelegramCallbackResponseDtoStatusCode) GetResponse() TelegramCallbackResponseDto {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *TelegramCallbackResponseDtoStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *TelegramCallbackResponseDtoStatusCode) SetResponse(val TelegramCallbackResponseDto) {
	s.Response = val
}

// Ref: #/components/schemas/UpdateConfigRequestDto
type UpdateConfigRequestDto struct{}

// Ref: #/components/schemas/UpdateConfigResponseDto
type UpdateConfigResponseDto struct {
	Response UpdateConfigResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *UpdateConfigResponseDto) GetResponse() UpdateConfigResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *UpdateConfigResponseDto) SetResponse(val UpdateConfigResponseDtoResponse) {
	s.Response = val
}

func (*UpdateConfigResponseDto) xrayConfigControllerUpdateConfigRes() {}

type UpdateConfigResponseDtoResponse struct {
	Config jx.Raw `json:"config"`
}

// GetConfig returns the value of Config.
func (s *UpdateConfigResponseDtoResponse) GetConfig() jx.Raw {
	return s.Config
}

// SetConfig sets the value of Config.
func (s *UpdateConfigResponseDtoResponse) SetConfig(val jx.Raw) {
	s.Config = val
}

// Ref: #/components/schemas/UpdateHostRequestDto
type UpdateHostRequestDto struct {
	UUID             uuid.UUID                             `json:"uuid"`
	InboundUuid      OptUUID                               `json:"inboundUuid"`
	Remark           OptString                             `json:"remark"`
	Address          OptString                             `json:"address"`
	Port             OptInt                                `json:"port"`
	Path             OptString                             `json:"path"`
	Sni              OptString                             `json:"sni"`
	Host             OptString                             `json:"host"`
	Alpn             OptNilUpdateHostRequestDtoAlpn        `json:"alpn"`
	Fingerprint      OptNilUpdateHostRequestDtoFingerprint `json:"fingerprint"`
	AllowInsecure    OptBool                               `json:"allowInsecure"`
	IsDisabled       OptBool                               `json:"isDisabled"`
	SecurityLayer    OptUpdateHostRequestDtoSecurityLayer  `json:"securityLayer"`
	XHttpExtraParams jx.Raw                                `json:"xHttpExtraParams"`
}

// GetUUID returns the value of UUID.
func (s *UpdateHostRequestDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetInboundUuid returns the value of InboundUuid.
func (s *UpdateHostRequestDto) GetInboundUuid() OptUUID {
	return s.InboundUuid
}

// GetRemark returns the value of Remark.
func (s *UpdateHostRequestDto) GetRemark() OptString {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *UpdateHostRequestDto) GetAddress() OptString {
	return s.Address
}

// GetPort returns the value of Port.
func (s *UpdateHostRequestDto) GetPort() OptInt {
	return s.Port
}

// GetPath returns the value of Path.
func (s *UpdateHostRequestDto) GetPath() OptString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *UpdateHostRequestDto) GetSni() OptString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *UpdateHostRequestDto) GetHost() OptString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *UpdateHostRequestDto) GetAlpn() OptNilUpdateHostRequestDtoAlpn {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *UpdateHostRequestDto) GetFingerprint() OptNilUpdateHostRequestDtoFingerprint {
	return s.Fingerprint
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *UpdateHostRequestDto) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetIsDisabled returns the value of IsDisabled.
func (s *UpdateHostRequestDto) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *UpdateHostRequestDto) GetSecurityLayer() OptUpdateHostRequestDtoSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *UpdateHostRequestDto) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// SetUUID sets the value of UUID.
func (s *UpdateHostRequestDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetInboundUuid sets the value of InboundUuid.
func (s *UpdateHostRequestDto) SetInboundUuid(val OptUUID) {
	s.InboundUuid = val
}

// SetRemark sets the value of Remark.
func (s *UpdateHostRequestDto) SetRemark(val OptString) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *UpdateHostRequestDto) SetAddress(val OptString) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *UpdateHostRequestDto) SetPort(val OptInt) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *UpdateHostRequestDto) SetPath(val OptString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *UpdateHostRequestDto) SetSni(val OptString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *UpdateHostRequestDto) SetHost(val OptString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *UpdateHostRequestDto) SetAlpn(val OptNilUpdateHostRequestDtoAlpn) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *UpdateHostRequestDto) SetFingerprint(val OptNilUpdateHostRequestDtoFingerprint) {
	s.Fingerprint = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *UpdateHostRequestDto) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *UpdateHostRequestDto) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *UpdateHostRequestDto) SetSecurityLayer(val OptUpdateHostRequestDtoSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *UpdateHostRequestDto) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

type UpdateHostRequestDtoAlpn string

const (
	UpdateHostRequestDtoAlpnH3         UpdateHostRequestDtoAlpn = "h3"
	UpdateHostRequestDtoAlpnH2         UpdateHostRequestDtoAlpn = "h2"
	UpdateHostRequestDtoAlpnHTTP11     UpdateHostRequestDtoAlpn = "http/1.1"
	UpdateHostRequestDtoAlpnH2HTTP11   UpdateHostRequestDtoAlpn = "h2,http/1.1"
	UpdateHostRequestDtoAlpnH3H2HTTP11 UpdateHostRequestDtoAlpn = "h3,h2,http/1.1"
	UpdateHostRequestDtoAlpnH3H2       UpdateHostRequestDtoAlpn = "h3,h2"
)

// AllValues returns all UpdateHostRequestDtoAlpn values.
func (UpdateHostRequestDtoAlpn) AllValues() []UpdateHostRequestDtoAlpn {
	return []UpdateHostRequestDtoAlpn{
		UpdateHostRequestDtoAlpnH3,
		UpdateHostRequestDtoAlpnH2,
		UpdateHostRequestDtoAlpnHTTP11,
		UpdateHostRequestDtoAlpnH2HTTP11,
		UpdateHostRequestDtoAlpnH3H2HTTP11,
		UpdateHostRequestDtoAlpnH3H2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateHostRequestDtoAlpn) MarshalText() ([]byte, error) {
	switch s {
	case UpdateHostRequestDtoAlpnH3:
		return []byte(s), nil
	case UpdateHostRequestDtoAlpnH2:
		return []byte(s), nil
	case UpdateHostRequestDtoAlpnHTTP11:
		return []byte(s), nil
	case UpdateHostRequestDtoAlpnH2HTTP11:
		return []byte(s), nil
	case UpdateHostRequestDtoAlpnH3H2HTTP11:
		return []byte(s), nil
	case UpdateHostRequestDtoAlpnH3H2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateHostRequestDtoAlpn) UnmarshalText(data []byte) error {
	switch UpdateHostRequestDtoAlpn(data) {
	case UpdateHostRequestDtoAlpnH3:
		*s = UpdateHostRequestDtoAlpnH3
		return nil
	case UpdateHostRequestDtoAlpnH2:
		*s = UpdateHostRequestDtoAlpnH2
		return nil
	case UpdateHostRequestDtoAlpnHTTP11:
		*s = UpdateHostRequestDtoAlpnHTTP11
		return nil
	case UpdateHostRequestDtoAlpnH2HTTP11:
		*s = UpdateHostRequestDtoAlpnH2HTTP11
		return nil
	case UpdateHostRequestDtoAlpnH3H2HTTP11:
		*s = UpdateHostRequestDtoAlpnH3H2HTTP11
		return nil
	case UpdateHostRequestDtoAlpnH3H2:
		*s = UpdateHostRequestDtoAlpnH3H2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UpdateHostRequestDtoFingerprint string

const (
	UpdateHostRequestDtoFingerprintChrome     UpdateHostRequestDtoFingerprint = "chrome"
	UpdateHostRequestDtoFingerprintFirefox    UpdateHostRequestDtoFingerprint = "firefox"
	UpdateHostRequestDtoFingerprintSafari     UpdateHostRequestDtoFingerprint = "safari"
	UpdateHostRequestDtoFingerprintIos        UpdateHostRequestDtoFingerprint = "ios"
	UpdateHostRequestDtoFingerprintAndroid    UpdateHostRequestDtoFingerprint = "android"
	UpdateHostRequestDtoFingerprintEdge       UpdateHostRequestDtoFingerprint = "edge"
	UpdateHostRequestDtoFingerprintQq         UpdateHostRequestDtoFingerprint = "qq"
	UpdateHostRequestDtoFingerprintRandom     UpdateHostRequestDtoFingerprint = "random"
	UpdateHostRequestDtoFingerprintRandomized UpdateHostRequestDtoFingerprint = "randomized"
)

// AllValues returns all UpdateHostRequestDtoFingerprint values.
func (UpdateHostRequestDtoFingerprint) AllValues() []UpdateHostRequestDtoFingerprint {
	return []UpdateHostRequestDtoFingerprint{
		UpdateHostRequestDtoFingerprintChrome,
		UpdateHostRequestDtoFingerprintFirefox,
		UpdateHostRequestDtoFingerprintSafari,
		UpdateHostRequestDtoFingerprintIos,
		UpdateHostRequestDtoFingerprintAndroid,
		UpdateHostRequestDtoFingerprintEdge,
		UpdateHostRequestDtoFingerprintQq,
		UpdateHostRequestDtoFingerprintRandom,
		UpdateHostRequestDtoFingerprintRandomized,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateHostRequestDtoFingerprint) MarshalText() ([]byte, error) {
	switch s {
	case UpdateHostRequestDtoFingerprintChrome:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintFirefox:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintSafari:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintIos:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintAndroid:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintEdge:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintQq:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintRandom:
		return []byte(s), nil
	case UpdateHostRequestDtoFingerprintRandomized:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateHostRequestDtoFingerprint) UnmarshalText(data []byte) error {
	switch UpdateHostRequestDtoFingerprint(data) {
	case UpdateHostRequestDtoFingerprintChrome:
		*s = UpdateHostRequestDtoFingerprintChrome
		return nil
	case UpdateHostRequestDtoFingerprintFirefox:
		*s = UpdateHostRequestDtoFingerprintFirefox
		return nil
	case UpdateHostRequestDtoFingerprintSafari:
		*s = UpdateHostRequestDtoFingerprintSafari
		return nil
	case UpdateHostRequestDtoFingerprintIos:
		*s = UpdateHostRequestDtoFingerprintIos
		return nil
	case UpdateHostRequestDtoFingerprintAndroid:
		*s = UpdateHostRequestDtoFingerprintAndroid
		return nil
	case UpdateHostRequestDtoFingerprintEdge:
		*s = UpdateHostRequestDtoFingerprintEdge
		return nil
	case UpdateHostRequestDtoFingerprintQq:
		*s = UpdateHostRequestDtoFingerprintQq
		return nil
	case UpdateHostRequestDtoFingerprintRandom:
		*s = UpdateHostRequestDtoFingerprintRandom
		return nil
	case UpdateHostRequestDtoFingerprintRandomized:
		*s = UpdateHostRequestDtoFingerprintRandomized
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UpdateHostRequestDtoSecurityLayer string

const (
	UpdateHostRequestDtoSecurityLayerDEFAULT UpdateHostRequestDtoSecurityLayer = "DEFAULT"
	UpdateHostRequestDtoSecurityLayerTLS     UpdateHostRequestDtoSecurityLayer = "TLS"
	UpdateHostRequestDtoSecurityLayerNONE    UpdateHostRequestDtoSecurityLayer = "NONE"
)

// AllValues returns all UpdateHostRequestDtoSecurityLayer values.
func (UpdateHostRequestDtoSecurityLayer) AllValues() []UpdateHostRequestDtoSecurityLayer {
	return []UpdateHostRequestDtoSecurityLayer{
		UpdateHostRequestDtoSecurityLayerDEFAULT,
		UpdateHostRequestDtoSecurityLayerTLS,
		UpdateHostRequestDtoSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateHostRequestDtoSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case UpdateHostRequestDtoSecurityLayerDEFAULT:
		return []byte(s), nil
	case UpdateHostRequestDtoSecurityLayerTLS:
		return []byte(s), nil
	case UpdateHostRequestDtoSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateHostRequestDtoSecurityLayer) UnmarshalText(data []byte) error {
	switch UpdateHostRequestDtoSecurityLayer(data) {
	case UpdateHostRequestDtoSecurityLayerDEFAULT:
		*s = UpdateHostRequestDtoSecurityLayerDEFAULT
		return nil
	case UpdateHostRequestDtoSecurityLayerTLS:
		*s = UpdateHostRequestDtoSecurityLayerTLS
		return nil
	case UpdateHostRequestDtoSecurityLayerNONE:
		*s = UpdateHostRequestDtoSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UpdateHostResponseDto
type UpdateHostResponseDto struct {
	Response UpdateHostResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *UpdateHostResponseDto) GetResponse() UpdateHostResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *UpdateHostResponseDto) SetResponse(val UpdateHostResponseDtoResponse) {
	s.Response = val
}

type UpdateHostResponseDtoResponse struct {
	UUID             uuid.UUID                                     `json:"uuid"`
	InboundUuid      uuid.UUID                                     `json:"inboundUuid"`
	ViewPosition     int                                           `json:"viewPosition"`
	Remark           string                                        `json:"remark"`
	Address          string                                        `json:"address"`
	Port             int                                           `json:"port"`
	Path             NilString                                     `json:"path"`
	Sni              NilString                                     `json:"sni"`
	Host             NilString                                     `json:"host"`
	Alpn             NilString                                     `json:"alpn"`
	Fingerprint      NilString                                     `json:"fingerprint"`
	AllowInsecure    OptBool                                       `json:"allowInsecure"`
	IsDisabled       OptBool                                       `json:"isDisabled"`
	SecurityLayer    OptUpdateHostResponseDtoResponseSecurityLayer `json:"securityLayer"`
	XHttpExtraParams jx.Raw                                        `json:"xHttpExtraParams"`
}

// GetUUID returns the value of UUID.
func (s *UpdateHostResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetInboundUuid returns the value of InboundUuid.
func (s *UpdateHostResponseDtoResponse) GetInboundUuid() uuid.UUID {
	return s.InboundUuid
}

// GetViewPosition returns the value of ViewPosition.
func (s *UpdateHostResponseDtoResponse) GetViewPosition() int {
	return s.ViewPosition
}

// GetRemark returns the value of Remark.
func (s *UpdateHostResponseDtoResponse) GetRemark() string {
	return s.Remark
}

// GetAddress returns the value of Address.
func (s *UpdateHostResponseDtoResponse) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *UpdateHostResponseDtoResponse) GetPort() int {
	return s.Port
}

// GetPath returns the value of Path.
func (s *UpdateHostResponseDtoResponse) GetPath() NilString {
	return s.Path
}

// GetSni returns the value of Sni.
func (s *UpdateHostResponseDtoResponse) GetSni() NilString {
	return s.Sni
}

// GetHost returns the value of Host.
func (s *UpdateHostResponseDtoResponse) GetHost() NilString {
	return s.Host
}

// GetAlpn returns the value of Alpn.
func (s *UpdateHostResponseDtoResponse) GetAlpn() NilString {
	return s.Alpn
}

// GetFingerprint returns the value of Fingerprint.
func (s *UpdateHostResponseDtoResponse) GetFingerprint() NilString {
	return s.Fingerprint
}

// GetAllowInsecure returns the value of AllowInsecure.
func (s *UpdateHostResponseDtoResponse) GetAllowInsecure() OptBool {
	return s.AllowInsecure
}

// GetIsDisabled returns the value of IsDisabled.
func (s *UpdateHostResponseDtoResponse) GetIsDisabled() OptBool {
	return s.IsDisabled
}

// GetSecurityLayer returns the value of SecurityLayer.
func (s *UpdateHostResponseDtoResponse) GetSecurityLayer() OptUpdateHostResponseDtoResponseSecurityLayer {
	return s.SecurityLayer
}

// GetXHttpExtraParams returns the value of XHttpExtraParams.
func (s *UpdateHostResponseDtoResponse) GetXHttpExtraParams() jx.Raw {
	return s.XHttpExtraParams
}

// SetUUID sets the value of UUID.
func (s *UpdateHostResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetInboundUuid sets the value of InboundUuid.
func (s *UpdateHostResponseDtoResponse) SetInboundUuid(val uuid.UUID) {
	s.InboundUuid = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *UpdateHostResponseDtoResponse) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetRemark sets the value of Remark.
func (s *UpdateHostResponseDtoResponse) SetRemark(val string) {
	s.Remark = val
}

// SetAddress sets the value of Address.
func (s *UpdateHostResponseDtoResponse) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *UpdateHostResponseDtoResponse) SetPort(val int) {
	s.Port = val
}

// SetPath sets the value of Path.
func (s *UpdateHostResponseDtoResponse) SetPath(val NilString) {
	s.Path = val
}

// SetSni sets the value of Sni.
func (s *UpdateHostResponseDtoResponse) SetSni(val NilString) {
	s.Sni = val
}

// SetHost sets the value of Host.
func (s *UpdateHostResponseDtoResponse) SetHost(val NilString) {
	s.Host = val
}

// SetAlpn sets the value of Alpn.
func (s *UpdateHostResponseDtoResponse) SetAlpn(val NilString) {
	s.Alpn = val
}

// SetFingerprint sets the value of Fingerprint.
func (s *UpdateHostResponseDtoResponse) SetFingerprint(val NilString) {
	s.Fingerprint = val
}

// SetAllowInsecure sets the value of AllowInsecure.
func (s *UpdateHostResponseDtoResponse) SetAllowInsecure(val OptBool) {
	s.AllowInsecure = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *UpdateHostResponseDtoResponse) SetIsDisabled(val OptBool) {
	s.IsDisabled = val
}

// SetSecurityLayer sets the value of SecurityLayer.
func (s *UpdateHostResponseDtoResponse) SetSecurityLayer(val OptUpdateHostResponseDtoResponseSecurityLayer) {
	s.SecurityLayer = val
}

// SetXHttpExtraParams sets the value of XHttpExtraParams.
func (s *UpdateHostResponseDtoResponse) SetXHttpExtraParams(val jx.Raw) {
	s.XHttpExtraParams = val
}

type UpdateHostResponseDtoResponseSecurityLayer string

const (
	UpdateHostResponseDtoResponseSecurityLayerDEFAULT UpdateHostResponseDtoResponseSecurityLayer = "DEFAULT"
	UpdateHostResponseDtoResponseSecurityLayerTLS     UpdateHostResponseDtoResponseSecurityLayer = "TLS"
	UpdateHostResponseDtoResponseSecurityLayerNONE    UpdateHostResponseDtoResponseSecurityLayer = "NONE"
)

// AllValues returns all UpdateHostResponseDtoResponseSecurityLayer values.
func (UpdateHostResponseDtoResponseSecurityLayer) AllValues() []UpdateHostResponseDtoResponseSecurityLayer {
	return []UpdateHostResponseDtoResponseSecurityLayer{
		UpdateHostResponseDtoResponseSecurityLayerDEFAULT,
		UpdateHostResponseDtoResponseSecurityLayerTLS,
		UpdateHostResponseDtoResponseSecurityLayerNONE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateHostResponseDtoResponseSecurityLayer) MarshalText() ([]byte, error) {
	switch s {
	case UpdateHostResponseDtoResponseSecurityLayerDEFAULT:
		return []byte(s), nil
	case UpdateHostResponseDtoResponseSecurityLayerTLS:
		return []byte(s), nil
	case UpdateHostResponseDtoResponseSecurityLayerNONE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateHostResponseDtoResponseSecurityLayer) UnmarshalText(data []byte) error {
	switch UpdateHostResponseDtoResponseSecurityLayer(data) {
	case UpdateHostResponseDtoResponseSecurityLayerDEFAULT:
		*s = UpdateHostResponseDtoResponseSecurityLayerDEFAULT
		return nil
	case UpdateHostResponseDtoResponseSecurityLayerTLS:
		*s = UpdateHostResponseDtoResponseSecurityLayerTLS
		return nil
	case UpdateHostResponseDtoResponseSecurityLayerNONE:
		*s = UpdateHostResponseDtoResponseSecurityLayerNONE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UpdateNodeRequestDto
type UpdateNodeRequestDto struct {
	UUID                    uuid.UUID   `json:"uuid"`
	Name                    OptString   `json:"name"`
	Address                 OptString   `json:"address"`
	Port                    OptFloat64  `json:"port"`
	IsTrafficTrackingActive OptBool     `json:"isTrafficTrackingActive"`
	TrafficLimitBytes       OptFloat64  `json:"trafficLimitBytes"`
	NotifyPercent           OptFloat64  `json:"notifyPercent"`
	TrafficResetDay         OptFloat64  `json:"trafficResetDay"`
	ExcludedInbounds        []uuid.UUID `json:"excludedInbounds"`
	CountryCode             OptString   `json:"countryCode"`
	ConsumptionMultiplier   OptFloat64  `json:"consumptionMultiplier"`
}

// GetUUID returns the value of UUID.
func (s *UpdateNodeRequestDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *UpdateNodeRequestDto) GetName() OptString {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *UpdateNodeRequestDto) GetAddress() OptString {
	return s.Address
}

// GetPort returns the value of Port.
func (s *UpdateNodeRequestDto) GetPort() OptFloat64 {
	return s.Port
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *UpdateNodeRequestDto) GetIsTrafficTrackingActive() OptBool {
	return s.IsTrafficTrackingActive
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *UpdateNodeRequestDto) GetTrafficLimitBytes() OptFloat64 {
	return s.TrafficLimitBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *UpdateNodeRequestDto) GetNotifyPercent() OptFloat64 {
	return s.NotifyPercent
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *UpdateNodeRequestDto) GetTrafficResetDay() OptFloat64 {
	return s.TrafficResetDay
}

// GetExcludedInbounds returns the value of ExcludedInbounds.
func (s *UpdateNodeRequestDto) GetExcludedInbounds() []uuid.UUID {
	return s.ExcludedInbounds
}

// GetCountryCode returns the value of CountryCode.
func (s *UpdateNodeRequestDto) GetCountryCode() OptString {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *UpdateNodeRequestDto) GetConsumptionMultiplier() OptFloat64 {
	return s.ConsumptionMultiplier
}

// SetUUID sets the value of UUID.
func (s *UpdateNodeRequestDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *UpdateNodeRequestDto) SetName(val OptString) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *UpdateNodeRequestDto) SetAddress(val OptString) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *UpdateNodeRequestDto) SetPort(val OptFloat64) {
	s.Port = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *UpdateNodeRequestDto) SetIsTrafficTrackingActive(val OptBool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *UpdateNodeRequestDto) SetTrafficLimitBytes(val OptFloat64) {
	s.TrafficLimitBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *UpdateNodeRequestDto) SetNotifyPercent(val OptFloat64) {
	s.NotifyPercent = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *UpdateNodeRequestDto) SetTrafficResetDay(val OptFloat64) {
	s.TrafficResetDay = val
}

// SetExcludedInbounds sets the value of ExcludedInbounds.
func (s *UpdateNodeRequestDto) SetExcludedInbounds(val []uuid.UUID) {
	s.ExcludedInbounds = val
}

// SetCountryCode sets the value of CountryCode.
func (s *UpdateNodeRequestDto) SetCountryCode(val OptString) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *UpdateNodeRequestDto) SetConsumptionMultiplier(val OptFloat64) {
	s.ConsumptionMultiplier = val
}

// Ref: #/components/schemas/UpdateNodeResponseDto
type UpdateNodeResponseDto struct {
	Response UpdateNodeResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *UpdateNodeResponseDto) GetResponse() UpdateNodeResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *UpdateNodeResponseDto) SetResponse(val UpdateNodeResponseDtoResponse) {
	s.Response = val
}

type UpdateNodeResponseDtoResponse struct {
	UUID                    uuid.UUID                                           `json:"uuid"`
	Name                    string                                              `json:"name"`
	Address                 string                                              `json:"address"`
	Port                    NilInt                                              `json:"port"`
	IsConnected             bool                                                `json:"isConnected"`
	IsDisabled              bool                                                `json:"isDisabled"`
	IsConnecting            bool                                                `json:"isConnecting"`
	IsNodeOnline            bool                                                `json:"isNodeOnline"`
	IsXrayRunning           bool                                                `json:"isXrayRunning"`
	LastStatusChange        NilDateTime                                         `json:"lastStatusChange"`
	LastStatusMessage       NilString                                           `json:"lastStatusMessage"`
	XrayVersion             NilString                                           `json:"xrayVersion"`
	XrayUptime              string                                              `json:"xrayUptime"`
	IsTrafficTrackingActive bool                                                `json:"isTrafficTrackingActive"`
	TrafficResetDay         NilInt                                              `json:"trafficResetDay"`
	TrafficLimitBytes       NilFloat64                                          `json:"trafficLimitBytes"`
	TrafficUsedBytes        NilFloat64                                          `json:"trafficUsedBytes"`
	NotifyPercent           NilInt                                              `json:"notifyPercent"`
	UsersOnline             NilInt                                              `json:"usersOnline"`
	ViewPosition            int                                                 `json:"viewPosition"`
	CountryCode             string                                              `json:"countryCode"`
	ConsumptionMultiplier   float64                                             `json:"consumptionMultiplier"`
	CpuCount                NilInt                                              `json:"cpuCount"`
	CpuModel                NilString                                           `json:"cpuModel"`
	TotalRam                NilString                                           `json:"totalRam"`
	CreatedAt               time.Time                                           `json:"createdAt"`
	UpdatedAt               time.Time                                           `json:"updatedAt"`
	ExcludedInbounds        []UpdateNodeResponseDtoResponseExcludedInboundsItem `json:"excludedInbounds"`
}

// GetUUID returns the value of UUID.
func (s *UpdateNodeResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetName returns the value of Name.
func (s *UpdateNodeResponseDtoResponse) GetName() string {
	return s.Name
}

// GetAddress returns the value of Address.
func (s *UpdateNodeResponseDtoResponse) GetAddress() string {
	return s.Address
}

// GetPort returns the value of Port.
func (s *UpdateNodeResponseDtoResponse) GetPort() NilInt {
	return s.Port
}

// GetIsConnected returns the value of IsConnected.
func (s *UpdateNodeResponseDtoResponse) GetIsConnected() bool {
	return s.IsConnected
}

// GetIsDisabled returns the value of IsDisabled.
func (s *UpdateNodeResponseDtoResponse) GetIsDisabled() bool {
	return s.IsDisabled
}

// GetIsConnecting returns the value of IsConnecting.
func (s *UpdateNodeResponseDtoResponse) GetIsConnecting() bool {
	return s.IsConnecting
}

// GetIsNodeOnline returns the value of IsNodeOnline.
func (s *UpdateNodeResponseDtoResponse) GetIsNodeOnline() bool {
	return s.IsNodeOnline
}

// GetIsXrayRunning returns the value of IsXrayRunning.
func (s *UpdateNodeResponseDtoResponse) GetIsXrayRunning() bool {
	return s.IsXrayRunning
}

// GetLastStatusChange returns the value of LastStatusChange.
func (s *UpdateNodeResponseDtoResponse) GetLastStatusChange() NilDateTime {
	return s.LastStatusChange
}

// GetLastStatusMessage returns the value of LastStatusMessage.
func (s *UpdateNodeResponseDtoResponse) GetLastStatusMessage() NilString {
	return s.LastStatusMessage
}

// GetXrayVersion returns the value of XrayVersion.
func (s *UpdateNodeResponseDtoResponse) GetXrayVersion() NilString {
	return s.XrayVersion
}

// GetXrayUptime returns the value of XrayUptime.
func (s *UpdateNodeResponseDtoResponse) GetXrayUptime() string {
	return s.XrayUptime
}

// GetIsTrafficTrackingActive returns the value of IsTrafficTrackingActive.
func (s *UpdateNodeResponseDtoResponse) GetIsTrafficTrackingActive() bool {
	return s.IsTrafficTrackingActive
}

// GetTrafficResetDay returns the value of TrafficResetDay.
func (s *UpdateNodeResponseDtoResponse) GetTrafficResetDay() NilInt {
	return s.TrafficResetDay
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *UpdateNodeResponseDtoResponse) GetTrafficLimitBytes() NilFloat64 {
	return s.TrafficLimitBytes
}

// GetTrafficUsedBytes returns the value of TrafficUsedBytes.
func (s *UpdateNodeResponseDtoResponse) GetTrafficUsedBytes() NilFloat64 {
	return s.TrafficUsedBytes
}

// GetNotifyPercent returns the value of NotifyPercent.
func (s *UpdateNodeResponseDtoResponse) GetNotifyPercent() NilInt {
	return s.NotifyPercent
}

// GetUsersOnline returns the value of UsersOnline.
func (s *UpdateNodeResponseDtoResponse) GetUsersOnline() NilInt {
	return s.UsersOnline
}

// GetViewPosition returns the value of ViewPosition.
func (s *UpdateNodeResponseDtoResponse) GetViewPosition() int {
	return s.ViewPosition
}

// GetCountryCode returns the value of CountryCode.
func (s *UpdateNodeResponseDtoResponse) GetCountryCode() string {
	return s.CountryCode
}

// GetConsumptionMultiplier returns the value of ConsumptionMultiplier.
func (s *UpdateNodeResponseDtoResponse) GetConsumptionMultiplier() float64 {
	return s.ConsumptionMultiplier
}

// GetCpuCount returns the value of CpuCount.
func (s *UpdateNodeResponseDtoResponse) GetCpuCount() NilInt {
	return s.CpuCount
}

// GetCpuModel returns the value of CpuModel.
func (s *UpdateNodeResponseDtoResponse) GetCpuModel() NilString {
	return s.CpuModel
}

// GetTotalRam returns the value of TotalRam.
func (s *UpdateNodeResponseDtoResponse) GetTotalRam() NilString {
	return s.TotalRam
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UpdateNodeResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UpdateNodeResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetExcludedInbounds returns the value of ExcludedInbounds.
func (s *UpdateNodeResponseDtoResponse) GetExcludedInbounds() []UpdateNodeResponseDtoResponseExcludedInboundsItem {
	return s.ExcludedInbounds
}

// SetUUID sets the value of UUID.
func (s *UpdateNodeResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *UpdateNodeResponseDtoResponse) SetName(val string) {
	s.Name = val
}

// SetAddress sets the value of Address.
func (s *UpdateNodeResponseDtoResponse) SetAddress(val string) {
	s.Address = val
}

// SetPort sets the value of Port.
func (s *UpdateNodeResponseDtoResponse) SetPort(val NilInt) {
	s.Port = val
}

// SetIsConnected sets the value of IsConnected.
func (s *UpdateNodeResponseDtoResponse) SetIsConnected(val bool) {
	s.IsConnected = val
}

// SetIsDisabled sets the value of IsDisabled.
func (s *UpdateNodeResponseDtoResponse) SetIsDisabled(val bool) {
	s.IsDisabled = val
}

// SetIsConnecting sets the value of IsConnecting.
func (s *UpdateNodeResponseDtoResponse) SetIsConnecting(val bool) {
	s.IsConnecting = val
}

// SetIsNodeOnline sets the value of IsNodeOnline.
func (s *UpdateNodeResponseDtoResponse) SetIsNodeOnline(val bool) {
	s.IsNodeOnline = val
}

// SetIsXrayRunning sets the value of IsXrayRunning.
func (s *UpdateNodeResponseDtoResponse) SetIsXrayRunning(val bool) {
	s.IsXrayRunning = val
}

// SetLastStatusChange sets the value of LastStatusChange.
func (s *UpdateNodeResponseDtoResponse) SetLastStatusChange(val NilDateTime) {
	s.LastStatusChange = val
}

// SetLastStatusMessage sets the value of LastStatusMessage.
func (s *UpdateNodeResponseDtoResponse) SetLastStatusMessage(val NilString) {
	s.LastStatusMessage = val
}

// SetXrayVersion sets the value of XrayVersion.
func (s *UpdateNodeResponseDtoResponse) SetXrayVersion(val NilString) {
	s.XrayVersion = val
}

// SetXrayUptime sets the value of XrayUptime.
func (s *UpdateNodeResponseDtoResponse) SetXrayUptime(val string) {
	s.XrayUptime = val
}

// SetIsTrafficTrackingActive sets the value of IsTrafficTrackingActive.
func (s *UpdateNodeResponseDtoResponse) SetIsTrafficTrackingActive(val bool) {
	s.IsTrafficTrackingActive = val
}

// SetTrafficResetDay sets the value of TrafficResetDay.
func (s *UpdateNodeResponseDtoResponse) SetTrafficResetDay(val NilInt) {
	s.TrafficResetDay = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *UpdateNodeResponseDtoResponse) SetTrafficLimitBytes(val NilFloat64) {
	s.TrafficLimitBytes = val
}

// SetTrafficUsedBytes sets the value of TrafficUsedBytes.
func (s *UpdateNodeResponseDtoResponse) SetTrafficUsedBytes(val NilFloat64) {
	s.TrafficUsedBytes = val
}

// SetNotifyPercent sets the value of NotifyPercent.
func (s *UpdateNodeResponseDtoResponse) SetNotifyPercent(val NilInt) {
	s.NotifyPercent = val
}

// SetUsersOnline sets the value of UsersOnline.
func (s *UpdateNodeResponseDtoResponse) SetUsersOnline(val NilInt) {
	s.UsersOnline = val
}

// SetViewPosition sets the value of ViewPosition.
func (s *UpdateNodeResponseDtoResponse) SetViewPosition(val int) {
	s.ViewPosition = val
}

// SetCountryCode sets the value of CountryCode.
func (s *UpdateNodeResponseDtoResponse) SetCountryCode(val string) {
	s.CountryCode = val
}

// SetConsumptionMultiplier sets the value of ConsumptionMultiplier.
func (s *UpdateNodeResponseDtoResponse) SetConsumptionMultiplier(val float64) {
	s.ConsumptionMultiplier = val
}

// SetCpuCount sets the value of CpuCount.
func (s *UpdateNodeResponseDtoResponse) SetCpuCount(val NilInt) {
	s.CpuCount = val
}

// SetCpuModel sets the value of CpuModel.
func (s *UpdateNodeResponseDtoResponse) SetCpuModel(val NilString) {
	s.CpuModel = val
}

// SetTotalRam sets the value of TotalRam.
func (s *UpdateNodeResponseDtoResponse) SetTotalRam(val NilString) {
	s.TotalRam = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UpdateNodeResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UpdateNodeResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetExcludedInbounds sets the value of ExcludedInbounds.
func (s *UpdateNodeResponseDtoResponse) SetExcludedInbounds(val []UpdateNodeResponseDtoResponseExcludedInboundsItem) {
	s.ExcludedInbounds = val
}

type UpdateNodeResponseDtoResponseExcludedInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *UpdateNodeResponseDtoResponseExcludedInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *UpdateNodeResponseDtoResponseExcludedInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *UpdateNodeResponseDtoResponseExcludedInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *UpdateNodeResponseDtoResponseExcludedInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *UpdateNodeResponseDtoResponseExcludedInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *UpdateNodeResponseDtoResponseExcludedInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *UpdateNodeResponseDtoResponseExcludedInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *UpdateNodeResponseDtoResponseExcludedInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *UpdateNodeResponseDtoResponseExcludedInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *UpdateNodeResponseDtoResponseExcludedInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

// Ref: #/components/schemas/UpdateSubscriptionSettingsRequestDto
type UpdateSubscriptionSettingsRequestDto struct {
	UUID                          uuid.UUID                                                    `json:"uuid"`
	ProfileTitle                  OptString                                                    `json:"profileTitle"`
	SupportLink                   OptString                                                    `json:"supportLink"`
	ProfileUpdateInterval         OptInt                                                       `json:"profileUpdateInterval"`
	IsProfileWebpageUrlEnabled    OptBool                                                      `json:"isProfileWebpageUrlEnabled"`
	ServeJsonAtBaseSubscription   OptBool                                                      `json:"serveJsonAtBaseSubscription"`
	AddUsernameToBaseSubscription OptBool                                                      `json:"addUsernameToBaseSubscription"`
	IsShowCustomRemarks           OptBool                                                      `json:"isShowCustomRemarks"`
	HappAnnounce                  OptNilString                                                 `json:"happAnnounce"`
	HappRouting                   OptNilString                                                 `json:"happRouting"`
	ExpiredUsersRemarks           []string                                                     `json:"expiredUsersRemarks"`
	LimitedUsersRemarks           []string                                                     `json:"limitedUsersRemarks"`
	DisabledUsersRemarks          []string                                                     `json:"disabledUsersRemarks"`
	CustomResponseHeaders         OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders `json:"customResponseHeaders"`
}

// GetUUID returns the value of UUID.
func (s *UpdateSubscriptionSettingsRequestDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProfileTitle returns the value of ProfileTitle.
func (s *UpdateSubscriptionSettingsRequestDto) GetProfileTitle() OptString {
	return s.ProfileTitle
}

// GetSupportLink returns the value of SupportLink.
func (s *UpdateSubscriptionSettingsRequestDto) GetSupportLink() OptString {
	return s.SupportLink
}

// GetProfileUpdateInterval returns the value of ProfileUpdateInterval.
func (s *UpdateSubscriptionSettingsRequestDto) GetProfileUpdateInterval() OptInt {
	return s.ProfileUpdateInterval
}

// GetIsProfileWebpageUrlEnabled returns the value of IsProfileWebpageUrlEnabled.
func (s *UpdateSubscriptionSettingsRequestDto) GetIsProfileWebpageUrlEnabled() OptBool {
	return s.IsProfileWebpageUrlEnabled
}

// GetServeJsonAtBaseSubscription returns the value of ServeJsonAtBaseSubscription.
func (s *UpdateSubscriptionSettingsRequestDto) GetServeJsonAtBaseSubscription() OptBool {
	return s.ServeJsonAtBaseSubscription
}

// GetAddUsernameToBaseSubscription returns the value of AddUsernameToBaseSubscription.
func (s *UpdateSubscriptionSettingsRequestDto) GetAddUsernameToBaseSubscription() OptBool {
	return s.AddUsernameToBaseSubscription
}

// GetIsShowCustomRemarks returns the value of IsShowCustomRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) GetIsShowCustomRemarks() OptBool {
	return s.IsShowCustomRemarks
}

// GetHappAnnounce returns the value of HappAnnounce.
func (s *UpdateSubscriptionSettingsRequestDto) GetHappAnnounce() OptNilString {
	return s.HappAnnounce
}

// GetHappRouting returns the value of HappRouting.
func (s *UpdateSubscriptionSettingsRequestDto) GetHappRouting() OptNilString {
	return s.HappRouting
}

// GetExpiredUsersRemarks returns the value of ExpiredUsersRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) GetExpiredUsersRemarks() []string {
	return s.ExpiredUsersRemarks
}

// GetLimitedUsersRemarks returns the value of LimitedUsersRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) GetLimitedUsersRemarks() []string {
	return s.LimitedUsersRemarks
}

// GetDisabledUsersRemarks returns the value of DisabledUsersRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) GetDisabledUsersRemarks() []string {
	return s.DisabledUsersRemarks
}

// GetCustomResponseHeaders returns the value of CustomResponseHeaders.
func (s *UpdateSubscriptionSettingsRequestDto) GetCustomResponseHeaders() OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders {
	return s.CustomResponseHeaders
}

// SetUUID sets the value of UUID.
func (s *UpdateSubscriptionSettingsRequestDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProfileTitle sets the value of ProfileTitle.
func (s *UpdateSubscriptionSettingsRequestDto) SetProfileTitle(val OptString) {
	s.ProfileTitle = val
}

// SetSupportLink sets the value of SupportLink.
func (s *UpdateSubscriptionSettingsRequestDto) SetSupportLink(val OptString) {
	s.SupportLink = val
}

// SetProfileUpdateInterval sets the value of ProfileUpdateInterval.
func (s *UpdateSubscriptionSettingsRequestDto) SetProfileUpdateInterval(val OptInt) {
	s.ProfileUpdateInterval = val
}

// SetIsProfileWebpageUrlEnabled sets the value of IsProfileWebpageUrlEnabled.
func (s *UpdateSubscriptionSettingsRequestDto) SetIsProfileWebpageUrlEnabled(val OptBool) {
	s.IsProfileWebpageUrlEnabled = val
}

// SetServeJsonAtBaseSubscription sets the value of ServeJsonAtBaseSubscription.
func (s *UpdateSubscriptionSettingsRequestDto) SetServeJsonAtBaseSubscription(val OptBool) {
	s.ServeJsonAtBaseSubscription = val
}

// SetAddUsernameToBaseSubscription sets the value of AddUsernameToBaseSubscription.
func (s *UpdateSubscriptionSettingsRequestDto) SetAddUsernameToBaseSubscription(val OptBool) {
	s.AddUsernameToBaseSubscription = val
}

// SetIsShowCustomRemarks sets the value of IsShowCustomRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) SetIsShowCustomRemarks(val OptBool) {
	s.IsShowCustomRemarks = val
}

// SetHappAnnounce sets the value of HappAnnounce.
func (s *UpdateSubscriptionSettingsRequestDto) SetHappAnnounce(val OptNilString) {
	s.HappAnnounce = val
}

// SetHappRouting sets the value of HappRouting.
func (s *UpdateSubscriptionSettingsRequestDto) SetHappRouting(val OptNilString) {
	s.HappRouting = val
}

// SetExpiredUsersRemarks sets the value of ExpiredUsersRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) SetExpiredUsersRemarks(val []string) {
	s.ExpiredUsersRemarks = val
}

// SetLimitedUsersRemarks sets the value of LimitedUsersRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) SetLimitedUsersRemarks(val []string) {
	s.LimitedUsersRemarks = val
}

// SetDisabledUsersRemarks sets the value of DisabledUsersRemarks.
func (s *UpdateSubscriptionSettingsRequestDto) SetDisabledUsersRemarks(val []string) {
	s.DisabledUsersRemarks = val
}

// SetCustomResponseHeaders sets the value of CustomResponseHeaders.
func (s *UpdateSubscriptionSettingsRequestDto) SetCustomResponseHeaders(val OptUpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) {
	s.CustomResponseHeaders = val
}

type UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders map[string]string

func (s *UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders) init() UpdateSubscriptionSettingsRequestDtoCustomResponseHeaders {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/UpdateSubscriptionSettingsResponseDto
type UpdateSubscriptionSettingsResponseDto struct {
	Response UpdateSubscriptionSettingsResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *UpdateSubscriptionSettingsResponseDto) GetResponse() UpdateSubscriptionSettingsResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *UpdateSubscriptionSettingsResponseDto) SetResponse(val UpdateSubscriptionSettingsResponseDtoResponse) {
	s.Response = val
}

type UpdateSubscriptionSettingsResponseDtoResponse struct {
	UUID                          uuid.UUID                                                             `json:"uuid"`
	ProfileTitle                  string                                                                `json:"profileTitle"`
	SupportLink                   string                                                                `json:"supportLink"`
	ProfileUpdateInterval         int                                                                   `json:"profileUpdateInterval"`
	IsProfileWebpageUrlEnabled    bool                                                                  `json:"isProfileWebpageUrlEnabled"`
	ServeJsonAtBaseSubscription   bool                                                                  `json:"serveJsonAtBaseSubscription"`
	AddUsernameToBaseSubscription bool                                                                  `json:"addUsernameToBaseSubscription"`
	IsShowCustomRemarks           bool                                                                  `json:"isShowCustomRemarks"`
	HappAnnounce                  NilString                                                             `json:"happAnnounce"`
	HappRouting                   NilString                                                             `json:"happRouting"`
	ExpiredUsersRemarks           []string                                                              `json:"expiredUsersRemarks"`
	LimitedUsersRemarks           []string                                                              `json:"limitedUsersRemarks"`
	DisabledUsersRemarks          []string                                                              `json:"disabledUsersRemarks"`
	CustomResponseHeaders         NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders `json:"customResponseHeaders"`
	CreatedAt                     time.Time                                                             `json:"createdAt"`
	UpdatedAt                     time.Time                                                             `json:"updatedAt"`
}

// GetUUID returns the value of UUID.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetProfileTitle returns the value of ProfileTitle.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetProfileTitle() string {
	return s.ProfileTitle
}

// GetSupportLink returns the value of SupportLink.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetSupportLink() string {
	return s.SupportLink
}

// GetProfileUpdateInterval returns the value of ProfileUpdateInterval.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetProfileUpdateInterval() int {
	return s.ProfileUpdateInterval
}

// GetIsProfileWebpageUrlEnabled returns the value of IsProfileWebpageUrlEnabled.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetIsProfileWebpageUrlEnabled() bool {
	return s.IsProfileWebpageUrlEnabled
}

// GetServeJsonAtBaseSubscription returns the value of ServeJsonAtBaseSubscription.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetServeJsonAtBaseSubscription() bool {
	return s.ServeJsonAtBaseSubscription
}

// GetAddUsernameToBaseSubscription returns the value of AddUsernameToBaseSubscription.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetAddUsernameToBaseSubscription() bool {
	return s.AddUsernameToBaseSubscription
}

// GetIsShowCustomRemarks returns the value of IsShowCustomRemarks.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetIsShowCustomRemarks() bool {
	return s.IsShowCustomRemarks
}

// GetHappAnnounce returns the value of HappAnnounce.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetHappAnnounce() NilString {
	return s.HappAnnounce
}

// GetHappRouting returns the value of HappRouting.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetHappRouting() NilString {
	return s.HappRouting
}

// GetExpiredUsersRemarks returns the value of ExpiredUsersRemarks.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetExpiredUsersRemarks() []string {
	return s.ExpiredUsersRemarks
}

// GetLimitedUsersRemarks returns the value of LimitedUsersRemarks.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetLimitedUsersRemarks() []string {
	return s.LimitedUsersRemarks
}

// GetDisabledUsersRemarks returns the value of DisabledUsersRemarks.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetDisabledUsersRemarks() []string {
	return s.DisabledUsersRemarks
}

// GetCustomResponseHeaders returns the value of CustomResponseHeaders.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetCustomResponseHeaders() NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders {
	return s.CustomResponseHeaders
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetProfileTitle sets the value of ProfileTitle.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetProfileTitle(val string) {
	s.ProfileTitle = val
}

// SetSupportLink sets the value of SupportLink.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetSupportLink(val string) {
	s.SupportLink = val
}

// SetProfileUpdateInterval sets the value of ProfileUpdateInterval.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetProfileUpdateInterval(val int) {
	s.ProfileUpdateInterval = val
}

// SetIsProfileWebpageUrlEnabled sets the value of IsProfileWebpageUrlEnabled.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetIsProfileWebpageUrlEnabled(val bool) {
	s.IsProfileWebpageUrlEnabled = val
}

// SetServeJsonAtBaseSubscription sets the value of ServeJsonAtBaseSubscription.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetServeJsonAtBaseSubscription(val bool) {
	s.ServeJsonAtBaseSubscription = val
}

// SetAddUsernameToBaseSubscription sets the value of AddUsernameToBaseSubscription.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetAddUsernameToBaseSubscription(val bool) {
	s.AddUsernameToBaseSubscription = val
}

// SetIsShowCustomRemarks sets the value of IsShowCustomRemarks.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetIsShowCustomRemarks(val bool) {
	s.IsShowCustomRemarks = val
}

// SetHappAnnounce sets the value of HappAnnounce.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetHappAnnounce(val NilString) {
	s.HappAnnounce = val
}

// SetHappRouting sets the value of HappRouting.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetHappRouting(val NilString) {
	s.HappRouting = val
}

// SetExpiredUsersRemarks sets the value of ExpiredUsersRemarks.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetExpiredUsersRemarks(val []string) {
	s.ExpiredUsersRemarks = val
}

// SetLimitedUsersRemarks sets the value of LimitedUsersRemarks.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetLimitedUsersRemarks(val []string) {
	s.LimitedUsersRemarks = val
}

// SetDisabledUsersRemarks sets the value of DisabledUsersRemarks.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetDisabledUsersRemarks(val []string) {
	s.DisabledUsersRemarks = val
}

// SetCustomResponseHeaders sets the value of CustomResponseHeaders.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetCustomResponseHeaders(val NilUpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) {
	s.CustomResponseHeaders = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UpdateSubscriptionSettingsResponseDtoResponse) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type UpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders map[string]string

func (s *UpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders) init() UpdateSubscriptionSettingsResponseDtoResponseCustomResponseHeaders {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/UpdateTemplateRequestDto
type UpdateTemplateRequestDto struct {
	TemplateType        UpdateTemplateRequestDtoTemplateType  `json:"templateType"`
	TemplateJson        *UpdateTemplateRequestDtoTemplateJson `json:"templateJson"`
	EncodedTemplateYaml OptString                             `json:"encodedTemplateYaml"`
}

// GetTemplateType returns the value of TemplateType.
func (s *UpdateTemplateRequestDto) GetTemplateType() UpdateTemplateRequestDtoTemplateType {
	return s.TemplateType
}

// GetTemplateJson returns the value of TemplateJson.
func (s *UpdateTemplateRequestDto) GetTemplateJson() *UpdateTemplateRequestDtoTemplateJson {
	return s.TemplateJson
}

// GetEncodedTemplateYaml returns the value of EncodedTemplateYaml.
func (s *UpdateTemplateRequestDto) GetEncodedTemplateYaml() OptString {
	return s.EncodedTemplateYaml
}

// SetTemplateType sets the value of TemplateType.
func (s *UpdateTemplateRequestDto) SetTemplateType(val UpdateTemplateRequestDtoTemplateType) {
	s.TemplateType = val
}

// SetTemplateJson sets the value of TemplateJson.
func (s *UpdateTemplateRequestDto) SetTemplateJson(val *UpdateTemplateRequestDtoTemplateJson) {
	s.TemplateJson = val
}

// SetEncodedTemplateYaml sets the value of EncodedTemplateYaml.
func (s *UpdateTemplateRequestDto) SetEncodedTemplateYaml(val OptString) {
	s.EncodedTemplateYaml = val
}

type UpdateTemplateRequestDtoTemplateJson struct{}

type UpdateTemplateRequestDtoTemplateType string

const (
	UpdateTemplateRequestDtoTemplateTypeSTASH         UpdateTemplateRequestDtoTemplateType = "STASH"
	UpdateTemplateRequestDtoTemplateTypeSINGBOX       UpdateTemplateRequestDtoTemplateType = "SINGBOX"
	UpdateTemplateRequestDtoTemplateTypeSINGBOXLEGACY UpdateTemplateRequestDtoTemplateType = "SINGBOX_LEGACY"
	UpdateTemplateRequestDtoTemplateTypeMIHOMO        UpdateTemplateRequestDtoTemplateType = "MIHOMO"
	UpdateTemplateRequestDtoTemplateTypeXRAYJSON      UpdateTemplateRequestDtoTemplateType = "XRAY_JSON"
	UpdateTemplateRequestDtoTemplateTypeCLASH         UpdateTemplateRequestDtoTemplateType = "CLASH"
)

// AllValues returns all UpdateTemplateRequestDtoTemplateType values.
func (UpdateTemplateRequestDtoTemplateType) AllValues() []UpdateTemplateRequestDtoTemplateType {
	return []UpdateTemplateRequestDtoTemplateType{
		UpdateTemplateRequestDtoTemplateTypeSTASH,
		UpdateTemplateRequestDtoTemplateTypeSINGBOX,
		UpdateTemplateRequestDtoTemplateTypeSINGBOXLEGACY,
		UpdateTemplateRequestDtoTemplateTypeMIHOMO,
		UpdateTemplateRequestDtoTemplateTypeXRAYJSON,
		UpdateTemplateRequestDtoTemplateTypeCLASH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateTemplateRequestDtoTemplateType) MarshalText() ([]byte, error) {
	switch s {
	case UpdateTemplateRequestDtoTemplateTypeSTASH:
		return []byte(s), nil
	case UpdateTemplateRequestDtoTemplateTypeSINGBOX:
		return []byte(s), nil
	case UpdateTemplateRequestDtoTemplateTypeSINGBOXLEGACY:
		return []byte(s), nil
	case UpdateTemplateRequestDtoTemplateTypeMIHOMO:
		return []byte(s), nil
	case UpdateTemplateRequestDtoTemplateTypeXRAYJSON:
		return []byte(s), nil
	case UpdateTemplateRequestDtoTemplateTypeCLASH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateTemplateRequestDtoTemplateType) UnmarshalText(data []byte) error {
	switch UpdateTemplateRequestDtoTemplateType(data) {
	case UpdateTemplateRequestDtoTemplateTypeSTASH:
		*s = UpdateTemplateRequestDtoTemplateTypeSTASH
		return nil
	case UpdateTemplateRequestDtoTemplateTypeSINGBOX:
		*s = UpdateTemplateRequestDtoTemplateTypeSINGBOX
		return nil
	case UpdateTemplateRequestDtoTemplateTypeSINGBOXLEGACY:
		*s = UpdateTemplateRequestDtoTemplateTypeSINGBOXLEGACY
		return nil
	case UpdateTemplateRequestDtoTemplateTypeMIHOMO:
		*s = UpdateTemplateRequestDtoTemplateTypeMIHOMO
		return nil
	case UpdateTemplateRequestDtoTemplateTypeXRAYJSON:
		*s = UpdateTemplateRequestDtoTemplateTypeXRAYJSON
		return nil
	case UpdateTemplateRequestDtoTemplateTypeCLASH:
		*s = UpdateTemplateRequestDtoTemplateTypeCLASH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UpdateTemplateResponseDto
type UpdateTemplateResponseDto struct {
	Response UpdateTemplateResponseDtoResponse `json:"response"`
}

// GetResponse returns the value of Response.
func (s *UpdateTemplateResponseDto) GetResponse() UpdateTemplateResponseDtoResponse {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *UpdateTemplateResponseDto) SetResponse(val UpdateTemplateResponseDtoResponse) {
	s.Response = val
}

type UpdateTemplateResponseDtoResponse struct {
	UUID                uuid.UUID                                     `json:"uuid"`
	TemplateType        UpdateTemplateResponseDtoResponseTemplateType `json:"templateType"`
	TemplateJson        jx.Raw                                        `json:"templateJson"`
	EncodedTemplateYaml NilString                                     `json:"encodedTemplateYaml"`
}

// GetUUID returns the value of UUID.
func (s *UpdateTemplateResponseDtoResponse) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTemplateType returns the value of TemplateType.
func (s *UpdateTemplateResponseDtoResponse) GetTemplateType() UpdateTemplateResponseDtoResponseTemplateType {
	return s.TemplateType
}

// GetTemplateJson returns the value of TemplateJson.
func (s *UpdateTemplateResponseDtoResponse) GetTemplateJson() jx.Raw {
	return s.TemplateJson
}

// GetEncodedTemplateYaml returns the value of EncodedTemplateYaml.
func (s *UpdateTemplateResponseDtoResponse) GetEncodedTemplateYaml() NilString {
	return s.EncodedTemplateYaml
}

// SetUUID sets the value of UUID.
func (s *UpdateTemplateResponseDtoResponse) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTemplateType sets the value of TemplateType.
func (s *UpdateTemplateResponseDtoResponse) SetTemplateType(val UpdateTemplateResponseDtoResponseTemplateType) {
	s.TemplateType = val
}

// SetTemplateJson sets the value of TemplateJson.
func (s *UpdateTemplateResponseDtoResponse) SetTemplateJson(val jx.Raw) {
	s.TemplateJson = val
}

// SetEncodedTemplateYaml sets the value of EncodedTemplateYaml.
func (s *UpdateTemplateResponseDtoResponse) SetEncodedTemplateYaml(val NilString) {
	s.EncodedTemplateYaml = val
}

type UpdateTemplateResponseDtoResponseTemplateType string

const (
	UpdateTemplateResponseDtoResponseTemplateTypeSTASH         UpdateTemplateResponseDtoResponseTemplateType = "STASH"
	UpdateTemplateResponseDtoResponseTemplateTypeSINGBOX       UpdateTemplateResponseDtoResponseTemplateType = "SINGBOX"
	UpdateTemplateResponseDtoResponseTemplateTypeSINGBOXLEGACY UpdateTemplateResponseDtoResponseTemplateType = "SINGBOX_LEGACY"
	UpdateTemplateResponseDtoResponseTemplateTypeMIHOMO        UpdateTemplateResponseDtoResponseTemplateType = "MIHOMO"
	UpdateTemplateResponseDtoResponseTemplateTypeXRAYJSON      UpdateTemplateResponseDtoResponseTemplateType = "XRAY_JSON"
	UpdateTemplateResponseDtoResponseTemplateTypeCLASH         UpdateTemplateResponseDtoResponseTemplateType = "CLASH"
)

// AllValues returns all UpdateTemplateResponseDtoResponseTemplateType values.
func (UpdateTemplateResponseDtoResponseTemplateType) AllValues() []UpdateTemplateResponseDtoResponseTemplateType {
	return []UpdateTemplateResponseDtoResponseTemplateType{
		UpdateTemplateResponseDtoResponseTemplateTypeSTASH,
		UpdateTemplateResponseDtoResponseTemplateTypeSINGBOX,
		UpdateTemplateResponseDtoResponseTemplateTypeSINGBOXLEGACY,
		UpdateTemplateResponseDtoResponseTemplateTypeMIHOMO,
		UpdateTemplateResponseDtoResponseTemplateTypeXRAYJSON,
		UpdateTemplateResponseDtoResponseTemplateTypeCLASH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateTemplateResponseDtoResponseTemplateType) MarshalText() ([]byte, error) {
	switch s {
	case UpdateTemplateResponseDtoResponseTemplateTypeSTASH:
		return []byte(s), nil
	case UpdateTemplateResponseDtoResponseTemplateTypeSINGBOX:
		return []byte(s), nil
	case UpdateTemplateResponseDtoResponseTemplateTypeSINGBOXLEGACY:
		return []byte(s), nil
	case UpdateTemplateResponseDtoResponseTemplateTypeMIHOMO:
		return []byte(s), nil
	case UpdateTemplateResponseDtoResponseTemplateTypeXRAYJSON:
		return []byte(s), nil
	case UpdateTemplateResponseDtoResponseTemplateTypeCLASH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateTemplateResponseDtoResponseTemplateType) UnmarshalText(data []byte) error {
	switch UpdateTemplateResponseDtoResponseTemplateType(data) {
	case UpdateTemplateResponseDtoResponseTemplateTypeSTASH:
		*s = UpdateTemplateResponseDtoResponseTemplateTypeSTASH
		return nil
	case UpdateTemplateResponseDtoResponseTemplateTypeSINGBOX:
		*s = UpdateTemplateResponseDtoResponseTemplateTypeSINGBOX
		return nil
	case UpdateTemplateResponseDtoResponseTemplateTypeSINGBOXLEGACY:
		*s = UpdateTemplateResponseDtoResponseTemplateTypeSINGBOXLEGACY
		return nil
	case UpdateTemplateResponseDtoResponseTemplateTypeMIHOMO:
		*s = UpdateTemplateResponseDtoResponseTemplateTypeMIHOMO
		return nil
	case UpdateTemplateResponseDtoResponseTemplateTypeXRAYJSON:
		*s = UpdateTemplateResponseDtoResponseTemplateTypeXRAYJSON
		return nil
	case UpdateTemplateResponseDtoResponseTemplateTypeCLASH:
		*s = UpdateTemplateResponseDtoResponseTemplateTypeCLASH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UpdateUserRequestDto
type UpdateUserRequestDto struct {
	UUID   uuid.UUID                     `json:"uuid"`
	Status OptUpdateUserRequestDtoStatus `json:"status"`
	// Traffic limit in bytes. 0 - unlimited.
	TrafficLimitBytes OptInt `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy OptUpdateUserRequestDtoTrafficLimitStrategy `json:"trafficLimitStrategy"`
	ActiveUserInbounds   []uuid.UUID                                 `json:"activeUserInbounds"`
	// Expiration date: 2025-01-17T15:38:45.065Z.
	ExpireAt        OptDateTime  `json:"expireAt"`
	Description     OptNilString `json:"description"`
	Tag             OptNilString `json:"tag"`
	TelegramId      OptNilInt    `json:"telegramId"`
	Email           OptNilString `json:"email"`
	HwidDeviceLimit OptNilInt    `json:"hwidDeviceLimit"`
}

// GetUUID returns the value of UUID.
func (s *UpdateUserRequestDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetStatus returns the value of Status.
func (s *UpdateUserRequestDto) GetStatus() OptUpdateUserRequestDtoStatus {
	return s.Status
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *UpdateUserRequestDto) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *UpdateUserRequestDto) GetTrafficLimitStrategy() OptUpdateUserRequestDtoTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetActiveUserInbounds returns the value of ActiveUserInbounds.
func (s *UpdateUserRequestDto) GetActiveUserInbounds() []uuid.UUID {
	return s.ActiveUserInbounds
}

// GetExpireAt returns the value of ExpireAt.
func (s *UpdateUserRequestDto) GetExpireAt() OptDateTime {
	return s.ExpireAt
}

// GetDescription returns the value of Description.
func (s *UpdateUserRequestDto) GetDescription() OptNilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *UpdateUserRequestDto) GetTag() OptNilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *UpdateUserRequestDto) GetTelegramId() OptNilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *UpdateUserRequestDto) GetEmail() OptNilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *UpdateUserRequestDto) GetHwidDeviceLimit() OptNilInt {
	return s.HwidDeviceLimit
}

// SetUUID sets the value of UUID.
func (s *UpdateUserRequestDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetStatus sets the value of Status.
func (s *UpdateUserRequestDto) SetStatus(val OptUpdateUserRequestDtoStatus) {
	s.Status = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *UpdateUserRequestDto) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *UpdateUserRequestDto) SetTrafficLimitStrategy(val OptUpdateUserRequestDtoTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetActiveUserInbounds sets the value of ActiveUserInbounds.
func (s *UpdateUserRequestDto) SetActiveUserInbounds(val []uuid.UUID) {
	s.ActiveUserInbounds = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *UpdateUserRequestDto) SetExpireAt(val OptDateTime) {
	s.ExpireAt = val
}

// SetDescription sets the value of Description.
func (s *UpdateUserRequestDto) SetDescription(val OptNilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *UpdateUserRequestDto) SetTag(val OptNilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *UpdateUserRequestDto) SetTelegramId(val OptNilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *UpdateUserRequestDto) SetEmail(val OptNilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *UpdateUserRequestDto) SetHwidDeviceLimit(val OptNilInt) {
	s.HwidDeviceLimit = val
}

type UpdateUserRequestDtoStatus string

const (
	UpdateUserRequestDtoStatusACTIVE   UpdateUserRequestDtoStatus = "ACTIVE"
	UpdateUserRequestDtoStatusDISABLED UpdateUserRequestDtoStatus = "DISABLED"
	UpdateUserRequestDtoStatusLIMITED  UpdateUserRequestDtoStatus = "LIMITED"
	UpdateUserRequestDtoStatusEXPIRED  UpdateUserRequestDtoStatus = "EXPIRED"
)

// AllValues returns all UpdateUserRequestDtoStatus values.
func (UpdateUserRequestDtoStatus) AllValues() []UpdateUserRequestDtoStatus {
	return []UpdateUserRequestDtoStatus{
		UpdateUserRequestDtoStatusACTIVE,
		UpdateUserRequestDtoStatusDISABLED,
		UpdateUserRequestDtoStatusLIMITED,
		UpdateUserRequestDtoStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateUserRequestDtoStatus) MarshalText() ([]byte, error) {
	switch s {
	case UpdateUserRequestDtoStatusACTIVE:
		return []byte(s), nil
	case UpdateUserRequestDtoStatusDISABLED:
		return []byte(s), nil
	case UpdateUserRequestDtoStatusLIMITED:
		return []byte(s), nil
	case UpdateUserRequestDtoStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateUserRequestDtoStatus) UnmarshalText(data []byte) error {
	switch UpdateUserRequestDtoStatus(data) {
	case UpdateUserRequestDtoStatusACTIVE:
		*s = UpdateUserRequestDtoStatusACTIVE
		return nil
	case UpdateUserRequestDtoStatusDISABLED:
		*s = UpdateUserRequestDtoStatusDISABLED
		return nil
	case UpdateUserRequestDtoStatusLIMITED:
		*s = UpdateUserRequestDtoStatusLIMITED
		return nil
	case UpdateUserRequestDtoStatusEXPIRED:
		*s = UpdateUserRequestDtoStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type UpdateUserRequestDtoTrafficLimitStrategy string

const (
	UpdateUserRequestDtoTrafficLimitStrategyNORESET UpdateUserRequestDtoTrafficLimitStrategy = "NO_RESET"
	UpdateUserRequestDtoTrafficLimitStrategyDAY     UpdateUserRequestDtoTrafficLimitStrategy = "DAY"
	UpdateUserRequestDtoTrafficLimitStrategyWEEK    UpdateUserRequestDtoTrafficLimitStrategy = "WEEK"
	UpdateUserRequestDtoTrafficLimitStrategyMONTH   UpdateUserRequestDtoTrafficLimitStrategy = "MONTH"
)

// AllValues returns all UpdateUserRequestDtoTrafficLimitStrategy values.
func (UpdateUserRequestDtoTrafficLimitStrategy) AllValues() []UpdateUserRequestDtoTrafficLimitStrategy {
	return []UpdateUserRequestDtoTrafficLimitStrategy{
		UpdateUserRequestDtoTrafficLimitStrategyNORESET,
		UpdateUserRequestDtoTrafficLimitStrategyDAY,
		UpdateUserRequestDtoTrafficLimitStrategyWEEK,
		UpdateUserRequestDtoTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateUserRequestDtoTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case UpdateUserRequestDtoTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case UpdateUserRequestDtoTrafficLimitStrategyDAY:
		return []byte(s), nil
	case UpdateUserRequestDtoTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case UpdateUserRequestDtoTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateUserRequestDtoTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch UpdateUserRequestDtoTrafficLimitStrategy(data) {
	case UpdateUserRequestDtoTrafficLimitStrategyNORESET:
		*s = UpdateUserRequestDtoTrafficLimitStrategyNORESET
		return nil
	case UpdateUserRequestDtoTrafficLimitStrategyDAY:
		*s = UpdateUserRequestDtoTrafficLimitStrategyDAY
		return nil
	case UpdateUserRequestDtoTrafficLimitStrategyWEEK:
		*s = UpdateUserRequestDtoTrafficLimitStrategyWEEK
		return nil
	case UpdateUserRequestDtoTrafficLimitStrategyMONTH:
		*s = UpdateUserRequestDtoTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UserDto
type UserDto struct {
	UUID                     uuid.UUID        `json:"uuid"`
	SubscriptionUuid         uuid.UUID        `json:"subscriptionUuid"`
	ShortUuid                string           `json:"shortUuid"`
	Username                 string           `json:"username"`
	Status                   OptUserDtoStatus `json:"status"`
	UsedTrafficBytes         float64          `json:"usedTrafficBytes"`
	LifetimeUsedTrafficBytes float64          `json:"lifetimeUsedTrafficBytes"`
	TrafficLimitBytes        OptInt           `json:"trafficLimitBytes"`
	// Available reset periods.
	TrafficLimitStrategy OptUserDtoTrafficLimitStrategy  `json:"trafficLimitStrategy"`
	SubLastUserAgent     NilString                       `json:"subLastUserAgent"`
	SubLastOpenedAt      NilDateTime                     `json:"subLastOpenedAt"`
	ExpireAt             time.Time                       `json:"expireAt"`
	OnlineAt             NilDateTime                     `json:"onlineAt"`
	SubRevokedAt         NilDateTime                     `json:"subRevokedAt"`
	LastTrafficResetAt   NilDateTime                     `json:"lastTrafficResetAt"`
	TrojanPassword       string                          `json:"trojanPassword"`
	VlessUuid            uuid.UUID                       `json:"vlessUuid"`
	SsPassword           string                          `json:"ssPassword"`
	Description          NilString                       `json:"description"`
	Tag                  OptNilString                    `json:"tag"`
	TelegramId           NilInt                          `json:"telegramId"`
	Email                NilString                       `json:"email"`
	HwidDeviceLimit      NilInt                          `json:"hwidDeviceLimit"`
	CreatedAt            time.Time                       `json:"createdAt"`
	UpdatedAt            time.Time                       `json:"updatedAt"`
	ActiveUserInbounds   []UserDtoActiveUserInboundsItem `json:"activeUserInbounds"`
	SubscriptionUrl      string                          `json:"subscriptionUrl"`
	LastConnectedNode    NilUserDtoLastConnectedNode     `json:"lastConnectedNode"`
	Happ                 UserDtoHapp                     `json:"happ"`
}

// GetUUID returns the value of UUID.
func (s *UserDto) GetUUID() uuid.UUID {
	return s.UUID
}

// GetSubscriptionUuid returns the value of SubscriptionUuid.
func (s *UserDto) GetSubscriptionUuid() uuid.UUID {
	return s.SubscriptionUuid
}

// GetShortUuid returns the value of ShortUuid.
func (s *UserDto) GetShortUuid() string {
	return s.ShortUuid
}

// GetUsername returns the value of Username.
func (s *UserDto) GetUsername() string {
	return s.Username
}

// GetStatus returns the value of Status.
func (s *UserDto) GetStatus() OptUserDtoStatus {
	return s.Status
}

// GetUsedTrafficBytes returns the value of UsedTrafficBytes.
func (s *UserDto) GetUsedTrafficBytes() float64 {
	return s.UsedTrafficBytes
}

// GetLifetimeUsedTrafficBytes returns the value of LifetimeUsedTrafficBytes.
func (s *UserDto) GetLifetimeUsedTrafficBytes() float64 {
	return s.LifetimeUsedTrafficBytes
}

// GetTrafficLimitBytes returns the value of TrafficLimitBytes.
func (s *UserDto) GetTrafficLimitBytes() OptInt {
	return s.TrafficLimitBytes
}

// GetTrafficLimitStrategy returns the value of TrafficLimitStrategy.
func (s *UserDto) GetTrafficLimitStrategy() OptUserDtoTrafficLimitStrategy {
	return s.TrafficLimitStrategy
}

// GetSubLastUserAgent returns the value of SubLastUserAgent.
func (s *UserDto) GetSubLastUserAgent() NilString {
	return s.SubLastUserAgent
}

// GetSubLastOpenedAt returns the value of SubLastOpenedAt.
func (s *UserDto) GetSubLastOpenedAt() NilDateTime {
	return s.SubLastOpenedAt
}

// GetExpireAt returns the value of ExpireAt.
func (s *UserDto) GetExpireAt() time.Time {
	return s.ExpireAt
}

// GetOnlineAt returns the value of OnlineAt.
func (s *UserDto) GetOnlineAt() NilDateTime {
	return s.OnlineAt
}

// GetSubRevokedAt returns the value of SubRevokedAt.
func (s *UserDto) GetSubRevokedAt() NilDateTime {
	return s.SubRevokedAt
}

// GetLastTrafficResetAt returns the value of LastTrafficResetAt.
func (s *UserDto) GetLastTrafficResetAt() NilDateTime {
	return s.LastTrafficResetAt
}

// GetTrojanPassword returns the value of TrojanPassword.
func (s *UserDto) GetTrojanPassword() string {
	return s.TrojanPassword
}

// GetVlessUuid returns the value of VlessUuid.
func (s *UserDto) GetVlessUuid() uuid.UUID {
	return s.VlessUuid
}

// GetSsPassword returns the value of SsPassword.
func (s *UserDto) GetSsPassword() string {
	return s.SsPassword
}

// GetDescription returns the value of Description.
func (s *UserDto) GetDescription() NilString {
	return s.Description
}

// GetTag returns the value of Tag.
func (s *UserDto) GetTag() OptNilString {
	return s.Tag
}

// GetTelegramId returns the value of TelegramId.
func (s *UserDto) GetTelegramId() NilInt {
	return s.TelegramId
}

// GetEmail returns the value of Email.
func (s *UserDto) GetEmail() NilString {
	return s.Email
}

// GetHwidDeviceLimit returns the value of HwidDeviceLimit.
func (s *UserDto) GetHwidDeviceLimit() NilInt {
	return s.HwidDeviceLimit
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserDto) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserDto) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetActiveUserInbounds returns the value of ActiveUserInbounds.
func (s *UserDto) GetActiveUserInbounds() []UserDtoActiveUserInboundsItem {
	return s.ActiveUserInbounds
}

// GetSubscriptionUrl returns the value of SubscriptionUrl.
func (s *UserDto) GetSubscriptionUrl() string {
	return s.SubscriptionUrl
}

// GetLastConnectedNode returns the value of LastConnectedNode.
func (s *UserDto) GetLastConnectedNode() NilUserDtoLastConnectedNode {
	return s.LastConnectedNode
}

// GetHapp returns the value of Happ.
func (s *UserDto) GetHapp() UserDtoHapp {
	return s.Happ
}

// SetUUID sets the value of UUID.
func (s *UserDto) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetSubscriptionUuid sets the value of SubscriptionUuid.
func (s *UserDto) SetSubscriptionUuid(val uuid.UUID) {
	s.SubscriptionUuid = val
}

// SetShortUuid sets the value of ShortUuid.
func (s *UserDto) SetShortUuid(val string) {
	s.ShortUuid = val
}

// SetUsername sets the value of Username.
func (s *UserDto) SetUsername(val string) {
	s.Username = val
}

// SetStatus sets the value of Status.
func (s *UserDto) SetStatus(val OptUserDtoStatus) {
	s.Status = val
}

// SetUsedTrafficBytes sets the value of UsedTrafficBytes.
func (s *UserDto) SetUsedTrafficBytes(val float64) {
	s.UsedTrafficBytes = val
}

// SetLifetimeUsedTrafficBytes sets the value of LifetimeUsedTrafficBytes.
func (s *UserDto) SetLifetimeUsedTrafficBytes(val float64) {
	s.LifetimeUsedTrafficBytes = val
}

// SetTrafficLimitBytes sets the value of TrafficLimitBytes.
func (s *UserDto) SetTrafficLimitBytes(val OptInt) {
	s.TrafficLimitBytes = val
}

// SetTrafficLimitStrategy sets the value of TrafficLimitStrategy.
func (s *UserDto) SetTrafficLimitStrategy(val OptUserDtoTrafficLimitStrategy) {
	s.TrafficLimitStrategy = val
}

// SetSubLastUserAgent sets the value of SubLastUserAgent.
func (s *UserDto) SetSubLastUserAgent(val NilString) {
	s.SubLastUserAgent = val
}

// SetSubLastOpenedAt sets the value of SubLastOpenedAt.
func (s *UserDto) SetSubLastOpenedAt(val NilDateTime) {
	s.SubLastOpenedAt = val
}

// SetExpireAt sets the value of ExpireAt.
func (s *UserDto) SetExpireAt(val time.Time) {
	s.ExpireAt = val
}

// SetOnlineAt sets the value of OnlineAt.
func (s *UserDto) SetOnlineAt(val NilDateTime) {
	s.OnlineAt = val
}

// SetSubRevokedAt sets the value of SubRevokedAt.
func (s *UserDto) SetSubRevokedAt(val NilDateTime) {
	s.SubRevokedAt = val
}

// SetLastTrafficResetAt sets the value of LastTrafficResetAt.
func (s *UserDto) SetLastTrafficResetAt(val NilDateTime) {
	s.LastTrafficResetAt = val
}

// SetTrojanPassword sets the value of TrojanPassword.
func (s *UserDto) SetTrojanPassword(val string) {
	s.TrojanPassword = val
}

// SetVlessUuid sets the value of VlessUuid.
func (s *UserDto) SetVlessUuid(val uuid.UUID) {
	s.VlessUuid = val
}

// SetSsPassword sets the value of SsPassword.
func (s *UserDto) SetSsPassword(val string) {
	s.SsPassword = val
}

// SetDescription sets the value of Description.
func (s *UserDto) SetDescription(val NilString) {
	s.Description = val
}

// SetTag sets the value of Tag.
func (s *UserDto) SetTag(val OptNilString) {
	s.Tag = val
}

// SetTelegramId sets the value of TelegramId.
func (s *UserDto) SetTelegramId(val NilInt) {
	s.TelegramId = val
}

// SetEmail sets the value of Email.
func (s *UserDto) SetEmail(val NilString) {
	s.Email = val
}

// SetHwidDeviceLimit sets the value of HwidDeviceLimit.
func (s *UserDto) SetHwidDeviceLimit(val NilInt) {
	s.HwidDeviceLimit = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserDto) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserDto) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetActiveUserInbounds sets the value of ActiveUserInbounds.
func (s *UserDto) SetActiveUserInbounds(val []UserDtoActiveUserInboundsItem) {
	s.ActiveUserInbounds = val
}

// SetSubscriptionUrl sets the value of SubscriptionUrl.
func (s *UserDto) SetSubscriptionUrl(val string) {
	s.SubscriptionUrl = val
}

// SetLastConnectedNode sets the value of LastConnectedNode.
func (s *UserDto) SetLastConnectedNode(val NilUserDtoLastConnectedNode) {
	s.LastConnectedNode = val
}

// SetHapp sets the value of Happ.
func (s *UserDto) SetHapp(val UserDtoHapp) {
	s.Happ = val
}

type UserDtoActiveUserInboundsItem struct {
	UUID     uuid.UUID `json:"uuid"`
	Tag      string    `json:"tag"`
	Type     string    `json:"type"`
	Network  NilString `json:"network"`
	Security NilString `json:"security"`
}

// GetUUID returns the value of UUID.
func (s *UserDtoActiveUserInboundsItem) GetUUID() uuid.UUID {
	return s.UUID
}

// GetTag returns the value of Tag.
func (s *UserDtoActiveUserInboundsItem) GetTag() string {
	return s.Tag
}

// GetType returns the value of Type.
func (s *UserDtoActiveUserInboundsItem) GetType() string {
	return s.Type
}

// GetNetwork returns the value of Network.
func (s *UserDtoActiveUserInboundsItem) GetNetwork() NilString {
	return s.Network
}

// GetSecurity returns the value of Security.
func (s *UserDtoActiveUserInboundsItem) GetSecurity() NilString {
	return s.Security
}

// SetUUID sets the value of UUID.
func (s *UserDtoActiveUserInboundsItem) SetUUID(val uuid.UUID) {
	s.UUID = val
}

// SetTag sets the value of Tag.
func (s *UserDtoActiveUserInboundsItem) SetTag(val string) {
	s.Tag = val
}

// SetType sets the value of Type.
func (s *UserDtoActiveUserInboundsItem) SetType(val string) {
	s.Type = val
}

// SetNetwork sets the value of Network.
func (s *UserDtoActiveUserInboundsItem) SetNetwork(val NilString) {
	s.Network = val
}

// SetSecurity sets the value of Security.
func (s *UserDtoActiveUserInboundsItem) SetSecurity(val NilString) {
	s.Security = val
}

type UserDtoHapp struct {
	CryptoLink string `json:"cryptoLink"`
}

// GetCryptoLink returns the value of CryptoLink.
func (s *UserDtoHapp) GetCryptoLink() string {
	return s.CryptoLink
}

// SetCryptoLink sets the value of CryptoLink.
func (s *UserDtoHapp) SetCryptoLink(val string) {
	s.CryptoLink = val
}

type UserDtoLastConnectedNode struct {
	ConnectedAt time.Time `json:"connectedAt"`
	NodeName    string    `json:"nodeName"`
}

// GetConnectedAt returns the value of ConnectedAt.
func (s *UserDtoLastConnectedNode) GetConnectedAt() time.Time {
	return s.ConnectedAt
}

// GetNodeName returns the value of NodeName.
func (s *UserDtoLastConnectedNode) GetNodeName() string {
	return s.NodeName
}

// SetConnectedAt sets the value of ConnectedAt.
func (s *UserDtoLastConnectedNode) SetConnectedAt(val time.Time) {
	s.ConnectedAt = val
}

// SetNodeName sets the value of NodeName.
func (s *UserDtoLastConnectedNode) SetNodeName(val string) {
	s.NodeName = val
}

type UserDtoStatus string

const (
	UserDtoStatusACTIVE   UserDtoStatus = "ACTIVE"
	UserDtoStatusDISABLED UserDtoStatus = "DISABLED"
	UserDtoStatusLIMITED  UserDtoStatus = "LIMITED"
	UserDtoStatusEXPIRED  UserDtoStatus = "EXPIRED"
)

// AllValues returns all UserDtoStatus values.
func (UserDtoStatus) AllValues() []UserDtoStatus {
	return []UserDtoStatus{
		UserDtoStatusACTIVE,
		UserDtoStatusDISABLED,
		UserDtoStatusLIMITED,
		UserDtoStatusEXPIRED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserDtoStatus) MarshalText() ([]byte, error) {
	switch s {
	case UserDtoStatusACTIVE:
		return []byte(s), nil
	case UserDtoStatusDISABLED:
		return []byte(s), nil
	case UserDtoStatusLIMITED:
		return []byte(s), nil
	case UserDtoStatusEXPIRED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserDtoStatus) UnmarshalText(data []byte) error {
	switch UserDtoStatus(data) {
	case UserDtoStatusACTIVE:
		*s = UserDtoStatusACTIVE
		return nil
	case UserDtoStatusDISABLED:
		*s = UserDtoStatusDISABLED
		return nil
	case UserDtoStatusLIMITED:
		*s = UserDtoStatusLIMITED
		return nil
	case UserDtoStatusEXPIRED:
		*s = UserDtoStatusEXPIRED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Available reset periods.
type UserDtoTrafficLimitStrategy string

const (
	UserDtoTrafficLimitStrategyNORESET UserDtoTrafficLimitStrategy = "NO_RESET"
	UserDtoTrafficLimitStrategyDAY     UserDtoTrafficLimitStrategy = "DAY"
	UserDtoTrafficLimitStrategyWEEK    UserDtoTrafficLimitStrategy = "WEEK"
	UserDtoTrafficLimitStrategyMONTH   UserDtoTrafficLimitStrategy = "MONTH"
)

// AllValues returns all UserDtoTrafficLimitStrategy values.
func (UserDtoTrafficLimitStrategy) AllValues() []UserDtoTrafficLimitStrategy {
	return []UserDtoTrafficLimitStrategy{
		UserDtoTrafficLimitStrategyNORESET,
		UserDtoTrafficLimitStrategyDAY,
		UserDtoTrafficLimitStrategyWEEK,
		UserDtoTrafficLimitStrategyMONTH,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserDtoTrafficLimitStrategy) MarshalText() ([]byte, error) {
	switch s {
	case UserDtoTrafficLimitStrategyNORESET:
		return []byte(s), nil
	case UserDtoTrafficLimitStrategyDAY:
		return []byte(s), nil
	case UserDtoTrafficLimitStrategyWEEK:
		return []byte(s), nil
	case UserDtoTrafficLimitStrategyMONTH:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserDtoTrafficLimitStrategy) UnmarshalText(data []byte) error {
	switch UserDtoTrafficLimitStrategy(data) {
	case UserDtoTrafficLimitStrategyNORESET:
		*s = UserDtoTrafficLimitStrategyNORESET
		return nil
	case UserDtoTrafficLimitStrategyDAY:
		*s = UserDtoTrafficLimitStrategyDAY
		return nil
	case UserDtoTrafficLimitStrategyWEEK:
		*s = UserDtoTrafficLimitStrategyWEEK
		return nil
	case UserDtoTrafficLimitStrategyMONTH:
		*s = UserDtoTrafficLimitStrategyMONTH
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UserResponseDto
type UserResponseDto struct {
	Response UserDto `json:"response"`
}

// GetResponse returns the value of Response.
func (s *UserResponseDto) GetResponse() UserDto {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *UserResponseDto) SetResponse(val UserDto) {
	s.Response = val
}

func (*UserResponseDto) usersControllerGetUserByShortUuidRes()        {}
func (*UserResponseDto) usersControllerGetUserBySubscriptionUuidRes() {}
func (*UserResponseDto) usersControllerGetUserByUsernameRes()         {}
func (*UserResponseDto) usersControllerGetUsersByEmailRes()           {}

// UsersControllerActivateAllInboundsNotFound is response for UsersControllerActivateAllInbounds operation.
type UsersControllerActivateAllInboundsNotFound struct{}

func (*UsersControllerActivateAllInboundsNotFound) usersControllerActivateAllInboundsRes() {}

// UsersControllerDeleteUserNotFound is response for UsersControllerDeleteUser operation.
type UsersControllerDeleteUserNotFound struct{}

func (*UsersControllerDeleteUserNotFound) usersControllerDeleteUserRes() {}

// UsersControllerDisableUserNotFound is response for UsersControllerDisableUser operation.
type UsersControllerDisableUserNotFound struct{}

func (*UsersControllerDisableUserNotFound) usersControllerDisableUserRes() {}

// UsersControllerEnableUserNotFound is response for UsersControllerEnableUser operation.
type UsersControllerEnableUserNotFound struct{}

func (*UsersControllerEnableUserNotFound) usersControllerEnableUserRes() {}

// UsersControllerGetUserByShortUuidNotFound is response for UsersControllerGetUserByShortUuid operation.
type UsersControllerGetUserByShortUuidNotFound struct{}

func (*UsersControllerGetUserByShortUuidNotFound) usersControllerGetUserByShortUuidRes() {}

// UsersControllerGetUserBySubscriptionUuidNotFound is response for UsersControllerGetUserBySubscriptionUuid operation.
type UsersControllerGetUserBySubscriptionUuidNotFound struct{}

func (*UsersControllerGetUserBySubscriptionUuidNotFound) usersControllerGetUserBySubscriptionUuidRes() {
}

// UsersControllerGetUserByTelegramIdNotFound is response for UsersControllerGetUserByTelegramId operation.
type UsersControllerGetUserByTelegramIdNotFound struct{}

func (*UsersControllerGetUserByTelegramIdNotFound) usersControllerGetUserByTelegramIdRes() {}

// UsersControllerGetUserByUsernameNotFound is response for UsersControllerGetUserByUsername operation.
type UsersControllerGetUserByUsernameNotFound struct{}

func (*UsersControllerGetUserByUsernameNotFound) usersControllerGetUserByUsernameRes() {}

// UsersControllerGetUserByUuidNotFound is response for UsersControllerGetUserByUuid operation.
type UsersControllerGetUserByUuidNotFound struct{}

func (*UsersControllerGetUserByUuidNotFound) usersControllerGetUserByUuidRes() {}

// UsersControllerGetUsersByEmailNotFound is response for UsersControllerGetUsersByEmail operation.
type UsersControllerGetUsersByEmailNotFound struct{}

func (*UsersControllerGetUsersByEmailNotFound) usersControllerGetUsersByEmailRes() {}

// UsersControllerGetUsersByTagNotFound is response for UsersControllerGetUsersByTag operation.
type UsersControllerGetUsersByTagNotFound struct{}

func (*UsersControllerGetUsersByTagNotFound) usersControllerGetUsersByTagRes() {}

// UsersControllerResetUserTrafficNotFound is response for UsersControllerResetUserTraffic operation.
type UsersControllerResetUserTrafficNotFound struct{}

func (*UsersControllerResetUserTrafficNotFound) usersControllerResetUserTrafficRes() {}

// UsersControllerRevokeUserSubscriptionNotFound is response for UsersControllerRevokeUserSubscription operation.
type UsersControllerRevokeUserSubscriptionNotFound struct{}

func (*UsersControllerRevokeUserSubscriptionNotFound) usersControllerRevokeUserSubscriptionRes() {}

// Ref: #/components/schemas/UsersDto
type UsersDto struct {
	Response []UserDto `json:"response"`
}

// GetResponse returns the value of Response.
func (s *UsersDto) GetResponse() []UserDto {
	return s.Response
}

// SetResponse sets the value of Response.
func (s *UsersDto) SetResponse(val []UserDto) {
	s.Response = val
}

func (*UsersDto) usersControllerGetUserByTelegramIdRes() {}

// UsersStatsControllerGetUserUsageByRangeNotFound is response for UsersStatsControllerGetUserUsageByRange operation.
type UsersStatsControllerGetUserUsageByRangeNotFound struct{}

func (*UsersStatsControllerGetUserUsageByRangeNotFound) usersStatsControllerGetUserUsageByRangeRes() {
}

// XrayConfigControllerGetConfigBadRequest is response for XrayConfigControllerGetConfig operation.
type XrayConfigControllerGetConfigBadRequest struct{}

func (*XrayConfigControllerGetConfigBadRequest) xrayConfigControllerGetConfigRes() {}

// XrayConfigControllerUpdateConfigBadRequest is response for XrayConfigControllerUpdateConfig operation.
type XrayConfigControllerUpdateConfigBadRequest struct{}

func (*XrayConfigControllerUpdateConfigBadRequest) xrayConfigControllerUpdateConfigRes() {}
